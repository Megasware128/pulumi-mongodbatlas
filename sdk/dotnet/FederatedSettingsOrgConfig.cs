// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    [MongodbatlasResourceType("mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig")]
    public partial class FederatedSettingsOrgConfig : Pulumi.CustomResource
    {
        [Output("domainAllowLists")]
        public Output<ImmutableArray<string>> DomainAllowLists { get; private set; } = null!;

        [Output("domainRestrictionEnabled")]
        public Output<bool> DomainRestrictionEnabled { get; private set; } = null!;

        [Output("federationSettingsId")]
        public Output<string> FederationSettingsId { get; private set; } = null!;

        [Output("identityProviderId")]
        public Output<string> IdentityProviderId { get; private set; } = null!;

        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        [Output("postAuthRoleGrants")]
        public Output<ImmutableArray<string>> PostAuthRoleGrants { get; private set; } = null!;


        /// <summary>
        /// Create a FederatedSettingsOrgConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FederatedSettingsOrgConfig(string name, FederatedSettingsOrgConfigArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig", name, args ?? new FederatedSettingsOrgConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FederatedSettingsOrgConfig(string name, Input<string> id, FederatedSettingsOrgConfigState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/federatedSettingsOrgConfig:FederatedSettingsOrgConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FederatedSettingsOrgConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FederatedSettingsOrgConfig Get(string name, Input<string> id, FederatedSettingsOrgConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new FederatedSettingsOrgConfig(name, id, state, options);
        }
    }

    public sealed class FederatedSettingsOrgConfigArgs : Pulumi.ResourceArgs
    {
        [Input("domainAllowLists")]
        private InputList<string>? _domainAllowLists;
        public InputList<string> DomainAllowLists
        {
            get => _domainAllowLists ?? (_domainAllowLists = new InputList<string>());
            set => _domainAllowLists = value;
        }

        [Input("domainRestrictionEnabled", required: true)]
        public Input<bool> DomainRestrictionEnabled { get; set; } = null!;

        [Input("federationSettingsId", required: true)]
        public Input<string> FederationSettingsId { get; set; } = null!;

        [Input("identityProviderId", required: true)]
        public Input<string> IdentityProviderId { get; set; } = null!;

        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        [Input("postAuthRoleGrants")]
        private InputList<string>? _postAuthRoleGrants;
        public InputList<string> PostAuthRoleGrants
        {
            get => _postAuthRoleGrants ?? (_postAuthRoleGrants = new InputList<string>());
            set => _postAuthRoleGrants = value;
        }

        public FederatedSettingsOrgConfigArgs()
        {
        }
    }

    public sealed class FederatedSettingsOrgConfigState : Pulumi.ResourceArgs
    {
        [Input("domainAllowLists")]
        private InputList<string>? _domainAllowLists;
        public InputList<string> DomainAllowLists
        {
            get => _domainAllowLists ?? (_domainAllowLists = new InputList<string>());
            set => _domainAllowLists = value;
        }

        [Input("domainRestrictionEnabled")]
        public Input<bool>? DomainRestrictionEnabled { get; set; }

        [Input("federationSettingsId")]
        public Input<string>? FederationSettingsId { get; set; }

        [Input("identityProviderId")]
        public Input<string>? IdentityProviderId { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("postAuthRoleGrants")]
        private InputList<string>? _postAuthRoleGrants;
        public InputList<string> PostAuthRoleGrants
        {
            get => _postAuthRoleGrants ?? (_postAuthRoleGrants = new InputList<string>());
            set => _postAuthRoleGrants = value;
        }

        public FederatedSettingsOrgConfigState()
        {
        }
    }
}
