// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type NetworkPeering struct {
	pulumi.CustomResourceState

	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringOutput `pulumi:"accepterRegionName"`
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock pulumi.StringOutput `pulumi:"atlasCidrBlock"`
	// The Atlas GCP Project ID for the GCP VPC used by your atlas cluster that it is need to set up the reciprocal connection.
	AtlasGcpProjectId pulumi.StringOutput `pulumi:"atlasGcpProjectId"`
	AtlasId           pulumi.StringOutput `pulumi:"atlasId"`
	// The Atlas VPC Name is used by your atlas clister that it is need to set up the reciprocal connection.
	AtlasVpcName pulumi.StringOutput `pulumi:"atlasVpcName"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringOutput `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringOutput `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// Unique identifier of the Atlas VPC container for the region. You can create an Atlas VPC container using the Create Container endpoint. You cannot create more than one container per region. To retrieve a list of container IDs, use the Get list of VPC containers endpoint.
	ContainerId pulumi.StringOutput `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringOutput `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringOutput `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringOutput `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringOutput `pulumi:"networkName"`
	// The Network Peering Container ID.
	PeerId pulumi.StringOutput `pulumi:"peerId"`
	// The unique ID for the project to create the database user.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Cloud provider for this VPC peering connection. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringOutput `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringOutput `pulumi:"routeTableCidrBlock"`
	// (Azure/GCP Only) Status of the Atlas network peering connection.  Azure/GCP: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING` GCP Only:  `WAITING_FOR_USER`.
	Status pulumi.StringOutput `pulumi:"status"`
	// (AWS Only) The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringOutput `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName pulumi.StringOutput `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewNetworkPeering registers a new resource with the given unique name, arguments, and options.
func NewNetworkPeering(ctx *pulumi.Context,
	name string, args *NetworkPeeringArgs, opts ...pulumi.ResourceOption) (*NetworkPeering, error) {
	if args == nil || args.ContainerId == nil {
		return nil, errors.New("missing required argument 'ContainerId'")
	}
	if args == nil || args.ProjectId == nil {
		return nil, errors.New("missing required argument 'ProjectId'")
	}
	if args == nil || args.ProviderName == nil {
		return nil, errors.New("missing required argument 'ProviderName'")
	}
	if args == nil {
		args = &NetworkPeeringArgs{}
	}
	var resource NetworkPeering
	err := ctx.RegisterResource("mongodbatlas:index/networkPeering:NetworkPeering", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPeering gets an existing NetworkPeering resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPeering(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPeeringState, opts ...pulumi.ResourceOption) (*NetworkPeering, error) {
	var resource NetworkPeering
	err := ctx.ReadResource("mongodbatlas:index/networkPeering:NetworkPeering", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPeering resources.
type networkPeeringState struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName *string `pulumi:"accepterRegionName"`
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock *string `pulumi:"atlasCidrBlock"`
	// The Atlas GCP Project ID for the GCP VPC used by your atlas cluster that it is need to set up the reciprocal connection.
	AtlasGcpProjectId *string `pulumi:"atlasGcpProjectId"`
	AtlasId           *string `pulumi:"atlasId"`
	// The Atlas VPC Name is used by your atlas clister that it is need to set up the reciprocal connection.
	AtlasVpcName *string `pulumi:"atlasVpcName"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId *string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId *string `pulumi:"connectionId"`
	// Unique identifier of the Atlas VPC container for the region. You can create an Atlas VPC container using the Create Container endpoint. You cannot create more than one container per region. To retrieve a list of container IDs, use the Get list of VPC containers endpoint.
	ContainerId *string `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage *string `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState *string `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName *string `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName *string `pulumi:"networkName"`
	// The Network Peering Container ID.
	PeerId *string `pulumi:"peerId"`
	// The unique ID for the project to create the database user.
	ProjectId *string `pulumi:"projectId"`
	// Cloud provider for this VPC peering connection. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName *string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock *string `pulumi:"routeTableCidrBlock"`
	// (Azure/GCP Only) Status of the Atlas network peering connection.  Azure/GCP: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING` GCP Only:  `WAITING_FOR_USER`.
	Status *string `pulumi:"status"`
	// (AWS Only) The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName *string `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName *string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId *string `pulumi:"vpcId"`
}

type NetworkPeeringState struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringPtrInput
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock pulumi.StringPtrInput
	// The Atlas GCP Project ID for the GCP VPC used by your atlas cluster that it is need to set up the reciprocal connection.
	AtlasGcpProjectId pulumi.StringPtrInput
	AtlasId           pulumi.StringPtrInput
	// The Atlas VPC Name is used by your atlas clister that it is need to set up the reciprocal connection.
	AtlasVpcName pulumi.StringPtrInput
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringPtrInput
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringPtrInput
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringPtrInput
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringPtrInput
	// Unique identifier of the Atlas VPC container for the region. You can create an Atlas VPC container using the Create Container endpoint. You cannot create more than one container per region. To retrieve a list of container IDs, use the Get list of VPC containers endpoint.
	ContainerId pulumi.StringPtrInput
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringPtrInput
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringPtrInput
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringPtrInput
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringPtrInput
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringPtrInput
	// The Network Peering Container ID.
	PeerId pulumi.StringPtrInput
	// The unique ID for the project to create the database user.
	ProjectId pulumi.StringPtrInput
	// Cloud provider for this VPC peering connection. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringPtrInput
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringPtrInput
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringPtrInput
	// (Azure/GCP Only) Status of the Atlas network peering connection.  Azure/GCP: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING` GCP Only:  `WAITING_FOR_USER`.
	Status pulumi.StringPtrInput
	// (AWS Only) The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringPtrInput
	// Name of your Azure VNet.
	VnetName pulumi.StringPtrInput
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringPtrInput
}

func (NetworkPeeringState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPeeringState)(nil)).Elem()
}

type networkPeeringArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName *string `pulumi:"accepterRegionName"`
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock *string `pulumi:"atlasCidrBlock"`
	// The Atlas GCP Project ID for the GCP VPC used by your atlas cluster that it is need to set up the reciprocal connection.
	AtlasGcpProjectId *string `pulumi:"atlasGcpProjectId"`
	// The Atlas VPC Name is used by your atlas clister that it is need to set up the reciprocal connection.
	AtlasVpcName *string `pulumi:"atlasVpcName"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId *string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// Unique identifier of the Atlas VPC container for the region. You can create an Atlas VPC container using the Create Container endpoint. You cannot create more than one container per region. To retrieve a list of container IDs, use the Get list of VPC containers endpoint.
	ContainerId string `pulumi:"containerId"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName *string `pulumi:"networkName"`
	// The unique ID for the project to create the database user.
	ProjectId string `pulumi:"projectId"`
	// Cloud provider for this VPC peering connection. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock *string `pulumi:"routeTableCidrBlock"`
	// Name of your Azure VNet.
	VnetName *string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a NetworkPeering resource.
type NetworkPeeringArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringPtrInput
	// Unique identifier for an Azure AD directory.
	AtlasCidrBlock pulumi.StringPtrInput
	// The Atlas GCP Project ID for the GCP VPC used by your atlas cluster that it is need to set up the reciprocal connection.
	AtlasGcpProjectId pulumi.StringPtrInput
	// The Atlas VPC Name is used by your atlas clister that it is need to set up the reciprocal connection.
	AtlasVpcName pulumi.StringPtrInput
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringPtrInput
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringPtrInput
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringPtrInput
	// Unique identifier of the Atlas VPC container for the region. You can create an Atlas VPC container using the Create Container endpoint. You cannot create more than one container per region. To retrieve a list of container IDs, use the Get list of VPC containers endpoint.
	ContainerId pulumi.StringInput
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringPtrInput
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringPtrInput
	// The unique ID for the project to create the database user.
	ProjectId pulumi.StringInput
	// Cloud provider for this VPC peering connection. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringInput
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringPtrInput
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringPtrInput
	// Name of your Azure VNet.
	VnetName pulumi.StringPtrInput
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringPtrInput
}

func (NetworkPeeringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPeeringArgs)(nil)).Elem()
}
