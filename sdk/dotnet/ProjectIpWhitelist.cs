// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// `mongodbatlas..ProjectIpWhitelist` provides an IP Whitelist entry resource. The whitelist grants access from IPs, CIDRs or AWS Security Groups (if VPC Peering is enabled) to clusters within the Project.
    /// 
    /// &gt; **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
    /// 
    /// &gt; **IMPORTANT:**
    /// When you remove an entry from the whitelist, existing connections from the removed address(es) may remain open for a variable amount of time. How much time passes before Atlas closes the connection depends on several factors, including how the connection was established, the particular behavior of the application or driver using the address, and the connection protocol (e.g., TCP or UDP). This is particularly important to consider when changing an existing IP address or CIDR block as they cannot be updated via the Provider (comments can however), hence a change will force the destruction and recreation of entries.   
    /// </summary>
    public partial class ProjectIpWhitelist : Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the whitelisted AWS security group. Mutually exclusive with `cidr_block` and `ip_address`.
        /// </summary>
        [Output("awsSecurityGroup")]
        public Output<string> AwsSecurityGroup { get; private set; } = null!;

        /// <summary>
        /// Whitelist entry in Classless Inter-Domain Routing (CIDR) notation. Mutually exclusive with `aws_security_group` and `ip_address`.
        /// </summary>
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        /// <summary>
        /// Comment to add to the whitelist entry.
        /// </summary>
        [Output("comment")]
        public Output<string> Comment { get; private set; } = null!;

        /// <summary>
        /// Whitelisted IP address. Mutually exclusive with `aws_security_group` and `cidr_block`.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which to add the whitelist entry.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectIpWhitelist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectIpWhitelist(string name, ProjectIpWhitelistArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/projectIpWhitelist:ProjectIpWhitelist", name, args ?? new ProjectIpWhitelistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectIpWhitelist(string name, Input<string> id, ProjectIpWhitelistState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/projectIpWhitelist:ProjectIpWhitelist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectIpWhitelist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectIpWhitelist Get(string name, Input<string> id, ProjectIpWhitelistState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectIpWhitelist(name, id, state, options);
        }
    }

    public sealed class ProjectIpWhitelistArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the whitelisted AWS security group. Mutually exclusive with `cidr_block` and `ip_address`.
        /// </summary>
        [Input("awsSecurityGroup")]
        public Input<string>? AwsSecurityGroup { get; set; }

        /// <summary>
        /// Whitelist entry in Classless Inter-Domain Routing (CIDR) notation. Mutually exclusive with `aws_security_group` and `ip_address`.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Comment to add to the whitelist entry.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Whitelisted IP address. Mutually exclusive with `aws_security_group` and `cidr_block`.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The ID of the project in which to add the whitelist entry.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public ProjectIpWhitelistArgs()
        {
        }
    }

    public sealed class ProjectIpWhitelistState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the whitelisted AWS security group. Mutually exclusive with `cidr_block` and `ip_address`.
        /// </summary>
        [Input("awsSecurityGroup")]
        public Input<string>? AwsSecurityGroup { get; set; }

        /// <summary>
        /// Whitelist entry in Classless Inter-Domain Routing (CIDR) notation. Mutually exclusive with `aws_security_group` and `ip_address`.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Comment to add to the whitelist entry.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Whitelisted IP address. Mutually exclusive with `aws_security_group` and `cidr_block`.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The ID of the project in which to add the whitelist entry.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public ProjectIpWhitelistState()
        {
        }
    }
}
