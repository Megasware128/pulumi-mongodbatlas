// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakeStorageStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeStorageStoreArgs Empty = new DataLakeStorageStoreArgs();

    @Import(name="additionalStorageClasses")
    private @Nullable Output<List<String>> additionalStorageClasses;

    public Optional<Output<List<String>>> additionalStorageClasses() {
        return Optional.ofNullable(this.additionalStorageClasses);
    }

    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    @Import(name="delimiter")
    private @Nullable Output<String> delimiter;

    public Optional<Output<String>> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }

    @Import(name="includeTags")
    private @Nullable Output<Boolean> includeTags;

    public Optional<Output<Boolean>> includeTags() {
        return Optional.ofNullable(this.includeTags);
    }

    /**
     * Name of the Atlas Data Lake.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Atlas Data Lake.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="provider")
    private @Nullable Output<String> provider;

    public Optional<Output<String>> provider() {
        return Optional.ofNullable(this.provider);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private DataLakeStorageStoreArgs() {}

    private DataLakeStorageStoreArgs(DataLakeStorageStoreArgs $) {
        this.additionalStorageClasses = $.additionalStorageClasses;
        this.bucket = $.bucket;
        this.delimiter = $.delimiter;
        this.includeTags = $.includeTags;
        this.name = $.name;
        this.prefix = $.prefix;
        this.provider = $.provider;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeStorageStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeStorageStoreArgs $;

        public Builder() {
            $ = new DataLakeStorageStoreArgs();
        }

        public Builder(DataLakeStorageStoreArgs defaults) {
            $ = new DataLakeStorageStoreArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalStorageClasses(@Nullable Output<List<String>> additionalStorageClasses) {
            $.additionalStorageClasses = additionalStorageClasses;
            return this;
        }

        public Builder additionalStorageClasses(List<String> additionalStorageClasses) {
            return additionalStorageClasses(Output.of(additionalStorageClasses));
        }

        public Builder additionalStorageClasses(String... additionalStorageClasses) {
            return additionalStorageClasses(List.of(additionalStorageClasses));
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder delimiter(@Nullable Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder includeTags(@Nullable Output<Boolean> includeTags) {
            $.includeTags = includeTags;
            return this;
        }

        public Builder includeTags(Boolean includeTags) {
            return includeTags(Output.of(includeTags));
        }

        /**
         * @param name Name of the Atlas Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Atlas Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder provider(@Nullable Output<String> provider) {
            $.provider = provider;
            return this;
        }

        public Builder provider(String provider) {
            return provider(Output.of(provider));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public DataLakeStorageStoreArgs build() {
            return $;
        }
    }

}
