// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertConfigurationMatcherArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertConfigurationMatcherArgs Empty = new AlertConfigurationMatcherArgs();

    /**
     * Name of the field in the target object to match on.
     * 
     */
    @Import(name="fieldName")
    private @Nullable Output<String> fieldName;

    /**
     * @return Name of the field in the target object to match on.
     * 
     */
    public Optional<Output<String>> fieldName() {
        return Optional.ofNullable(this.fieldName);
    }

    /**
     * Operator to apply when checking the current metric value against the threshold value.
     * Accepted values are:
     * - `GREATER_THAN`
     * - `LESS_THAN`
     * 
     */
    @Import(name="operator")
    private @Nullable Output<String> operator;

    /**
     * @return Operator to apply when checking the current metric value against the threshold value.
     * Accepted values are:
     * - `GREATER_THAN`
     * - `LESS_THAN`
     * 
     */
    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
     * - `PRIMARY`
     * - `SECONDARY`
     * - `STANDALONE`
     * - `CONFIG`
     * - `MONGOS`
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private AlertConfigurationMatcherArgs() {}

    private AlertConfigurationMatcherArgs(AlertConfigurationMatcherArgs $) {
        this.fieldName = $.fieldName;
        this.operator = $.operator;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertConfigurationMatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertConfigurationMatcherArgs $;

        public Builder() {
            $ = new AlertConfigurationMatcherArgs();
        }

        public Builder(AlertConfigurationMatcherArgs defaults) {
            $ = new AlertConfigurationMatcherArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fieldName Name of the field in the target object to match on.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(@Nullable Output<String> fieldName) {
            $.fieldName = fieldName;
            return this;
        }

        /**
         * @param fieldName Name of the field in the target object to match on.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(String fieldName) {
            return fieldName(Output.of(fieldName));
        }

        /**
         * @param operator Operator to apply when checking the current metric value against the threshold value.
         * Accepted values are:
         * - `GREATER_THAN`
         * - `LESS_THAN`
         * 
         * @return builder
         * 
         */
        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Operator to apply when checking the current metric value against the threshold value.
         * Accepted values are:
         * - `GREATER_THAN`
         * - `LESS_THAN`
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param value Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
         * - `PRIMARY`
         * - `SECONDARY`
         * - `STANDALONE`
         * - `CONFIG`
         * - `MONGOS`
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value to test with the specified operator. If `field_name` is set to TYPE_NAME, you can match on the following values:
         * - `PRIMARY`
         * - `SECONDARY`
         * - `STANDALONE`
         * - `CONFIG`
         * - `MONGOS`
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public AlertConfigurationMatcherArgs build() {
            return $;
        }
    }

}
