// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetOrgInvitationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrgInvitationPlainArgs Empty = new GetOrgInvitationPlainArgs();

    /**
     * Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
     * 
     */
    @Import(name="invitationId", required=true)
    private String invitationId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
     * 
     */
    public String invitationId() {
        return this.invitationId;
    }

    /**
     * Unique 24-hexadecimal digit string that identifies the organization to which you invited the user.
     * 
     */
    @Import(name="orgId", required=true)
    private String orgId;

    /**
     * @return Unique 24-hexadecimal digit string that identifies the organization to which you invited the user.
     * 
     */
    public String orgId() {
        return this.orgId;
    }

    /**
     * Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
     * 
     */
    @Import(name="username", required=true)
    private String username;

    /**
     * @return Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
     * 
     */
    public String username() {
        return this.username;
    }

    private GetOrgInvitationPlainArgs() {}

    private GetOrgInvitationPlainArgs(GetOrgInvitationPlainArgs $) {
        this.invitationId = $.invitationId;
        this.orgId = $.orgId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrgInvitationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrgInvitationPlainArgs $;

        public Builder() {
            $ = new GetOrgInvitationPlainArgs();
        }

        public Builder(GetOrgInvitationPlainArgs defaults) {
            $ = new GetOrgInvitationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param invitationId Unique 24-hexadecimal digit string that identifies the invitation in Atlas.
         * 
         * @return builder
         * 
         */
        public Builder invitationId(String invitationId) {
            $.invitationId = invitationId;
            return this;
        }

        /**
         * @param orgId Unique 24-hexadecimal digit string that identifies the organization to which you invited the user.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param username Email address of the invited user. This is the address to which Atlas sends the invite. If the user accepts the invitation, they log in to Atlas with this username.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            $.username = username;
            return this;
        }

        public GetOrgInvitationPlainArgs build() {
            $.invitationId = Objects.requireNonNull($.invitationId, "expected parameter 'invitationId' to be non-null");
            $.orgId = Objects.requireNonNull($.orgId, "expected parameter 'orgId' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
