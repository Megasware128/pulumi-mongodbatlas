// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.CloudProviderAccess` allows you to get the list of cloud provider access roles, currently only AWS is supported.
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find `groupId` in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testRole = new mongodbatlas.CloudProviderAccess("testRole", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 * });
 * const all = testRole.projectId.apply(projectId => mongodbatlas.getCloudProviderAccess({
 *     projectId: projectId,
 * }));
 * ```
 */
export function getCloudProviderAccess(args: GetCloudProviderAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProviderAccessResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudProviderAccess:getCloudProviderAccess", {
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProviderAccess.
 */
export interface GetCloudProviderAccessArgs {
    /**
     * The unique ID for the project to get all Cloud Provider Access
     */
    readonly projectId: string;
}

/**
 * A collection of values returned by getCloudProviderAccess.
 */
export interface GetCloudProviderAccessResult {
    /**
     * A list where each represents a Cloud Provider Access Role.
     */
    readonly awsIamRoles: outputs.GetCloudProviderAccessAwsIamRole[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
}
