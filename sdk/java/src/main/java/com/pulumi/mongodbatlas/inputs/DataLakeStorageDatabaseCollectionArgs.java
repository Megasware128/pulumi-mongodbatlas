// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.mongodbatlas.inputs.DataLakeStorageDatabaseCollectionDataSourceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakeStorageDatabaseCollectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeStorageDatabaseCollectionArgs Empty = new DataLakeStorageDatabaseCollectionArgs();

    @Import(name="dataSources")
    private @Nullable Output<List<DataLakeStorageDatabaseCollectionDataSourceArgs>> dataSources;

    public Optional<Output<List<DataLakeStorageDatabaseCollectionDataSourceArgs>>> dataSources() {
        return Optional.ofNullable(this.dataSources);
    }

    /**
     * Name of the Atlas Data Lake.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Atlas Data Lake.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private DataLakeStorageDatabaseCollectionArgs() {}

    private DataLakeStorageDatabaseCollectionArgs(DataLakeStorageDatabaseCollectionArgs $) {
        this.dataSources = $.dataSources;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeStorageDatabaseCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeStorageDatabaseCollectionArgs $;

        public Builder() {
            $ = new DataLakeStorageDatabaseCollectionArgs();
        }

        public Builder(DataLakeStorageDatabaseCollectionArgs defaults) {
            $ = new DataLakeStorageDatabaseCollectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder dataSources(@Nullable Output<List<DataLakeStorageDatabaseCollectionDataSourceArgs>> dataSources) {
            $.dataSources = dataSources;
            return this;
        }

        public Builder dataSources(List<DataLakeStorageDatabaseCollectionDataSourceArgs> dataSources) {
            return dataSources(Output.of(dataSources));
        }

        public Builder dataSources(DataLakeStorageDatabaseCollectionDataSourceArgs... dataSources) {
            return dataSources(List.of(dataSources));
        }

        /**
         * @param name Name of the Atlas Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Atlas Data Lake.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DataLakeStorageDatabaseCollectionArgs build() {
            return $;
        }
    }

}
