// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnlineArchiveCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnlineArchiveCriteriaArgs Empty = new OnlineArchiveCriteriaArgs();

    @Import(name="dateField")
    private @Nullable Output<String> dateField;

    public Optional<Output<String>> dateField() {
        return Optional.ofNullable(this.dateField);
    }

    @Import(name="dateFormat")
    private @Nullable Output<String> dateFormat;

    public Optional<Output<String>> dateFormat() {
        return Optional.ofNullable(this.dateFormat);
    }

    @Import(name="expireAfterDays")
    private @Nullable Output<Integer> expireAfterDays;

    public Optional<Output<Integer>> expireAfterDays() {
        return Optional.ofNullable(this.expireAfterDays);
    }

    @Import(name="query")
    private @Nullable Output<String> query;

    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private OnlineArchiveCriteriaArgs() {}

    private OnlineArchiveCriteriaArgs(OnlineArchiveCriteriaArgs $) {
        this.dateField = $.dateField;
        this.dateFormat = $.dateFormat;
        this.expireAfterDays = $.expireAfterDays;
        this.query = $.query;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnlineArchiveCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnlineArchiveCriteriaArgs $;

        public Builder() {
            $ = new OnlineArchiveCriteriaArgs();
        }

        public Builder(OnlineArchiveCriteriaArgs defaults) {
            $ = new OnlineArchiveCriteriaArgs(Objects.requireNonNull(defaults));
        }

        public Builder dateField(@Nullable Output<String> dateField) {
            $.dateField = dateField;
            return this;
        }

        public Builder dateField(String dateField) {
            return dateField(Output.of(dateField));
        }

        public Builder dateFormat(@Nullable Output<String> dateFormat) {
            $.dateFormat = dateFormat;
            return this;
        }

        public Builder dateFormat(String dateFormat) {
            return dateFormat(Output.of(dateFormat));
        }

        public Builder expireAfterDays(@Nullable Output<Integer> expireAfterDays) {
            $.expireAfterDays = expireAfterDays;
            return this;
        }

        public Builder expireAfterDays(Integer expireAfterDays) {
            return expireAfterDays(Output.of(expireAfterDays));
        }

        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public OnlineArchiveCriteriaArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
