// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataLakeAwsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeAwsArgs Empty = new DataLakeAwsArgs();

    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    @Import(name="iamAssumedRoleArn")
    private @Nullable Output<String> iamAssumedRoleArn;

    public Optional<Output<String>> iamAssumedRoleArn() {
        return Optional.ofNullable(this.iamAssumedRoleArn);
    }

    @Import(name="iamUserArn")
    private @Nullable Output<String> iamUserArn;

    public Optional<Output<String>> iamUserArn() {
        return Optional.ofNullable(this.iamUserArn);
    }

    @Import(name="roleId", required=true)
    private Output<String> roleId;

    public Output<String> roleId() {
        return this.roleId;
    }

    @Import(name="testS3Bucket", required=true)
    private Output<String> testS3Bucket;

    public Output<String> testS3Bucket() {
        return this.testS3Bucket;
    }

    private DataLakeAwsArgs() {}

    private DataLakeAwsArgs(DataLakeAwsArgs $) {
        this.externalId = $.externalId;
        this.iamAssumedRoleArn = $.iamAssumedRoleArn;
        this.iamUserArn = $.iamUserArn;
        this.roleId = $.roleId;
        this.testS3Bucket = $.testS3Bucket;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeAwsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeAwsArgs $;

        public Builder() {
            $ = new DataLakeAwsArgs();
        }

        public Builder(DataLakeAwsArgs defaults) {
            $ = new DataLakeAwsArgs(Objects.requireNonNull(defaults));
        }

        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        public Builder iamAssumedRoleArn(@Nullable Output<String> iamAssumedRoleArn) {
            $.iamAssumedRoleArn = iamAssumedRoleArn;
            return this;
        }

        public Builder iamAssumedRoleArn(String iamAssumedRoleArn) {
            return iamAssumedRoleArn(Output.of(iamAssumedRoleArn));
        }

        public Builder iamUserArn(@Nullable Output<String> iamUserArn) {
            $.iamUserArn = iamUserArn;
            return this;
        }

        public Builder iamUserArn(String iamUserArn) {
            return iamUserArn(Output.of(iamUserArn));
        }

        public Builder roleId(Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public Builder testS3Bucket(Output<String> testS3Bucket) {
            $.testS3Bucket = testS3Bucket;
            return this;
        }

        public Builder testS3Bucket(String testS3Bucket) {
            return testS3Bucket(Output.of(testS3Bucket));
        }

        public DataLakeAwsArgs build() {
            $.roleId = Objects.requireNonNull($.roleId, "expected parameter 'roleId' to be non-null");
            $.testS3Bucket = Objects.requireNonNull($.testS3Bucket, "expected parameter 'testS3Bucket' to be non-null");
            return $;
        }
    }

}
