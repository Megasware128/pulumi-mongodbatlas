// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.mongodbatlas.outputs.GetDataLakeStorageDatabaseCollection;
import com.pulumi.mongodbatlas.outputs.GetDataLakeStorageDatabaseView;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataLakeStorageDatabase {
    private List<GetDataLakeStorageDatabaseCollection> collections;
    private Integer maxWildcardCollections;
    /**
     * @return Name of the data lake.
     * 
     */
    private String name;
    private List<GetDataLakeStorageDatabaseView> views;

    private GetDataLakeStorageDatabase() {}
    public List<GetDataLakeStorageDatabaseCollection> collections() {
        return this.collections;
    }
    public Integer maxWildcardCollections() {
        return this.maxWildcardCollections;
    }
    /**
     * @return Name of the data lake.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetDataLakeStorageDatabaseView> views() {
        return this.views;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataLakeStorageDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDataLakeStorageDatabaseCollection> collections;
        private Integer maxWildcardCollections;
        private String name;
        private List<GetDataLakeStorageDatabaseView> views;
        public Builder() {}
        public Builder(GetDataLakeStorageDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collections = defaults.collections;
    	      this.maxWildcardCollections = defaults.maxWildcardCollections;
    	      this.name = defaults.name;
    	      this.views = defaults.views;
        }

        @CustomType.Setter
        public Builder collections(List<GetDataLakeStorageDatabaseCollection> collections) {
            this.collections = Objects.requireNonNull(collections);
            return this;
        }
        public Builder collections(GetDataLakeStorageDatabaseCollection... collections) {
            return collections(List.of(collections));
        }
        @CustomType.Setter
        public Builder maxWildcardCollections(Integer maxWildcardCollections) {
            this.maxWildcardCollections = Objects.requireNonNull(maxWildcardCollections);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder views(List<GetDataLakeStorageDatabaseView> views) {
            this.views = Objects.requireNonNull(views);
            return this;
        }
        public Builder views(GetDataLakeStorageDatabaseView... views) {
            return views(List.of(views));
        }
        public GetDataLakeStorageDatabase build() {
            final var o = new GetDataLakeStorageDatabase();
            o.collections = collections;
            o.maxWildcardCollections = maxWildcardCollections;
            o.name = name;
            o.views = views;
            return o;
        }
    }
}
