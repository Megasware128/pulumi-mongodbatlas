// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ProjectTeamArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectTeamArgs Empty = new ProjectTeamArgs();

    /**
     * List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
     * The following are valid roles:
     * * `GROUP_OWNER`
     * * `GROUP_READ_ONLY`
     * * `GROUP_DATA_ACCESS_ADMIN`
     * * `GROUP_DATA_ACCESS_READ_WRITE`
     * * `GROUP_DATA_ACCESS_READ_ONLY`
     * 
     */
    @Import(name="roleNames", required=true)
    private Output<List<String>> roleNames;

    /**
     * @return List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
     * The following are valid roles:
     * * `GROUP_OWNER`
     * * `GROUP_READ_ONLY`
     * * `GROUP_DATA_ACCESS_ADMIN`
     * * `GROUP_DATA_ACCESS_READ_WRITE`
     * * `GROUP_DATA_ACCESS_READ_ONLY`
     * 
     */
    public Output<List<String>> roleNames() {
        return this.roleNames;
    }

    /**
     * The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     * 
     */
    @Import(name="teamId", required=true)
    private Output<String> teamId;

    /**
     * @return The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }

    private ProjectTeamArgs() {}

    private ProjectTeamArgs(ProjectTeamArgs $) {
        this.roleNames = $.roleNames;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectTeamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectTeamArgs $;

        public Builder() {
            $ = new ProjectTeamArgs();
        }

        public Builder(ProjectTeamArgs defaults) {
            $ = new ProjectTeamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * * `GROUP_OWNER`
         * * `GROUP_READ_ONLY`
         * * `GROUP_DATA_ACCESS_ADMIN`
         * * `GROUP_DATA_ACCESS_READ_WRITE`
         * * `GROUP_DATA_ACCESS_READ_ONLY`
         * 
         * @return builder
         * 
         */
        public Builder roleNames(Output<List<String>> roleNames) {
            $.roleNames = roleNames;
            return this;
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * * `GROUP_OWNER`
         * * `GROUP_READ_ONLY`
         * * `GROUP_DATA_ACCESS_ADMIN`
         * * `GROUP_DATA_ACCESS_READ_WRITE`
         * * `GROUP_DATA_ACCESS_READ_ONLY`
         * 
         * @return builder
         * 
         */
        public Builder roleNames(List<String> roleNames) {
            return roleNames(Output.of(roleNames));
        }

        /**
         * @param roleNames List of Project roles that the Programmatic API key needs to have. Ensure you provide: at least one role and ensure all roles are valid for the Project.  You must specify an array even if you are only associating a single role with the Programmatic API key.
         * The following are valid roles:
         * * `GROUP_OWNER`
         * * `GROUP_READ_ONLY`
         * * `GROUP_DATA_ACCESS_ADMIN`
         * * `GROUP_DATA_ACCESS_READ_WRITE`
         * * `GROUP_DATA_ACCESS_READ_ONLY`
         * 
         * @return builder
         * 
         */
        public Builder roleNames(String... roleNames) {
            return roleNames(List.of(roleNames));
        }

        /**
         * @param teamId The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
         * 
         * @return builder
         * 
         */
        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        /**
         * @param teamId The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public ProjectTeamArgs build() {
            $.roleNames = Objects.requireNonNull($.roleNames, "expected parameter 'roleNames' to be non-null");
            $.teamId = Objects.requireNonNull($.teamId, "expected parameter 'teamId' to be non-null");
            return $;
        }
    }

}
