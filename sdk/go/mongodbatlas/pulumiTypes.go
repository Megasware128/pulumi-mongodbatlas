// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	FieldName *string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator *string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value *string `pulumi:"value"`
}

// AlertConfigurationMatcherInput is an input type that accepts AlertConfigurationMatcherArgs and AlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherInput` via:
//
//          AlertConfigurationMatcherArgs{...}
type AlertConfigurationMatcherInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput
	ToAlertConfigurationMatcherOutputWithContext(context.Context) AlertConfigurationMatcherOutput
}

type AlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return i.ToAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArgs) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherOutput)
}

// AlertConfigurationMatcherArrayInput is an input type that accepts AlertConfigurationMatcherArray and AlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationMatcherArrayInput` via:
//
//          AlertConfigurationMatcherArray{ AlertConfigurationMatcherArgs{...} }
type AlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput
	ToAlertConfigurationMatcherArrayOutputWithContext(context.Context) AlertConfigurationMatcherArrayOutput
}

type AlertConfigurationMatcherArray []AlertConfigurationMatcherInput

func (AlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return i.ToAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationMatcherArray) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMatcherArrayOutput)
}

type AlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutput() AlertConfigurationMatcherOutput {
	return o
}

func (o AlertConfigurationMatcherOutput) ToAlertConfigurationMatcherOutputWithContext(ctx context.Context) AlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
func (o AlertConfigurationMatcherOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMatcherOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
// - `PRIMARY`
// - `SECONDARY`
// - `STANDALONE`
// - `CONFIG`
// - `MONGOS`
func (o AlertConfigurationMatcherOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMatcher) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationMatcher)(nil)).Elem()
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutput() AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) ToAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) AlertConfigurationMatcherArrayOutput {
	return o
}

func (o AlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) AlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationMatcher {
		return vs[0].([]AlertConfigurationMatcher)[vs[1].(int)]
	}).(AlertConfigurationMatcherOutput)
}

type AlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
	MetricName *string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode *string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units *string `pulumi:"units"`
}

// AlertConfigurationMetricThresholdConfigInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs and AlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigInput` via:
//
//          AlertConfigurationMetricThresholdConfigArgs{...}
type AlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput
	ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigOutput
}

type AlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return i.ToAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput)
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationMetricThresholdConfigArgs) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigOutput).ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationMetricThresholdConfigPtrInput is an input type that accepts AlertConfigurationMetricThresholdConfigArgs, AlertConfigurationMetricThresholdConfigPtr and AlertConfigurationMetricThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationMetricThresholdConfigPtrInput` via:
//
//          AlertConfigurationMetricThresholdConfigArgs{...}
//
//  or:
//
//          nil
type AlertConfigurationMetricThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput
	ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationMetricThresholdConfigPtrOutput
}

type alertConfigurationMetricThresholdConfigPtrType AlertConfigurationMetricThresholdConfigArgs

func AlertConfigurationMetricThresholdConfigPtr(v *AlertConfigurationMetricThresholdConfigArgs) AlertConfigurationMetricThresholdConfigPtrInput {
	return (*alertConfigurationMetricThresholdConfigPtrType)(v)
}

func (*alertConfigurationMetricThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return i.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationMetricThresholdConfigPtrType) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

type AlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutput() AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationMetricThresholdConfigOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationMetricThresholdConfig) *AlertConfigurationMetricThresholdConfig {
		return &v
	}).(AlertConfigurationMetricThresholdConfigPtrOutput)
}

// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
func (o AlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationMetricThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationMetricThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationMetricThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutput() AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) ToAlertConfigurationMetricThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationMetricThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationMetricThresholdConfigPtrOutput) Elem() AlertConfigurationMetricThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) AlertConfigurationMetricThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationMetricThresholdConfig
		return ret
	}).(AlertConfigurationMetricThresholdConfigOutput)
}

// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
func (o AlertConfigurationMetricThresholdConfigPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationMetricThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationMetricThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken *string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName *string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin *int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress *string `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled *bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName *string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken *string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **CONDITIONAL** PAGER_DUTY manages the interval value, please do not set it in case of PAGER_DUTY
	IntervalMin *int `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber *string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey *string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion *string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName *string  `pulumi:"orgName"`
	Roles   []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey *string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled *bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId *string `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	TypeName *string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username *string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey *string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey *string `pulumi:"victorOpsRoutingKey"`
}

// AlertConfigurationNotificationInput is an input type that accepts AlertConfigurationNotificationArgs and AlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationInput` via:
//
//          AlertConfigurationNotificationArgs{...}
type AlertConfigurationNotificationInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput
	ToAlertConfigurationNotificationOutputWithContext(context.Context) AlertConfigurationNotificationOutput
}

type AlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringPtrInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntPtrInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringPtrInput `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled pulumi.BoolPtrInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringPtrInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringPtrInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **CONDITIONAL** PAGER_DUTY manages the interval value, please do not set it in case of PAGER_DUTY
	IntervalMin pulumi.IntPtrInput `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringPtrInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringPtrInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringPtrInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringPtrInput   `pulumi:"orgName"`
	Roles   pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled pulumi.BoolPtrInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringPtrInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringPtrInput `pulumi:"victorOpsRoutingKey"`
}

func (AlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return i.ToAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArgs) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationOutput)
}

// AlertConfigurationNotificationArrayInput is an input type that accepts AlertConfigurationNotificationArray and AlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `AlertConfigurationNotificationArrayInput` via:
//
//          AlertConfigurationNotificationArray{ AlertConfigurationNotificationArgs{...} }
type AlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput
	ToAlertConfigurationNotificationArrayOutputWithContext(context.Context) AlertConfigurationNotificationArrayOutput
}

type AlertConfigurationNotificationArray []AlertConfigurationNotificationInput

func (AlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return i.ToAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i AlertConfigurationNotificationArray) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationNotificationArrayOutput)
}

type AlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutput() AlertConfigurationNotificationOutput {
	return o
}

func (o AlertConfigurationNotificationOutput) ToAlertConfigurationNotificationOutputWithContext(ctx context.Context) AlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ApiToken }).(pulumi.StringPtrOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o AlertConfigurationNotificationOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o AlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o AlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o AlertConfigurationNotificationOutput) DelayMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.DelayMin }).(pulumi.IntPtrOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o AlertConfigurationNotificationOutput) EmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.EmailAddress }).(pulumi.StringPtrOutput)
}

// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o AlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.EmailEnabled }).(pulumi.BoolPtrOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o AlertConfigurationNotificationOutput) FlowName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowName }).(pulumi.StringPtrOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.FlowdockApiToken }).(pulumi.StringPtrOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5. **CONDITIONAL** PAGER_DUTY manages the interval value, please do not set it in case of PAGER_DUTY
func (o AlertConfigurationNotificationOutput) IntervalMin() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *int { return v.IntervalMin }).(pulumi.IntPtrOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o AlertConfigurationNotificationOutput) MobileNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.MobileNumber }).(pulumi.StringPtrOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o AlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieApiKey }).(pulumi.StringPtrOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o AlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OpsGenieRegion }).(pulumi.StringPtrOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o AlertConfigurationNotificationOutput) OrgName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.OrgName }).(pulumi.StringPtrOutput)
}

func (o AlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o AlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *bool { return v.SmsEnabled }).(pulumi.BoolPtrOutput)
}

// Unique identifier of a team.
func (o AlertConfigurationNotificationOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Type of alert notification.
// Accepted values are:
// - `DATADOG`
// - `EMAIL`
// - `FLOWDOCK`
func (o AlertConfigurationNotificationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o AlertConfigurationNotificationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsApiKey }).(pulumi.StringPtrOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o AlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationNotification) *string { return v.VictorOpsRoutingKey }).(pulumi.StringPtrOutput)
}

type AlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConfigurationNotification)(nil)).Elem()
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutput() AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) ToAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) AlertConfigurationNotificationArrayOutput {
	return o
}

func (o AlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) AlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConfigurationNotification {
		return vs[0].([]AlertConfigurationNotification)[vs[1].(int)]
	}).(AlertConfigurationNotificationOutput)
}

type AlertConfigurationThresholdConfig struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator *string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold *float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units *string `pulumi:"units"`
}

// AlertConfigurationThresholdConfigInput is an input type that accepts AlertConfigurationThresholdConfigArgs and AlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigInput` via:
//
//          AlertConfigurationThresholdConfigArgs{...}
type AlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput
	ToAlertConfigurationThresholdConfigOutputWithContext(context.Context) AlertConfigurationThresholdConfigOutput
}

type AlertConfigurationThresholdConfigArgs struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringPtrInput `pulumi:"units"`
}

func (AlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return i.ToAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput)
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i AlertConfigurationThresholdConfigArgs) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigOutput).ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx)
}

// AlertConfigurationThresholdConfigPtrInput is an input type that accepts AlertConfigurationThresholdConfigArgs, AlertConfigurationThresholdConfigPtr and AlertConfigurationThresholdConfigPtrOutput values.
// You can construct a concrete instance of `AlertConfigurationThresholdConfigPtrInput` via:
//
//          AlertConfigurationThresholdConfigArgs{...}
//
//  or:
//
//          nil
type AlertConfigurationThresholdConfigPtrInput interface {
	pulumi.Input

	ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput
	ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Context) AlertConfigurationThresholdConfigPtrOutput
}

type alertConfigurationThresholdConfigPtrType AlertConfigurationThresholdConfigArgs

func AlertConfigurationThresholdConfigPtr(v *AlertConfigurationThresholdConfigArgs) AlertConfigurationThresholdConfigPtrInput {
	return (*alertConfigurationThresholdConfigPtrType)(v)
}

func (*alertConfigurationThresholdConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return i.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (i *alertConfigurationThresholdConfigPtrType) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConfigurationThresholdConfigPtrOutput)
}

type AlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutput() AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigOutput {
	return o
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o.ToAlertConfigurationThresholdConfigPtrOutputWithContext(context.Background())
}

func (o AlertConfigurationThresholdConfigOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertConfigurationThresholdConfig) *AlertConfigurationThresholdConfig {
		return &v
	}).(AlertConfigurationThresholdConfigPtrOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationThresholdConfigOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationThresholdConfigOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConfigurationThresholdConfig) *string { return v.Units }).(pulumi.StringPtrOutput)
}

type AlertConfigurationThresholdConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertConfigurationThresholdConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutput() AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) ToAlertConfigurationThresholdConfigPtrOutputWithContext(ctx context.Context) AlertConfigurationThresholdConfigPtrOutput {
	return o
}

func (o AlertConfigurationThresholdConfigPtrOutput) Elem() AlertConfigurationThresholdConfigOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) AlertConfigurationThresholdConfig {
		if v != nil {
			return *v
		}
		var ret AlertConfigurationThresholdConfig
		return ret
	}).(AlertConfigurationThresholdConfigOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o AlertConfigurationThresholdConfigPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o AlertConfigurationThresholdConfigPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o AlertConfigurationThresholdConfigPtrOutput) Units() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertConfigurationThresholdConfig) *string {
		if v == nil {
			return nil
		}
		return v.Units
	}).(pulumi.StringPtrOutput)
}

type CloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int     `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	Id                *string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemDailyInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs and CloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyInput` via:
//
//          CloudBackupSchedulePolicyItemDailyArgs{...}
type CloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput
	ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyOutput
}

type CloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput       `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	Id                pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput)
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemDailyArgs) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyOutput).ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemDailyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemDailyArgs, CloudBackupSchedulePolicyItemDailyPtr and CloudBackupSchedulePolicyItemDailyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemDailyPtrInput` via:
//
//          CloudBackupSchedulePolicyItemDailyArgs{...}
//
//  or:
//
//          nil
type CloudBackupSchedulePolicyItemDailyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput
	ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput
}

type cloudBackupSchedulePolicyItemDailyPtrType CloudBackupSchedulePolicyItemDailyArgs

func CloudBackupSchedulePolicyItemDailyPtr(v *CloudBackupSchedulePolicyItemDailyArgs) CloudBackupSchedulePolicyItemDailyPtrInput {
	return (*cloudBackupSchedulePolicyItemDailyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemDailyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemDailyPtrType) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

type CloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutput() CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemDailyOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemDaily) *CloudBackupSchedulePolicyItemDaily {
		return &v
	}).(CloudBackupSchedulePolicyItemDailyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemDailyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemDailyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutput() CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) ToCloudBackupSchedulePolicyItemDailyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemDailyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Elem() CloudBackupSchedulePolicyItemDailyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) CloudBackupSchedulePolicyItemDaily {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemDaily
		return ret
	}).(CloudBackupSchedulePolicyItemDailyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemDailyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemDailyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemDaily) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int     `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	Id                *string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemHourlyInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs and CloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyInput` via:
//
//          CloudBackupSchedulePolicyItemHourlyArgs{...}
type CloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput
	ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyOutput
}

type CloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput       `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	Id                pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput)
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemHourlyArgs) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyOutput).ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemHourlyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemHourlyArgs, CloudBackupSchedulePolicyItemHourlyPtr and CloudBackupSchedulePolicyItemHourlyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemHourlyPtrInput` via:
//
//          CloudBackupSchedulePolicyItemHourlyArgs{...}
//
//  or:
//
//          nil
type CloudBackupSchedulePolicyItemHourlyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput
	ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput
}

type cloudBackupSchedulePolicyItemHourlyPtrType CloudBackupSchedulePolicyItemHourlyArgs

func CloudBackupSchedulePolicyItemHourlyPtr(v *CloudBackupSchedulePolicyItemHourlyArgs) CloudBackupSchedulePolicyItemHourlyPtrInput {
	return (*cloudBackupSchedulePolicyItemHourlyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemHourlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemHourlyPtrType) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

type CloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutput() CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemHourly) *CloudBackupSchedulePolicyItemHourly {
		return &v
	}).(CloudBackupSchedulePolicyItemHourlyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemHourlyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemHourlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutput() CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) ToCloudBackupSchedulePolicyItemHourlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemHourlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Elem() CloudBackupSchedulePolicyItemHourlyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) CloudBackupSchedulePolicyItemHourly {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemHourly
		return ret
	}).(CloudBackupSchedulePolicyItemHourlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemHourlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemHourly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int     `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	Id                *string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArgs and CloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyInput` via:
//
//          CloudBackupSchedulePolicyItemMonthlyArgs{...}
type CloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput
	ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyOutput
}

type CloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput       `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	Id                pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyPtrOutput() CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemMonthlyArgs) ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyOutput).ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemMonthlyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemMonthlyArgs, CloudBackupSchedulePolicyItemMonthlyPtr and CloudBackupSchedulePolicyItemMonthlyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemMonthlyPtrInput` via:
//
//          CloudBackupSchedulePolicyItemMonthlyArgs{...}
//
//  or:
//
//          nil
type CloudBackupSchedulePolicyItemMonthlyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemMonthlyPtrOutput() CloudBackupSchedulePolicyItemMonthlyPtrOutput
	ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemMonthlyPtrOutput
}

type cloudBackupSchedulePolicyItemMonthlyPtrType CloudBackupSchedulePolicyItemMonthlyArgs

func CloudBackupSchedulePolicyItemMonthlyPtr(v *CloudBackupSchedulePolicyItemMonthlyArgs) CloudBackupSchedulePolicyItemMonthlyPtrInput {
	return (*cloudBackupSchedulePolicyItemMonthlyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemMonthlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemMonthlyPtrType) ToCloudBackupSchedulePolicyItemMonthlyPtrOutput() CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemMonthlyPtrType) ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemMonthlyPtrOutput)
}

type CloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutput() CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyPtrOutput() CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemMonthly) *CloudBackupSchedulePolicyItemMonthly {
		return &v
	}).(CloudBackupSchedulePolicyItemMonthlyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemMonthlyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemMonthlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) ToCloudBackupSchedulePolicyItemMonthlyPtrOutput() CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) ToCloudBackupSchedulePolicyItemMonthlyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemMonthlyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) Elem() CloudBackupSchedulePolicyItemMonthlyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) CloudBackupSchedulePolicyItemMonthly {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemMonthly
		return ret
	}).(CloudBackupSchedulePolicyItemMonthlyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemMonthlyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemMonthly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int     `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	Id                *string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// CloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArgs and CloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyInput` via:
//
//          CloudBackupSchedulePolicyItemWeeklyArgs{...}
type CloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput
	ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyOutput
}

type CloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput       `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	Id                pulumi.StringPtrInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (CloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyPtrOutput() CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(context.Background())
}

func (i CloudBackupSchedulePolicyItemWeeklyArgs) ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyOutput).ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(ctx)
}

// CloudBackupSchedulePolicyItemWeeklyPtrInput is an input type that accepts CloudBackupSchedulePolicyItemWeeklyArgs, CloudBackupSchedulePolicyItemWeeklyPtr and CloudBackupSchedulePolicyItemWeeklyPtrOutput values.
// You can construct a concrete instance of `CloudBackupSchedulePolicyItemWeeklyPtrInput` via:
//
//          CloudBackupSchedulePolicyItemWeeklyArgs{...}
//
//  or:
//
//          nil
type CloudBackupSchedulePolicyItemWeeklyPtrInput interface {
	pulumi.Input

	ToCloudBackupSchedulePolicyItemWeeklyPtrOutput() CloudBackupSchedulePolicyItemWeeklyPtrOutput
	ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(context.Context) CloudBackupSchedulePolicyItemWeeklyPtrOutput
}

type cloudBackupSchedulePolicyItemWeeklyPtrType CloudBackupSchedulePolicyItemWeeklyArgs

func CloudBackupSchedulePolicyItemWeeklyPtr(v *CloudBackupSchedulePolicyItemWeeklyArgs) CloudBackupSchedulePolicyItemWeeklyPtrInput {
	return (*cloudBackupSchedulePolicyItemWeeklyPtrType)(v)
}

func (*cloudBackupSchedulePolicyItemWeeklyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i *cloudBackupSchedulePolicyItemWeeklyPtrType) ToCloudBackupSchedulePolicyItemWeeklyPtrOutput() CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return i.ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(context.Background())
}

func (i *cloudBackupSchedulePolicyItemWeeklyPtrType) ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudBackupSchedulePolicyItemWeeklyPtrOutput)
}

type CloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutput() CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyPtrOutput() CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return o.ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(context.Background())
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudBackupSchedulePolicyItemWeekly) *CloudBackupSchedulePolicyItemWeekly {
		return &v
	}).(CloudBackupSchedulePolicyItemWeeklyPtrOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudBackupSchedulePolicyItemWeeklyPtrOutput struct{ *pulumi.OutputState }

func (CloudBackupSchedulePolicyItemWeeklyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) ToCloudBackupSchedulePolicyItemWeeklyPtrOutput() CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) ToCloudBackupSchedulePolicyItemWeeklyPtrOutputWithContext(ctx context.Context) CloudBackupSchedulePolicyItemWeeklyPtrOutput {
	return o
}

func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) Elem() CloudBackupSchedulePolicyItemWeeklyOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) CloudBackupSchedulePolicyItemWeekly {
		if v != nil {
			return *v
		}
		var ret CloudBackupSchedulePolicyItemWeekly
		return ret
	}).(CloudBackupSchedulePolicyItemWeeklyOutput)
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) *string {
		if v == nil {
			return nil
		}
		return v.FrequencyType
	}).(pulumi.StringPtrOutput)
}

func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) *string {
		if v == nil {
			return nil
		}
		return &v.RetentionUnit
	}).(pulumi.StringPtrOutput)
}

// Value to associate with `retentionUnit`.
func (o CloudBackupSchedulePolicyItemWeeklyPtrOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudBackupSchedulePolicyItemWeekly) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionValue
	}).(pulumi.IntPtrOutput)
}

type CloudProviderAccessAuthorizationAws struct {
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
}

// CloudProviderAccessAuthorizationAwsInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs and CloudProviderAccessAuthorizationAwsOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsInput` via:
//
//          CloudProviderAccessAuthorizationAwsArgs{...}
type CloudProviderAccessAuthorizationAwsInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput
	ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsOutput
}

type CloudProviderAccessAuthorizationAwsArgs struct {
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
}

func (CloudProviderAccessAuthorizationAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return i.ToCloudProviderAccessAuthorizationAwsOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput)
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationAwsArgs) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsOutput).ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx)
}

// CloudProviderAccessAuthorizationAwsPtrInput is an input type that accepts CloudProviderAccessAuthorizationAwsArgs, CloudProviderAccessAuthorizationAwsPtr and CloudProviderAccessAuthorizationAwsPtrOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationAwsPtrInput` via:
//
//          CloudProviderAccessAuthorizationAwsArgs{...}
//
//  or:
//
//          nil
type CloudProviderAccessAuthorizationAwsPtrInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput
	ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Context) CloudProviderAccessAuthorizationAwsPtrOutput
}

type cloudProviderAccessAuthorizationAwsPtrType CloudProviderAccessAuthorizationAwsArgs

func CloudProviderAccessAuthorizationAwsPtr(v *CloudProviderAccessAuthorizationAwsArgs) CloudProviderAccessAuthorizationAwsPtrInput {
	return (*cloudProviderAccessAuthorizationAwsPtrType)(v)
}

func (*cloudProviderAccessAuthorizationAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return i.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (i *cloudProviderAccessAuthorizationAwsPtrType) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

type CloudProviderAccessAuthorizationAwsOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutput() CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(context.Background())
}

func (o CloudProviderAccessAuthorizationAwsOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderAccessAuthorizationAws) *CloudProviderAccessAuthorizationAws {
		return &v
	}).(CloudProviderAccessAuthorizationAwsPtrOutput)
}

func (o CloudProviderAccessAuthorizationAwsOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationAws) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

type CloudProviderAccessAuthorizationAwsPtrOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderAccessAuthorizationAws)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutput() CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) ToCloudProviderAccessAuthorizationAwsPtrOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationAwsPtrOutput {
	return o
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) Elem() CloudProviderAccessAuthorizationAwsOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) CloudProviderAccessAuthorizationAws {
		if v != nil {
			return *v
		}
		var ret CloudProviderAccessAuthorizationAws
		return ret
	}).(CloudProviderAccessAuthorizationAwsOutput)
}

func (o CloudProviderAccessAuthorizationAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderAccessAuthorizationAws) *string {
		if v == nil {
			return nil
		}
		return &v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessAuthorizationFeatureUsageInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArgs and CloudProviderAccessAuthorizationFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageInput` via:
//
//          CloudProviderAccessAuthorizationFeatureUsageArgs{...}
type CloudProviderAccessAuthorizationFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput
	ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessAuthorizationFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArgs) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

// CloudProviderAccessAuthorizationFeatureUsageArrayInput is an input type that accepts CloudProviderAccessAuthorizationFeatureUsageArray and CloudProviderAccessAuthorizationFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessAuthorizationFeatureUsageArrayInput` via:
//
//          CloudProviderAccessAuthorizationFeatureUsageArray{ CloudProviderAccessAuthorizationFeatureUsageArgs{...} }
type CloudProviderAccessAuthorizationFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput
	ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput
}

type CloudProviderAccessAuthorizationFeatureUsageArray []CloudProviderAccessAuthorizationFeatureUsageInput

func (CloudProviderAccessAuthorizationFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessAuthorizationFeatureUsageArray) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessAuthorizationFeatureUsageArrayOutput)
}

type CloudProviderAccessAuthorizationFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutput() CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) ToCloudProviderAccessAuthorizationFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessAuthorizationFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessAuthorizationFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessAuthorizationFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessAuthorizationFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutput() CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) ToCloudProviderAccessAuthorizationFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessAuthorizationFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessAuthorizationFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessAuthorizationFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessAuthorizationFeatureUsage {
		return vs[0].([]CloudProviderAccessAuthorizationFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessAuthorizationFeatureUsageOutput)
}

type CloudProviderAccessFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType *string                `pulumi:"featureType"`
}

// CloudProviderAccessFeatureUsageInput is an input type that accepts CloudProviderAccessFeatureUsageArgs and CloudProviderAccessFeatureUsageOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageInput` via:
//
//          CloudProviderAccessFeatureUsageArgs{...}
type CloudProviderAccessFeatureUsageInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput
	ToCloudProviderAccessFeatureUsageOutputWithContext(context.Context) CloudProviderAccessFeatureUsageOutput
}

type CloudProviderAccessFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput       `pulumi:"featureId"`
	FeatureType pulumi.StringPtrInput `pulumi:"featureType"`
}

func (CloudProviderAccessFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return i.ToCloudProviderAccessFeatureUsageOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArgs) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageOutput)
}

// CloudProviderAccessFeatureUsageArrayInput is an input type that accepts CloudProviderAccessFeatureUsageArray and CloudProviderAccessFeatureUsageArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessFeatureUsageArrayInput` via:
//
//          CloudProviderAccessFeatureUsageArray{ CloudProviderAccessFeatureUsageArgs{...} }
type CloudProviderAccessFeatureUsageArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput
	ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Context) CloudProviderAccessFeatureUsageArrayOutput
}

type CloudProviderAccessFeatureUsageArray []CloudProviderAccessFeatureUsageInput

func (CloudProviderAccessFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return i.ToCloudProviderAccessFeatureUsageArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessFeatureUsageArray) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessFeatureUsageArrayOutput)
}

type CloudProviderAccessFeatureUsageOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutput() CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) ToCloudProviderAccessFeatureUsageOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o CloudProviderAccessFeatureUsageOutput) FeatureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessFeatureUsage) *string { return v.FeatureType }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessFeatureUsage)(nil)).Elem()
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutput() CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) ToCloudProviderAccessFeatureUsageArrayOutputWithContext(ctx context.Context) CloudProviderAccessFeatureUsageArrayOutput {
	return o
}

func (o CloudProviderAccessFeatureUsageArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessFeatureUsage {
		return vs[0].([]CloudProviderAccessFeatureUsage)[vs[1].(int)]
	}).(CloudProviderAccessFeatureUsageOutput)
}

type CloudProviderAccessSetupAwsConfig struct {
	AtlasAssumedRoleExternalId *string `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         *string `pulumi:"atlasAwsAccountArn"`
}

// CloudProviderAccessSetupAwsConfigInput is an input type that accepts CloudProviderAccessSetupAwsConfigArgs and CloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigInput` via:
//
//          CloudProviderAccessSetupAwsConfigArgs{...}
type CloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput
	ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigOutput
}

type CloudProviderAccessSetupAwsConfigArgs struct {
	AtlasAssumedRoleExternalId pulumi.StringPtrInput `pulumi:"atlasAssumedRoleExternalId"`
	AtlasAwsAccountArn         pulumi.StringPtrInput `pulumi:"atlasAwsAccountArn"`
}

func (CloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return i.ToCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArgs) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigOutput)
}

// CloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts CloudProviderAccessSetupAwsConfigArray and CloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `CloudProviderAccessSetupAwsConfigArrayInput` via:
//
//          CloudProviderAccessSetupAwsConfigArray{ CloudProviderAccessSetupAwsConfigArgs{...} }
type CloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput
	ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) CloudProviderAccessSetupAwsConfigArrayOutput
}

type CloudProviderAccessSetupAwsConfigArray []CloudProviderAccessSetupAwsConfigInput

func (CloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i CloudProviderAccessSetupAwsConfigArray) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderAccessSetupAwsConfigArrayOutput)
}

type CloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutput() CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) ToCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringPtrOutput)
}

func (o CloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderAccessSetupAwsConfig) *string { return v.AtlasAwsAccountArn }).(pulumi.StringPtrOutput)
}

type CloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutput() CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) ToCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) CloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o CloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) CloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderAccessSetupAwsConfig {
		return vs[0].([]CloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(CloudProviderAccessSetupAwsConfigOutput)
}

type CloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                              `pulumi:"id"`
	PolicyItems []CloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// CloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArgs and CloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput
	ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                          `pulumi:"id"`
	PolicyItems CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (CloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArgs) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyArray and CloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyArray{ CloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyArray []CloudProviderSnapshotBackupPolicyPolicyInput

func (CloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyArray) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutput() CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) ToCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicy) []CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutput() CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v CloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]CloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfig struct {
	Automated             *bool `pulumi:"automated"`
	Download              *bool `pulumi:"download"`
	OplogInc              *int  `pulumi:"oplogInc"`
	OplogTs               *int  `pulumi:"oplogTs"`
	PointInTime           *bool `pulumi:"pointInTime"`
	PointInTimeUtcSeconds *int  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName *string `pulumi:"targetClusterName"`
	TargetProjectId   *string `pulumi:"targetProjectId"`
}

// CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs and CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput` via:
//
//          CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{...}
type CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs struct {
	Automated             pulumi.BoolPtrInput `pulumi:"automated"`
	Download              pulumi.BoolPtrInput `pulumi:"download"`
	OplogInc              pulumi.IntPtrInput  `pulumi:"oplogInc"`
	OplogTs               pulumi.IntPtrInput  `pulumi:"oplogTs"`
	PointInTime           pulumi.BoolPtrInput `pulumi:"pointInTime"`
	PointInTimeUtcSeconds pulumi.IntPtrInput  `pulumi:"pointInTimeUtcSeconds"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
	TargetClusterName pulumi.StringPtrInput `pulumi:"targetClusterName"`
	TargetProjectId   pulumi.StringPtrInput `pulumi:"targetProjectId"`
}

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput).ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx)
}

// CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput is an input type that accepts CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs, CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtr and CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput values.
// You can construct a concrete instance of `CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput` via:
//
//          CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{...}
//
//  or:
//
//          nil
type CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput interface {
	pulumi.Input

	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput
	ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput
}

type cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs

func CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtr(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput {
	return (*cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType)(v)
}

func (*cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return i.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (i *cloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrType) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(context.Background())
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *CloudProviderSnapshotRestoreJobDeliveryTypeConfig {
		return &v
	}).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Automated }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.Download }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogInc }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.OplogTs }).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool { return v.PointInTime }).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int { return v.PointInTimeUtcSeconds }).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetClusterName }).(pulumi.StringPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string { return v.TargetProjectId }).(pulumi.StringPtrOutput)
}

type CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProviderSnapshotRestoreJobDeliveryTypeConfig)(nil)).Elem()
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput() CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) ToCloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutputWithContext(ctx context.Context) CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput {
	return o
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Elem() CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) CloudProviderSnapshotRestoreJobDeliveryTypeConfig {
		if v != nil {
			return *v
		}
		var ret CloudProviderSnapshotRestoreJobDeliveryTypeConfig
		return ret
	}).(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Automated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Automated
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) Download() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Download
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogInc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogInc
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) OplogTs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.OplogTs
	}).(pulumi.IntPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *bool {
		if v == nil {
			return nil
		}
		return v.PointInTime
	}).(pulumi.BoolPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) PointInTimeUtcSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *int {
		if v == nil {
			return nil
		}
		return v.PointInTimeUtcSeconds
	}).(pulumi.IntPtrOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only required if deliveryType is automated.
func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetClusterName
	}).(pulumi.StringPtrOutput)
}

func (o CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput) TargetProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProviderSnapshotRestoreJobDeliveryTypeConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetProjectId
	}).(pulumi.StringPtrOutput)
}

type ClusterAdvancedConfiguration struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern *string `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern *string `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong *bool `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled *bool `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol *string `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan *bool `pulumi:"noTableScan"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb *int `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector *int `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector *int `pulumi:"sampleSizeBiConnector"`
}

// ClusterAdvancedConfigurationInput is an input type that accepts ClusterAdvancedConfigurationArgs and ClusterAdvancedConfigurationOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationInput` via:
//
//          ClusterAdvancedConfigurationArgs{...}
type ClusterAdvancedConfigurationInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput
	ToClusterAdvancedConfigurationOutputWithContext(context.Context) ClusterAdvancedConfigurationOutput
}

type ClusterAdvancedConfigurationArgs struct {
	// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
	DefaultReadConcern pulumi.StringPtrInput `pulumi:"defaultReadConcern"`
	// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
	DefaultWriteConcern pulumi.StringPtrInput `pulumi:"defaultWriteConcern"`
	// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
	FailIndexKeyTooLong pulumi.BoolPtrInput `pulumi:"failIndexKeyTooLong"`
	// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
	JavascriptEnabled pulumi.BoolPtrInput `pulumi:"javascriptEnabled"`
	// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
	MinimumEnabledTlsProtocol pulumi.StringPtrInput `pulumi:"minimumEnabledTlsProtocol"`
	// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
	NoTableScan pulumi.BoolPtrInput `pulumi:"noTableScan"`
	// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
	OplogSizeMb pulumi.IntPtrInput `pulumi:"oplogSizeMb"`
	// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleRefreshIntervalBiConnector pulumi.IntPtrInput `pulumi:"sampleRefreshIntervalBiConnector"`
	// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
	SampleSizeBiConnector pulumi.IntPtrInput `pulumi:"sampleSizeBiConnector"`
}

func (ClusterAdvancedConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return i.ToClusterAdvancedConfigurationOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput)
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterAdvancedConfigurationArgs) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationOutput).ToClusterAdvancedConfigurationPtrOutputWithContext(ctx)
}

// ClusterAdvancedConfigurationPtrInput is an input type that accepts ClusterAdvancedConfigurationArgs, ClusterAdvancedConfigurationPtr and ClusterAdvancedConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterAdvancedConfigurationPtrInput` via:
//
//          ClusterAdvancedConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterAdvancedConfigurationPtrInput interface {
	pulumi.Input

	ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput
	ToClusterAdvancedConfigurationPtrOutputWithContext(context.Context) ClusterAdvancedConfigurationPtrOutput
}

type clusterAdvancedConfigurationPtrType ClusterAdvancedConfigurationArgs

func ClusterAdvancedConfigurationPtr(v *ClusterAdvancedConfigurationArgs) ClusterAdvancedConfigurationPtrInput {
	return (*clusterAdvancedConfigurationPtrType)(v)
}

func (*clusterAdvancedConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return i.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterAdvancedConfigurationPtrType) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAdvancedConfigurationPtrOutput)
}

type ClusterAdvancedConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutput() ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationOutput {
	return o
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o.ToClusterAdvancedConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterAdvancedConfigurationOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterAdvancedConfiguration) *ClusterAdvancedConfiguration {
		return &v
	}).(ClusterAdvancedConfigurationPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultReadConcern }).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.DefaultWriteConcern }).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.FailIndexKeyTooLong }).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.JavascriptEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *string { return v.MinimumEnabledTlsProtocol }).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *bool { return v.NoTableScan }).(pulumi.BoolPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.OplogSizeMb }).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleRefreshIntervalBiConnector }).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterAdvancedConfiguration) *int { return v.SampleSizeBiConnector }).(pulumi.IntPtrOutput)
}

type ClusterAdvancedConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAdvancedConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAdvancedConfiguration)(nil)).Elem()
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutput() ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) ToClusterAdvancedConfigurationPtrOutputWithContext(ctx context.Context) ClusterAdvancedConfigurationPtrOutput {
	return o
}

func (o ClusterAdvancedConfigurationPtrOutput) Elem() ClusterAdvancedConfigurationOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) ClusterAdvancedConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterAdvancedConfiguration
		return ret
	}).(ClusterAdvancedConfigurationOutput)
}

// [Default level of acknowledgment requested from MongoDB for read operations](https://docs.mongodb.com/manual/reference/read-concern/) set for this cluster. MongoDB 4.4 clusters default to [available](https://docs.mongodb.com/manual/reference/read-concern-available/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultReadConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultReadConcern
	}).(pulumi.StringPtrOutput)
}

// [Default level of acknowledgment requested from MongoDB for write operations](https://docs.mongodb.com/manual/reference/write-concern/) set for this cluster. MongoDB 4.4 clusters default to [1](https://docs.mongodb.com/manual/reference/write-concern/).
func (o ClusterAdvancedConfigurationPtrOutput) DefaultWriteConcern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DefaultWriteConcern
	}).(pulumi.StringPtrOutput)
}

// When true, documents can only be updated or inserted if, for all indexed fields on the target collection, the corresponding index entries do not exceed 1024 bytes. When false, mongod writes documents that exceed the limit but does not index them.
func (o ClusterAdvancedConfigurationPtrOutput) FailIndexKeyTooLong() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.FailIndexKeyTooLong
	}).(pulumi.BoolPtrOutput)
}

// When true, the cluster allows execution of operations that perform server-side executions of JavaScript. When false, the cluster disables execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) JavascriptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the minimum Transport Layer Security (TLS) version the cluster accepts for incoming connections.Valid values are:
func (o ClusterAdvancedConfigurationPtrOutput) MinimumEnabledTlsProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MinimumEnabledTlsProtocol
	}).(pulumi.StringPtrOutput)
}

// When true, the cluster disables the execution of any query that requires a collection scan to return results. When false, the cluster allows the execution of those operations.
func (o ClusterAdvancedConfigurationPtrOutput) NoTableScan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.NoTableScan
	}).(pulumi.BoolPtrOutput)
}

// The custom oplog size of the cluster. Without a value that indicates that the cluster uses the default oplog size calculated by Atlas.
func (o ClusterAdvancedConfigurationPtrOutput) OplogSizeMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.OplogSizeMb
	}).(pulumi.IntPtrOutput)
}

// Interval in seconds at which the mongosqld process re-samples data to create its relational schema. The default value is 300. The specified value must be a positive integer. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleRefreshIntervalBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleRefreshIntervalBiConnector
	}).(pulumi.IntPtrOutput)
}

// Number of documents per database to sample when gathering schema information. Defaults to 100. Available only for Atlas deployments in which BI Connector for Atlas is enabled.
func (o ClusterAdvancedConfigurationPtrOutput) SampleSizeBiConnector() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterAdvancedConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SampleSizeBiConnector
	}).(pulumi.IntPtrOutput)
}

type ClusterBiConnectorConfig struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference *string `pulumi:"readPreference"`
}

// ClusterBiConnectorConfigInput is an input type that accepts ClusterBiConnectorConfigArgs and ClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigInput` via:
//
//          ClusterBiConnectorConfigArgs{...}
type ClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput
	ToClusterBiConnectorConfigOutputWithContext(context.Context) ClusterBiConnectorConfigOutput
}

type ClusterBiConnectorConfigArgs struct {
	// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
	// *
	// - Set to `true` to enable BI Connector for Atlas.
	// - Set to `false` to disable BI Connector for Atlas.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringPtrInput `pulumi:"readPreference"`
}

func (ClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return i.ToClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput)
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i ClusterBiConnectorConfigArgs) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigOutput).ToClusterBiConnectorConfigPtrOutputWithContext(ctx)
}

// ClusterBiConnectorConfigPtrInput is an input type that accepts ClusterBiConnectorConfigArgs, ClusterBiConnectorConfigPtr and ClusterBiConnectorConfigPtrOutput values.
// You can construct a concrete instance of `ClusterBiConnectorConfigPtrInput` via:
//
//          ClusterBiConnectorConfigArgs{...}
//
//  or:
//
//          nil
type ClusterBiConnectorConfigPtrInput interface {
	pulumi.Input

	ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput
	ToClusterBiConnectorConfigPtrOutputWithContext(context.Context) ClusterBiConnectorConfigPtrOutput
}

type clusterBiConnectorConfigPtrType ClusterBiConnectorConfigArgs

func ClusterBiConnectorConfigPtr(v *ClusterBiConnectorConfigArgs) ClusterBiConnectorConfigPtrInput {
	return (*clusterBiConnectorConfigPtrType)(v)
}

func (*clusterBiConnectorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return i.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (i *clusterBiConnectorConfigPtrType) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBiConnectorConfigPtrOutput)
}

type ClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutput() ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigOutputWithContext(ctx context.Context) ClusterBiConnectorConfigOutput {
	return o
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o.ToClusterBiConnectorConfigPtrOutputWithContext(context.Background())
}

func (o ClusterBiConnectorConfigOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBiConnectorConfig) *ClusterBiConnectorConfig {
		return &v
	}).(ClusterBiConnectorConfigPtrOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBiConnectorConfig) *string { return v.ReadPreference }).(pulumi.StringPtrOutput)
}

type ClusterBiConnectorConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterBiConnectorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBiConnectorConfig)(nil)).Elem()
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutput() ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) ToClusterBiConnectorConfigPtrOutputWithContext(ctx context.Context) ClusterBiConnectorConfigPtrOutput {
	return o
}

func (o ClusterBiConnectorConfigPtrOutput) Elem() ClusterBiConnectorConfigOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) ClusterBiConnectorConfig {
		if v != nil {
			return *v
		}
		var ret ClusterBiConnectorConfig
		return ret
	}).(ClusterBiConnectorConfigOutput)
}

// Specifies whether or not BI Connector for Atlas is enabled on the cluster.l
// *
// - Set to `true` to enable BI Connector for Atlas.
// - Set to `false` to disable BI Connector for Atlas.
func (o ClusterBiConnectorConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o ClusterBiConnectorConfigPtrOutput) ReadPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBiConnectorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ReadPreference
	}).(pulumi.StringPtrOutput)
}

type ClusterConnectionString struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink map[string]interface{} `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv map[string]interface{}                   `pulumi:"awsPrivateLinkSrv"`
	Private           *string                                  `pulumi:"private"`
	PrivateEndpoints  []ClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        *string                                  `pulumi:"privateSrv"`
	Standard          *string                                  `pulumi:"standard"`
	StandardSrv       *string                                  `pulumi:"standardSrv"`
}

// ClusterConnectionStringInput is an input type that accepts ClusterConnectionStringArgs and ClusterConnectionStringOutput values.
// You can construct a concrete instance of `ClusterConnectionStringInput` via:
//
//          ClusterConnectionStringArgs{...}
type ClusterConnectionStringInput interface {
	pulumi.Input

	ToClusterConnectionStringOutput() ClusterConnectionStringOutput
	ToClusterConnectionStringOutputWithContext(context.Context) ClusterConnectionStringOutput
}

type ClusterConnectionStringArgs struct {
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
	AwsPrivateLink pulumi.MapInput `pulumi:"awsPrivateLink"`
	// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
	AwsPrivateLinkSrv pulumi.MapInput                                  `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringPtrInput                            `pulumi:"private"`
	PrivateEndpoints  ClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringPtrInput                            `pulumi:"privateSrv"`
	Standard          pulumi.StringPtrInput                            `pulumi:"standard"`
	StandardSrv       pulumi.StringPtrInput                            `pulumi:"standardSrv"`
}

func (ClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return i.ToClusterConnectionStringOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArgs) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringOutput)
}

// ClusterConnectionStringArrayInput is an input type that accepts ClusterConnectionStringArray and ClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringArrayInput` via:
//
//          ClusterConnectionStringArray{ ClusterConnectionStringArgs{...} }
type ClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput
	ToClusterConnectionStringArrayOutputWithContext(context.Context) ClusterConnectionStringArrayOutput
}

type ClusterConnectionStringArray []ClusterConnectionStringInput

func (ClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return i.ToClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringArray) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringArrayOutput)
}

type ClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutput() ClusterConnectionStringOutput {
	return o
}

func (o ClusterConnectionStringOutput) ToClusterConnectionStringOutputWithContext(ctx context.Context) ClusterConnectionStringOutput {
	return o
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].connection_string instead
func (o ClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

// Deprecated: This field is deprecated. Use connection_strings.private_endpoint[n].srv_connection_string instead
func (o ClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o ClusterConnectionStringOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Private }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) PrivateEndpoints() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionString) []ClusterConnectionStringPrivateEndpoint { return v.PrivateEndpoints }).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o ClusterConnectionStringOutput) PrivateSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.PrivateSrv }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) Standard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.Standard }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringOutput) StandardSrv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionString) *string { return v.StandardSrv }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionString)(nil)).Elem()
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutput() ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) ToClusterConnectionStringArrayOutputWithContext(ctx context.Context) ClusterConnectionStringArrayOutput {
	return o
}

func (o ClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionString {
		return vs[0].([]ClusterConnectionString)[vs[1].(int)]
	}).(ClusterConnectionStringOutput)
}

type ClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    *string                                          `pulumi:"connectionString"`
	Endpoints           []ClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString *string                                          `pulumi:"srvConnectionString"`
	Type                *string                                          `pulumi:"type"`
}

// ClusterConnectionStringPrivateEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointArgs and ClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointInput` via:
//
//          ClusterConnectionStringPrivateEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput
	ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointOutput
}

type ClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringPtrInput                                    `pulumi:"connectionString"`
	Endpoints           ClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringPtrInput                                    `pulumi:"srvConnectionString"`
	Type                pulumi.StringPtrInput                                    `pulumi:"type"`
}

func (ClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArgs) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointOutput)
}

// ClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointArray and ClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointArrayInput` via:
//
//          ClusterConnectionStringPrivateEndpointArray{ ClusterConnectionStringPrivateEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointArray []ClusterConnectionStringPrivateEndpointInput

func (ClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointArray) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointArrayOutput)
}

type ClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutput() ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ToClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Endpoints() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) []ClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.SrvConnectionString }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutput() ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointOutput)
}

type ClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId *string `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName *string `pulumi:"providerName"`
	Region       *string `pulumi:"region"`
}

// ClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArgs and ClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//          ClusterConnectionStringPrivateEndpointEndpointArgs{...}
type ClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput
	ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	Region       pulumi.StringPtrInput `pulumi:"region"`
}

func (ClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArgs) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

// ClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts ClusterConnectionStringPrivateEndpointEndpointArray and ClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//          ClusterConnectionStringPrivateEndpointEndpointArray{ ClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type ClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type ClusterConnectionStringPrivateEndpointEndpointArray []ClusterConnectionStringPrivateEndpointEndpointInput

func (ClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterConnectionStringPrivateEndpointEndpointArray) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type ClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutput() ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ToClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Cloud service provider on which the servers are provisioned.
func (o ClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

func (o ClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterConnectionStringPrivateEndpointEndpoint) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type ClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutput() ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) ClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o ClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) ClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]ClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(ClusterConnectionStringPrivateEndpointEndpointOutput)
}

type ClusterLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// ClusterLabelInput is an input type that accepts ClusterLabelArgs and ClusterLabelOutput values.
// You can construct a concrete instance of `ClusterLabelInput` via:
//
//          ClusterLabelArgs{...}
type ClusterLabelInput interface {
	pulumi.Input

	ToClusterLabelOutput() ClusterLabelOutput
	ToClusterLabelOutputWithContext(context.Context) ClusterLabelOutput
}

type ClusterLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArgs) ToClusterLabelOutput() ClusterLabelOutput {
	return i.ToClusterLabelOutputWithContext(context.Background())
}

func (i ClusterLabelArgs) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelOutput)
}

// ClusterLabelArrayInput is an input type that accepts ClusterLabelArray and ClusterLabelArrayOutput values.
// You can construct a concrete instance of `ClusterLabelArrayInput` via:
//
//          ClusterLabelArray{ ClusterLabelArgs{...} }
type ClusterLabelArrayInput interface {
	pulumi.Input

	ToClusterLabelArrayOutput() ClusterLabelArrayOutput
	ToClusterLabelArrayOutputWithContext(context.Context) ClusterLabelArrayOutput
}

type ClusterLabelArray []ClusterLabelInput

func (ClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (i ClusterLabelArray) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return i.ToClusterLabelArrayOutputWithContext(context.Background())
}

func (i ClusterLabelArray) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLabelArrayOutput)
}

type ClusterLabelOutput struct{ *pulumi.OutputState }

func (ClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelOutput) ToClusterLabelOutput() ClusterLabelOutput {
	return o
}

func (o ClusterLabelOutput) ToClusterLabelOutputWithContext(ctx context.Context) ClusterLabelOutput {
	return o
}

// The key that you want to write.
func (o ClusterLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o ClusterLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (ClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterLabel)(nil)).Elem()
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutput() ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) ToClusterLabelArrayOutputWithContext(ctx context.Context) ClusterLabelArrayOutput {
	return o
}

func (o ClusterLabelArrayOutput) Index(i pulumi.IntInput) ClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterLabel {
		return vs[0].([]ClusterLabel)[vs[1].(int)]
	}).(ClusterLabelOutput)
}

type ClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id *string `pulumi:"id"`
	// Number of shards to deploy in the specified zone, minimum 1.
	NumShards int `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []ClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName *string `pulumi:"zoneName"`
}

// ClusterReplicationSpecInput is an input type that accepts ClusterReplicationSpecArgs and ClusterReplicationSpecOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecInput` via:
//
//          ClusterReplicationSpecArgs{...}
type ClusterReplicationSpecInput interface {
	pulumi.Input

	ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput
	ToClusterReplicationSpecOutputWithContext(context.Context) ClusterReplicationSpecOutput
}

type ClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone, minimum 1.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs ClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Name for the zone in a Global Cluster.
	ZoneName pulumi.StringPtrInput `pulumi:"zoneName"`
}

func (ClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return i.ToClusterReplicationSpecOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArgs) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecOutput)
}

// ClusterReplicationSpecArrayInput is an input type that accepts ClusterReplicationSpecArray and ClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecArrayInput` via:
//
//          ClusterReplicationSpecArray{ ClusterReplicationSpecArgs{...} }
type ClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput
	ToClusterReplicationSpecArrayOutputWithContext(context.Context) ClusterReplicationSpecArrayOutput
}

type ClusterReplicationSpecArray []ClusterReplicationSpecInput

func (ClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return i.ToClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecArray) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecArrayOutput)
}

type ClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutput() ClusterReplicationSpecOutput {
	return o
}

func (o ClusterReplicationSpecOutput) ToClusterReplicationSpecOutputWithContext(ctx context.Context) ClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Number of shards to deploy in the specified zone, minimum 1.
func (o ClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o ClusterReplicationSpecOutput) RegionsConfigs() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) []ClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

// Name for the zone in a Global Cluster.
func (o ClusterReplicationSpecOutput) ZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpec) *string { return v.ZoneName }).(pulumi.StringPtrOutput)
}

type ClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpec)(nil)).Elem()
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutput() ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) ToClusterReplicationSpecArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecArrayOutput {
	return o
}

func (o ClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpec {
		return vs[0].([]ClusterReplicationSpec)[vs[1].(int)]
	}).(ClusterReplicationSpecOutput)
}

type ClusterReplicationSpecRegionsConfig struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes *int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes *int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority *int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes *int `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName string `pulumi:"regionName"`
}

// ClusterReplicationSpecRegionsConfigInput is an input type that accepts ClusterReplicationSpecRegionsConfigArgs and ClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigInput` via:
//
//          ClusterReplicationSpecRegionsConfigArgs{...}
type ClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput
	ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigOutput
}

type ClusterReplicationSpecRegionsConfigArgs struct {
	// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
	AnalyticsNodes pulumi.IntPtrInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
	// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
	// * Specify 0 if you do not want any electable nodes in the region.
	// * You cannot create electable nodes in a region if `priority` is 0.
	ElectableNodes pulumi.IntPtrInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
	// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
	// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntPtrInput `pulumi:"readOnlyNodes"`
	// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (ClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return i.ToClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArgs) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigOutput)
}

// ClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts ClusterReplicationSpecRegionsConfigArray and ClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `ClusterReplicationSpecRegionsConfigArrayInput` via:
//
//          ClusterReplicationSpecRegionsConfigArray{ ClusterReplicationSpecRegionsConfigArgs{...} }
type ClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput
	ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) ClusterReplicationSpecRegionsConfigArrayOutput
}

type ClusterReplicationSpecRegionsConfigArray []ClusterReplicationSpecRegionsConfigInput

func (ClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i ClusterReplicationSpecRegionsConfigArray) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterReplicationSpecRegionsConfigArrayOutput)
}

type ClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutput() ClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigOutput) ToClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigOutput {
	return o
}

// The number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary. If you do not specify this option, no analytics nodes are deployed to the region.
func (o ClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.AnalyticsNodes }).(pulumi.IntPtrOutput)
}

// Number of electable nodes for Atlas to deploy to the region. Electable nodes can become the primary and can facilitate local reads.
// * The total number of electableNodes across all replication spec regions  must total 3, 5, or 7.
// * Specify 0 if you do not want any electable nodes in the region.
// * You cannot create electable nodes in a region if `priority` is 0.
func (o ClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ElectableNodes }).(pulumi.IntPtrOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
// * For regions where `electableNodes` is at least 1, each region must have a priority of exactly one (1) less than the previous region. The first region must have a priority of 7. The lowest possible priority is 1.
// * The priority 7 region identifies the Preferred Region of the cluster. Atlas places the primary node in the Preferred Region. Priorities 1 through 7 are exclusive - no more than one region per cluster can be assigned a given priority.
// * Example: If you have three regions, their priorities would be 7, 6, and 5 respectively. If you added two more regions for supporting electable nodes, the priorities of those regions would be 4 and 3 respectively.
func (o ClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o ClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) *int { return v.ReadOnlyNodes }).(pulumi.IntPtrOutput)
}

// Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases.  Requires the **Atlas region name**, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o ClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type ClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (ClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutput() ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) ToClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) ClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o ClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) ClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterReplicationSpecRegionsConfig {
		return vs[0].([]ClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(ClusterReplicationSpecRegionsConfigOutput)
}

type ClusterSnapshotBackupPolicy struct {
	// The cluster ID.
	ClusterId             *string                             `pulumi:"clusterId"`
	ClusterName           *string                             `pulumi:"clusterName"`
	NextSnapshot          *string                             `pulumi:"nextSnapshot"`
	Policies              []ClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    *int                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour *int                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     *int                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       *bool                               `pulumi:"updateSnapshots"`
}

// ClusterSnapshotBackupPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyArgs and ClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyInput` via:
//
//          ClusterSnapshotBackupPolicyArgs{...}
type ClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput
	ToClusterSnapshotBackupPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyOutput
}

type ClusterSnapshotBackupPolicyArgs struct {
	// The cluster ID.
	ClusterId             pulumi.StringPtrInput                       `pulumi:"clusterId"`
	ClusterName           pulumi.StringPtrInput                       `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringPtrInput                       `pulumi:"nextSnapshot"`
	Policies              ClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntPtrInput                          `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntPtrInput                          `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntPtrInput                          `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolPtrInput                         `pulumi:"updateSnapshots"`
}

func (ClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArgs) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyOutput)
}

// ClusterSnapshotBackupPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyArray and ClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyArrayInput` via:
//
//          ClusterSnapshotBackupPolicyArray{ ClusterSnapshotBackupPolicyArgs{...} }
type ClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput
	ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyArray []ClusterSnapshotBackupPolicyInput

func (ClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyArray) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutput() ClusterSnapshotBackupPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyOutput) ToClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyOutput {
	return o
}

// The cluster ID.
func (o ClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *string { return v.NextSnapshot }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) Policies() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) []ClusterSnapshotBackupPolicyPolicy { return v.Policies }).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceHourOfDay }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.ReferenceMinuteOfHour }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *int { return v.RestoreWindowDays }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicy) *bool { return v.UpdateSnapshots }).(pulumi.BoolPtrOutput)
}

type ClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutput() ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) ToClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          *string                                       `pulumi:"id"`
	PolicyItems []ClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// ClusterSnapshotBackupPolicyPolicyInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArgs and ClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyArgs{...}
type ClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput
	ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyOutput
}

type ClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringPtrInput                                 `pulumi:"id"`
	PolicyItems ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (ClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArgs) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyOutput)
}

// ClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyArray and ClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyArray{ ClusterSnapshotBackupPolicyPolicyArgs{...} }
type ClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput
	ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyArray []ClusterSnapshotBackupPolicyPolicyInput

func (ClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyArray) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutput() ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) ToClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicy) []ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutput() ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) ToClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval *int    `pulumi:"frequencyInterval"`
	FrequencyType     *string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             *string `pulumi:"id"`
	RetentionUnit  *string `pulumi:"retentionUnit"`
	RetentionValue *int    `pulumi:"retentionValue"`
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArgs and ClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type ClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntPtrInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringPtrInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringPtrInput `pulumi:"id"`
	RetentionUnit  pulumi.StringPtrInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntPtrInput    `pulumi:"retentionValue"`
}

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts ClusterSnapshotBackupPolicyPolicyPolicyItemArray and ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          ClusterSnapshotBackupPolicyPolicyPolicyItemArray{ ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArray []ClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i ClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.FrequencyInterval }).(pulumi.IntPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.FrequencyType }).(pulumi.StringPtrOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *string { return v.RetentionUnit }).(pulumi.StringPtrOutput)
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSnapshotBackupPolicyPolicyPolicyItem) *int { return v.RetentionValue }).(pulumi.IntPtrOutput)
}

type ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) ClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]ClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type CustomDbRoleAction struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action string `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []CustomDbRoleActionResource `pulumi:"resources"`
}

// CustomDbRoleActionInput is an input type that accepts CustomDbRoleActionArgs and CustomDbRoleActionOutput values.
// You can construct a concrete instance of `CustomDbRoleActionInput` via:
//
//          CustomDbRoleActionArgs{...}
type CustomDbRoleActionInput interface {
	pulumi.Input

	ToCustomDbRoleActionOutput() CustomDbRoleActionOutput
	ToCustomDbRoleActionOutputWithContext(context.Context) CustomDbRoleActionOutput
}

type CustomDbRoleActionArgs struct {
	// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
	// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
	Action pulumi.StringInput `pulumi:"action"`
	// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources CustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (CustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return i.ToCustomDbRoleActionOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArgs) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionOutput)
}

// CustomDbRoleActionArrayInput is an input type that accepts CustomDbRoleActionArray and CustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionArrayInput` via:
//
//          CustomDbRoleActionArray{ CustomDbRoleActionArgs{...} }
type CustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput
	ToCustomDbRoleActionArrayOutputWithContext(context.Context) CustomDbRoleActionArrayOutput
}

type CustomDbRoleActionArray []CustomDbRoleActionInput

func (CustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return i.ToCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionArray) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionArrayOutput)
}

type CustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutput() CustomDbRoleActionOutput {
	return o
}

func (o CustomDbRoleActionOutput) ToCustomDbRoleActionOutputWithContext(ctx context.Context) CustomDbRoleActionOutput {
	return o
}

// Name of the privilege action. For a complete list of actions available in the Atlas API, see [Custom Role Actions](https://docs.atlas.mongodb.com/reference/api/custom-role-actions)
// > **Note**: The privilege actions available to the Custom Roles API resource represent a subset of the privilege actions available in the Atlas Custom Roles UI.
func (o CustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o CustomDbRoleActionOutput) Resources() CustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v CustomDbRoleAction) []CustomDbRoleActionResource { return v.Resources }).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleAction)(nil)).Elem()
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutput() CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) ToCustomDbRoleActionArrayOutputWithContext(ctx context.Context) CustomDbRoleActionArrayOutput {
	return o
}

func (o CustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleAction {
		return vs[0].([]CustomDbRoleAction)[vs[1].(int)]
	}).(CustomDbRoleActionOutput)
}

type CustomDbRoleActionResource struct {
	Cluster        *bool   `pulumi:"cluster"`
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName *string `pulumi:"databaseName"`
}

// CustomDbRoleActionResourceInput is an input type that accepts CustomDbRoleActionResourceArgs and CustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceInput` via:
//
//          CustomDbRoleActionResourceArgs{...}
type CustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput
	ToCustomDbRoleActionResourceOutputWithContext(context.Context) CustomDbRoleActionResourceOutput
}

type CustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolPtrInput   `pulumi:"cluster"`
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (CustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return i.ToCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArgs) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceOutput)
}

// CustomDbRoleActionResourceArrayInput is an input type that accepts CustomDbRoleActionResourceArray and CustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleActionResourceArrayInput` via:
//
//          CustomDbRoleActionResourceArray{ CustomDbRoleActionResourceArgs{...} }
type CustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput
	ToCustomDbRoleActionResourceArrayOutputWithContext(context.Context) CustomDbRoleActionResourceArrayOutput
}

type CustomDbRoleActionResourceArray []CustomDbRoleActionResourceInput

func (CustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return i.ToCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleActionResourceArray) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleActionResourceArrayOutput)
}

type CustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutput() CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) ToCustomDbRoleActionResourceOutputWithContext(ctx context.Context) CustomDbRoleActionResourceOutput {
	return o
}

func (o CustomDbRoleActionResourceOutput) Cluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *bool { return v.Cluster }).(pulumi.BoolPtrOutput)
}

func (o CustomDbRoleActionResourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the inherited role is granted.
func (o CustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDbRoleActionResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type CustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleActionResource)(nil)).Elem()
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutput() CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) ToCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) CustomDbRoleActionResourceArrayOutput {
	return o
}

func (o CustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) CustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleActionResource {
		return vs[0].([]CustomDbRoleActionResource)[vs[1].(int)]
	}).(CustomDbRoleActionResourceOutput)
}

type CustomDbRoleInheritedRole struct {
	// Database on which the inherited role is granted.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName string `pulumi:"roleName"`
}

// CustomDbRoleInheritedRoleInput is an input type that accepts CustomDbRoleInheritedRoleArgs and CustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleInput` via:
//
//          CustomDbRoleInheritedRoleArgs{...}
type CustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput
	ToCustomDbRoleInheritedRoleOutputWithContext(context.Context) CustomDbRoleInheritedRoleOutput
}

type CustomDbRoleInheritedRoleArgs struct {
	// Database on which the inherited role is granted.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the inherited role. This can either be another custom role or a built-in role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (CustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return i.ToCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArgs) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleOutput)
}

// CustomDbRoleInheritedRoleArrayInput is an input type that accepts CustomDbRoleInheritedRoleArray and CustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `CustomDbRoleInheritedRoleArrayInput` via:
//
//          CustomDbRoleInheritedRoleArray{ CustomDbRoleInheritedRoleArgs{...} }
type CustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput
	ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) CustomDbRoleInheritedRoleArrayOutput
}

type CustomDbRoleInheritedRoleArray []CustomDbRoleInheritedRoleInput

func (CustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return i.ToCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i CustomDbRoleInheritedRoleArray) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDbRoleInheritedRoleArrayOutput)
}

type CustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutput() CustomDbRoleInheritedRoleOutput {
	return o
}

func (o CustomDbRoleInheritedRoleOutput) ToCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleOutput {
	return o
}

// Database on which the inherited role is granted.
func (o CustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the inherited role. This can either be another custom role or a built-in role.
func (o CustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type CustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (CustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDbRoleInheritedRole)(nil)).Elem()
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutput() CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) ToCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) CustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o CustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) CustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDbRoleInheritedRole {
		return vs[0].([]CustomDbRoleInheritedRole)[vs[1].(int)]
	}).(CustomDbRoleInheritedRoleOutput)
}

type DataLakeAws struct {
	ExternalId        *string `pulumi:"externalId"`
	IamAssumedRoleArn *string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        *string `pulumi:"iamUserArn"`
	RoleId            string  `pulumi:"roleId"`
	TestS3Bucket      string  `pulumi:"testS3Bucket"`
}

// DataLakeAwsInput is an input type that accepts DataLakeAwsArgs and DataLakeAwsOutput values.
// You can construct a concrete instance of `DataLakeAwsInput` via:
//
//          DataLakeAwsArgs{...}
type DataLakeAwsInput interface {
	pulumi.Input

	ToDataLakeAwsOutput() DataLakeAwsOutput
	ToDataLakeAwsOutputWithContext(context.Context) DataLakeAwsOutput
}

type DataLakeAwsArgs struct {
	ExternalId        pulumi.StringPtrInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringPtrInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringPtrInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput    `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput    `pulumi:"testS3Bucket"`
}

func (DataLakeAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return i.ToDataLakeAwsOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput)
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i DataLakeAwsArgs) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsOutput).ToDataLakeAwsPtrOutputWithContext(ctx)
}

// DataLakeAwsPtrInput is an input type that accepts DataLakeAwsArgs, DataLakeAwsPtr and DataLakeAwsPtrOutput values.
// You can construct a concrete instance of `DataLakeAwsPtrInput` via:
//
//          DataLakeAwsArgs{...}
//
//  or:
//
//          nil
type DataLakeAwsPtrInput interface {
	pulumi.Input

	ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput
	ToDataLakeAwsPtrOutputWithContext(context.Context) DataLakeAwsPtrOutput
}

type dataLakeAwsPtrType DataLakeAwsArgs

func DataLakeAwsPtr(v *DataLakeAwsArgs) DataLakeAwsPtrInput {
	return (*dataLakeAwsPtrType)(v)
}

func (*dataLakeAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return i.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (i *dataLakeAwsPtrType) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeAwsPtrOutput)
}

type DataLakeAwsOutput struct{ *pulumi.OutputState }

func (DataLakeAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutput() DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsOutputWithContext(ctx context.Context) DataLakeAwsOutput {
	return o
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o.ToDataLakeAwsPtrOutputWithContext(context.Background())
}

func (o DataLakeAwsOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeAws) *DataLakeAws {
		return &v
	}).(DataLakeAwsPtrOutput)
}

func (o DataLakeAwsOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamAssumedRoleArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeAws) *string { return v.IamUserArn }).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o DataLakeAwsOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeAws) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type DataLakeAwsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeAws)(nil)).Elem()
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutput() DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) ToDataLakeAwsPtrOutputWithContext(ctx context.Context) DataLakeAwsPtrOutput {
	return o
}

func (o DataLakeAwsPtrOutput) Elem() DataLakeAwsOutput {
	return o.ApplyT(func(v *DataLakeAws) DataLakeAws {
		if v != nil {
			return *v
		}
		var ret DataLakeAws
		return ret
	}).(DataLakeAwsOutput)
}

func (o DataLakeAwsPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamAssumedRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamAssumedRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) IamUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return v.IamUserArn
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeAwsPtrOutput) TestS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeAws) *string {
		if v == nil {
			return nil
		}
		return &v.TestS3Bucket
	}).(pulumi.StringPtrOutput)
}

type DataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// DataLakeDataProcessRegionInput is an input type that accepts DataLakeDataProcessRegionArgs and DataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionInput` via:
//
//          DataLakeDataProcessRegionArgs{...}
type DataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput
	ToDataLakeDataProcessRegionOutputWithContext(context.Context) DataLakeDataProcessRegionOutput
}

type DataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (DataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return i.ToDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput)
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i DataLakeDataProcessRegionArgs) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionOutput).ToDataLakeDataProcessRegionPtrOutputWithContext(ctx)
}

// DataLakeDataProcessRegionPtrInput is an input type that accepts DataLakeDataProcessRegionArgs, DataLakeDataProcessRegionPtr and DataLakeDataProcessRegionPtrOutput values.
// You can construct a concrete instance of `DataLakeDataProcessRegionPtrInput` via:
//
//          DataLakeDataProcessRegionArgs{...}
//
//  or:
//
//          nil
type DataLakeDataProcessRegionPtrInput interface {
	pulumi.Input

	ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput
	ToDataLakeDataProcessRegionPtrOutputWithContext(context.Context) DataLakeDataProcessRegionPtrOutput
}

type dataLakeDataProcessRegionPtrType DataLakeDataProcessRegionArgs

func DataLakeDataProcessRegionPtr(v *DataLakeDataProcessRegionArgs) DataLakeDataProcessRegionPtrInput {
	return (*dataLakeDataProcessRegionPtrType)(v)
}

func (*dataLakeDataProcessRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return i.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (i *dataLakeDataProcessRegionPtrType) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeDataProcessRegionPtrOutput)
}

type DataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutput() DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionOutputWithContext(ctx context.Context) DataLakeDataProcessRegionOutput {
	return o
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o.ToDataLakeDataProcessRegionPtrOutputWithContext(context.Background())
}

func (o DataLakeDataProcessRegionOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeDataProcessRegion) *DataLakeDataProcessRegion {
		return &v
	}).(DataLakeDataProcessRegionPtrOutput)
}

func (o DataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o DataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type DataLakeDataProcessRegionPtrOutput struct{ *pulumi.OutputState }

func (DataLakeDataProcessRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeDataProcessRegion)(nil)).Elem()
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutput() DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) ToDataLakeDataProcessRegionPtrOutputWithContext(ctx context.Context) DataLakeDataProcessRegionPtrOutput {
	return o
}

func (o DataLakeDataProcessRegionPtrOutput) Elem() DataLakeDataProcessRegionOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) DataLakeDataProcessRegion {
		if v != nil {
			return *v
		}
		var ret DataLakeDataProcessRegion
		return ret
	}).(DataLakeDataProcessRegionOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.CloudProvider
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeDataProcessRegionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeDataProcessRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabase struct {
	Collections            []DataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections *int                                `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  *string                       `pulumi:"name"`
	Views []DataLakeStorageDatabaseView `pulumi:"views"`
}

// DataLakeStorageDatabaseInput is an input type that accepts DataLakeStorageDatabaseArgs and DataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseInput` via:
//
//          DataLakeStorageDatabaseArgs{...}
type DataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput
	ToDataLakeStorageDatabaseOutputWithContext(context.Context) DataLakeStorageDatabaseOutput
}

type DataLakeStorageDatabaseArgs struct {
	Collections            DataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntPtrInput                          `pulumi:"maxWildcardCollections"`
	// Name of the Atlas Data Lake.
	Name  pulumi.StringPtrInput                 `pulumi:"name"`
	Views DataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (DataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return i.ToDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArgs) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseOutput)
}

// DataLakeStorageDatabaseArrayInput is an input type that accepts DataLakeStorageDatabaseArray and DataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseArrayInput` via:
//
//          DataLakeStorageDatabaseArray{ DataLakeStorageDatabaseArgs{...} }
type DataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput
	ToDataLakeStorageDatabaseArrayOutputWithContext(context.Context) DataLakeStorageDatabaseArrayOutput
}

type DataLakeStorageDatabaseArray []DataLakeStorageDatabaseInput

func (DataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return i.ToDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseArray) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseArrayOutput)
}

type DataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutput() DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) ToDataLakeStorageDatabaseOutputWithContext(ctx context.Context) DataLakeStorageDatabaseOutput {
	return o
}

func (o DataLakeStorageDatabaseOutput) Collections() DataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseCollection { return v.Collections }).(DataLakeStorageDatabaseCollectionArrayOutput)
}

func (o DataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *int { return v.MaxWildcardCollections }).(pulumi.IntPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseOutput) Views() DataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabase) []DataLakeStorageDatabaseView { return v.Views }).(DataLakeStorageDatabaseViewArrayOutput)
}

type DataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabase)(nil)).Elem()
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutput() DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) ToDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabase {
		return vs[0].([]DataLakeStorageDatabase)[vs[1].(int)]
	}).(DataLakeStorageDatabaseOutput)
}

type DataLakeStorageDatabaseCollection struct {
	DataSources []DataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name *string `pulumi:"name"`
}

// DataLakeStorageDatabaseCollectionInput is an input type that accepts DataLakeStorageDatabaseCollectionArgs and DataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionInput` via:
//
//          DataLakeStorageDatabaseCollectionArgs{...}
type DataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput
	ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionOutput
}

type DataLakeStorageDatabaseCollectionArgs struct {
	DataSources DataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the Atlas Data Lake.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return i.ToDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArgs) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionOutput)
}

// DataLakeStorageDatabaseCollectionArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionArray and DataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionArrayInput` via:
//
//          DataLakeStorageDatabaseCollectionArray{ DataLakeStorageDatabaseCollectionArgs{...} }
type DataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput
	ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionArrayOutput
}

type DataLakeStorageDatabaseCollectionArray []DataLakeStorageDatabaseCollectionInput

func (DataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionArray) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionArrayOutput)
}

type DataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutput() DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) ToDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionOutput) DataSources() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) []DataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutput() DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) ToDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollection {
		return vs[0].([]DataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionOutput)
}

type DataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat *string `pulumi:"defaultFormat"`
	Path          *string `pulumi:"path"`
	StoreName     *string `pulumi:"storeName"`
}

// DataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArgs and DataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//          DataLakeStorageDatabaseCollectionDataSourceArgs{...}
type DataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput
	ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringPtrInput `pulumi:"defaultFormat"`
	Path          pulumi.StringPtrInput `pulumi:"path"`
	StoreName     pulumi.StringPtrInput `pulumi:"storeName"`
}

func (DataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArgs) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

// DataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts DataLakeStorageDatabaseCollectionDataSourceArray and DataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//          DataLakeStorageDatabaseCollectionDataSourceArray{ DataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type DataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type DataLakeStorageDatabaseCollectionDataSourceArray []DataLakeStorageDatabaseCollectionDataSourceInput

func (DataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseCollectionDataSourceArray) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

type DataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutput() DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) ToDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.DefaultFormat }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseCollectionDataSource) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutput() DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]DataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(DataLakeStorageDatabaseCollectionDataSourceOutput)
}

type DataLakeStorageDatabaseView struct {
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Pipeline *string `pulumi:"pipeline"`
	Source   *string `pulumi:"source"`
}

// DataLakeStorageDatabaseViewInput is an input type that accepts DataLakeStorageDatabaseViewArgs and DataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewInput` via:
//
//          DataLakeStorageDatabaseViewArgs{...}
type DataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput
	ToDataLakeStorageDatabaseViewOutputWithContext(context.Context) DataLakeStorageDatabaseViewOutput
}

type DataLakeStorageDatabaseViewArgs struct {
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Pipeline pulumi.StringPtrInput `pulumi:"pipeline"`
	Source   pulumi.StringPtrInput `pulumi:"source"`
}

func (DataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return i.ToDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArgs) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewOutput)
}

// DataLakeStorageDatabaseViewArrayInput is an input type that accepts DataLakeStorageDatabaseViewArray and DataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageDatabaseViewArrayInput` via:
//
//          DataLakeStorageDatabaseViewArray{ DataLakeStorageDatabaseViewArgs{...} }
type DataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput
	ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) DataLakeStorageDatabaseViewArrayOutput
}

type DataLakeStorageDatabaseViewArray []DataLakeStorageDatabaseViewInput

func (DataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return i.ToDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageDatabaseViewArray) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageDatabaseViewArrayOutput)
}

type DataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutput() DataLakeStorageDatabaseViewOutput {
	return o
}

func (o DataLakeStorageDatabaseViewOutput) ToDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewOutput {
	return o
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageDatabaseViewOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Pipeline }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageDatabaseViewOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageDatabaseView) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type DataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageDatabaseView)(nil)).Elem()
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutput() DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) ToDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) DataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o DataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) DataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageDatabaseView {
		return vs[0].([]DataLakeStorageDatabaseView)[vs[1].(int)]
	}).(DataLakeStorageDatabaseViewOutput)
}

type DataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   *string  `pulumi:"bucket"`
	Delimiter                *string  `pulumi:"delimiter"`
	IncludeTags              *bool    `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     *string `pulumi:"name"`
	Prefix   *string `pulumi:"prefix"`
	Provider *string `pulumi:"provider"`
	Region   *string `pulumi:"region"`
}

// DataLakeStorageStoreInput is an input type that accepts DataLakeStorageStoreArgs and DataLakeStorageStoreOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreInput` via:
//
//          DataLakeStorageStoreArgs{...}
type DataLakeStorageStoreInput interface {
	pulumi.Input

	ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput
	ToDataLakeStorageStoreOutputWithContext(context.Context) DataLakeStorageStoreOutput
}

type DataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringPtrInput   `pulumi:"bucket"`
	Delimiter                pulumi.StringPtrInput   `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolPtrInput     `pulumi:"includeTags"`
	// Name of the Atlas Data Lake.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Prefix   pulumi.StringPtrInput `pulumi:"prefix"`
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	Region   pulumi.StringPtrInput `pulumi:"region"`
}

func (DataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return i.ToDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArgs) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreOutput)
}

// DataLakeStorageStoreArrayInput is an input type that accepts DataLakeStorageStoreArray and DataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `DataLakeStorageStoreArrayInput` via:
//
//          DataLakeStorageStoreArray{ DataLakeStorageStoreArgs{...} }
type DataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput
	ToDataLakeStorageStoreArrayOutputWithContext(context.Context) DataLakeStorageStoreArrayOutput
}

type DataLakeStorageStoreArray []DataLakeStorageStoreInput

func (DataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return i.ToDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i DataLakeStorageStoreArray) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeStorageStoreArrayOutput)
}

type DataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutput() DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) ToDataLakeStorageStoreOutputWithContext(ctx context.Context) DataLakeStorageStoreOutput {
	return o
}

func (o DataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o DataLakeStorageStoreOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) IncludeTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *bool { return v.IncludeTags }).(pulumi.BoolPtrOutput)
}

// Name of the Atlas Data Lake.
func (o DataLakeStorageStoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o DataLakeStorageStoreOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeStorageStore) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (DataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeStorageStore)(nil)).Elem()
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutput() DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) ToDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) DataLakeStorageStoreArrayOutput {
	return o
}

func (o DataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) DataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeStorageStore {
		return vs[0].([]DataLakeStorageStore)[vs[1].(int)]
	}).(DataLakeStorageStoreOutput)
}

type DatabaseUserLabel struct {
	// The key that you want to write.
	Key *string `pulumi:"key"`
	// The value that you want to write.
	Value *string `pulumi:"value"`
}

// DatabaseUserLabelInput is an input type that accepts DatabaseUserLabelArgs and DatabaseUserLabelOutput values.
// You can construct a concrete instance of `DatabaseUserLabelInput` via:
//
//          DatabaseUserLabelArgs{...}
type DatabaseUserLabelInput interface {
	pulumi.Input

	ToDatabaseUserLabelOutput() DatabaseUserLabelOutput
	ToDatabaseUserLabelOutputWithContext(context.Context) DatabaseUserLabelOutput
}

type DatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return i.ToDatabaseUserLabelOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArgs) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelOutput)
}

// DatabaseUserLabelArrayInput is an input type that accepts DatabaseUserLabelArray and DatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `DatabaseUserLabelArrayInput` via:
//
//          DatabaseUserLabelArray{ DatabaseUserLabelArgs{...} }
type DatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput
	ToDatabaseUserLabelArrayOutputWithContext(context.Context) DatabaseUserLabelArrayOutput
}

type DatabaseUserLabelArray []DatabaseUserLabelInput

func (DatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return i.ToDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i DatabaseUserLabelArray) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserLabelArrayOutput)
}

type DatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutput() DatabaseUserLabelOutput {
	return o
}

func (o DatabaseUserLabelOutput) ToDatabaseUserLabelOutputWithContext(ctx context.Context) DatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o DatabaseUserLabelOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value that you want to write.
func (o DatabaseUserLabelOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserLabel) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserLabel)(nil)).Elem()
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutput() DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) ToDatabaseUserLabelArrayOutputWithContext(ctx context.Context) DatabaseUserLabelArrayOutput {
	return o
}

func (o DatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) DatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserLabel {
		return vs[0].([]DatabaseUserLabel)[vs[1].(int)]
	}).(DatabaseUserLabelOutput)
}

type DatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName *string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName *string `pulumi:"roleName"`
}

// DatabaseUserRoleInput is an input type that accepts DatabaseUserRoleArgs and DatabaseUserRoleOutput values.
// You can construct a concrete instance of `DatabaseUserRoleInput` via:
//
//          DatabaseUserRoleArgs{...}
type DatabaseUserRoleInput interface {
	pulumi.Input

	ToDatabaseUserRoleOutput() DatabaseUserRoleOutput
	ToDatabaseUserRoleOutputWithContext(context.Context) DatabaseUserRoleOutput
}

type DatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (DatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return i.ToDatabaseUserRoleOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArgs) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleOutput)
}

// DatabaseUserRoleArrayInput is an input type that accepts DatabaseUserRoleArray and DatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `DatabaseUserRoleArrayInput` via:
//
//          DatabaseUserRoleArray{ DatabaseUserRoleArgs{...} }
type DatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput
	ToDatabaseUserRoleArrayOutputWithContext(context.Context) DatabaseUserRoleArrayOutput
}

type DatabaseUserRoleArray []DatabaseUserRoleInput

func (DatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return i.ToDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i DatabaseUserRoleArray) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserRoleArrayOutput)
}

type DatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutput() DatabaseUserRoleOutput {
	return o
}

func (o DatabaseUserRoleOutput) ToDatabaseUserRoleOutputWithContext(ctx context.Context) DatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o DatabaseUserRoleOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o DatabaseUserRoleOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the role to grant. See [Create a Database User](https://docs.atlas.mongodb.com/reference/api/database-users-create-a-user/) `roles.roleName` for valid values and restrictions.
func (o DatabaseUserRoleOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserRole) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type DatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserRole)(nil)).Elem()
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutput() DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) ToDatabaseUserRoleArrayOutputWithContext(ctx context.Context) DatabaseUserRoleArrayOutput {
	return o
}

func (o DatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) DatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserRole {
		return vs[0].([]DatabaseUserRole)[vs[1].(int)]
	}).(DatabaseUserRoleOutput)
}

type DatabaseUserScope struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name *string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type *string `pulumi:"type"`
}

// DatabaseUserScopeInput is an input type that accepts DatabaseUserScopeArgs and DatabaseUserScopeOutput values.
// You can construct a concrete instance of `DatabaseUserScopeInput` via:
//
//          DatabaseUserScopeArgs{...}
type DatabaseUserScopeInput interface {
	pulumi.Input

	ToDatabaseUserScopeOutput() DatabaseUserScopeOutput
	ToDatabaseUserScopeOutputWithContext(context.Context) DatabaseUserScopeOutput
}

type DatabaseUserScopeArgs struct {
	// Name of the cluster or Atlas Data Lake that the user has access to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return i.ToDatabaseUserScopeOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArgs) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeOutput)
}

// DatabaseUserScopeArrayInput is an input type that accepts DatabaseUserScopeArray and DatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `DatabaseUserScopeArrayInput` via:
//
//          DatabaseUserScopeArray{ DatabaseUserScopeArgs{...} }
type DatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput
	ToDatabaseUserScopeArrayOutputWithContext(context.Context) DatabaseUserScopeArrayOutput
}

type DatabaseUserScopeArray []DatabaseUserScopeInput

func (DatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return i.ToDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i DatabaseUserScopeArray) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseUserScopeArrayOutput)
}

type DatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutput() DatabaseUserScopeOutput {
	return o
}

func (o DatabaseUserScopeOutput) ToDatabaseUserScopeOutputWithContext(ctx context.Context) DatabaseUserScopeOutput {
	return o
}

// Name of the cluster or Atlas Data Lake that the user has access to.
func (o DatabaseUserScopeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o DatabaseUserScopeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseUserScope) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseUserScope)(nil)).Elem()
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutput() DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) ToDatabaseUserScopeArrayOutputWithContext(ctx context.Context) DatabaseUserScopeArrayOutput {
	return o
}

func (o DatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) DatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseUserScope {
		return vs[0].([]DatabaseUserScope)[vs[1].(int)]
	}).(DatabaseUserScopeOutput)
}

type EncryptionAtRestAwsKmsConfig struct {
	AccessKeyId *string `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId *string `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region *string `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          *string `pulumi:"roleId"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// EncryptionAtRestAwsKmsConfigInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs and EncryptionAtRestAwsKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigInput` via:
//
//          EncryptionAtRestAwsKmsConfigArgs{...}
type EncryptionAtRestAwsKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput
	ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigOutput
}

type EncryptionAtRestAwsKmsConfigArgs struct {
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
	CustomerMasterKeyId pulumi.StringPtrInput `pulumi:"customerMasterKeyId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
	Region pulumi.StringPtrInput `pulumi:"region"`
	// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
	RoleId          pulumi.StringPtrInput `pulumi:"roleId"`
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (EncryptionAtRestAwsKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return i.ToEncryptionAtRestAwsKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput)
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAwsKmsConfigArgs) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigOutput).ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAwsKmsConfigPtrInput is an input type that accepts EncryptionAtRestAwsKmsConfigArgs, EncryptionAtRestAwsKmsConfigPtr and EncryptionAtRestAwsKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAwsKmsConfigPtrInput` via:
//
//          EncryptionAtRestAwsKmsConfigArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestAwsKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput
	ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestAwsKmsConfigPtrOutput
}

type encryptionAtRestAwsKmsConfigPtrType EncryptionAtRestAwsKmsConfigArgs

func EncryptionAtRestAwsKmsConfigPtr(v *EncryptionAtRestAwsKmsConfigArgs) EncryptionAtRestAwsKmsConfigPtrInput {
	return (*encryptionAtRestAwsKmsConfigPtrType)(v)
}

func (*encryptionAtRestAwsKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return i.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAwsKmsConfigPtrType) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

type EncryptionAtRestAwsKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutput() EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAwsKmsConfigOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAwsKmsConfig) *EncryptionAtRestAwsKmsConfig {
		return &v
	}).(EncryptionAtRestAwsKmsConfigPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.CustomerMasterKeyId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAwsKmsConfig) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAwsKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAwsKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAwsKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutput() EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) ToEncryptionAtRestAwsKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAwsKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) Elem() EncryptionAtRestAwsKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) EncryptionAtRestAwsKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAwsKmsConfig
		return ret
	}).(EncryptionAtRestAwsKmsConfigOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The AWS customer master key used to encrypt and decrypt the MongoDB master keys.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) CustomerMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomerMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS region in which the AWS customer master key exists: CA_CENTRAL_1, US_EAST_1, US_EAST_2, US_WEST_1, US_WEST_2, SA_EAST_1
func (o EncryptionAtRestAwsKmsConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// ID of an AWS IAM role authorized to manage an AWS customer master key. To find the ID for an existing IAM role check the `roleId` attribute of the `CloudProviderAccess` resource.
func (o EncryptionAtRestAwsKmsConfigPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o EncryptionAtRestAwsKmsConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAwsKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfig struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment *string `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId *string `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled bool `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName *string `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret *string `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId *string `pulumi:"tenantId"`
}

// EncryptionAtRestAzureKeyVaultConfigInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs and EncryptionAtRestAzureKeyVaultConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigInput` via:
//
//          EncryptionAtRestAzureKeyVaultConfigArgs{...}
type EncryptionAtRestAzureKeyVaultConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput
	ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigOutput
}

type EncryptionAtRestAzureKeyVaultConfigArgs struct {
	// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
	AzureEnvironment pulumi.StringPtrInput `pulumi:"azureEnvironment"`
	// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The unique identifier of a key in an Azure Key Vault.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
	// The name of an Azure Key Vault containing your key.
	KeyVaultName pulumi.StringPtrInput `pulumi:"keyVaultName"`
	// The name of the Azure Resource group that contains an Azure Key Vault.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The unique identifier associated with an Azure subscription.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
	// The unique identifier for an Azure AD tenant within an Azure subscription.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (EncryptionAtRestAzureKeyVaultConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestAzureKeyVaultConfigArgs) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigOutput).ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestAzureKeyVaultConfigPtrInput is an input type that accepts EncryptionAtRestAzureKeyVaultConfigArgs, EncryptionAtRestAzureKeyVaultConfigPtr and EncryptionAtRestAzureKeyVaultConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestAzureKeyVaultConfigPtrInput` via:
//
//          EncryptionAtRestAzureKeyVaultConfigArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestAzureKeyVaultConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput
	ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput
}

type encryptionAtRestAzureKeyVaultConfigPtrType EncryptionAtRestAzureKeyVaultConfigArgs

func EncryptionAtRestAzureKeyVaultConfigPtr(v *EncryptionAtRestAzureKeyVaultConfigArgs) EncryptionAtRestAzureKeyVaultConfigPtrInput {
	return (*encryptionAtRestAzureKeyVaultConfigPtrType)(v)
}

func (*encryptionAtRestAzureKeyVaultConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return i.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestAzureKeyVaultConfigPtrType) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutput() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestAzureKeyVaultConfigOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestAzureKeyVaultConfig) *EncryptionAtRestAzureKeyVaultConfig {
		return &v
	}).(EncryptionAtRestAzureKeyVaultConfigPtrOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.AzureEnvironment }).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.KeyVaultName }).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestAzureKeyVaultConfig) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestAzureKeyVaultConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestAzureKeyVaultConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestAzureKeyVaultConfig)(nil)).Elem()
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutput() EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ToEncryptionAtRestAzureKeyVaultConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestAzureKeyVaultConfigPtrOutput {
	return o
}

func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Elem() EncryptionAtRestAzureKeyVaultConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) EncryptionAtRestAzureKeyVaultConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestAzureKeyVaultConfig
		return ret
	}).(EncryptionAtRestAzureKeyVaultConfigOutput)
}

// The Azure environment where the Azure account credentials reside. Valid values are the following: AZURE, AZURE_CHINA, AZURE_GERMANY
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) AzureEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.AzureEnvironment
	}).(pulumi.StringPtrOutput)
}

// The client ID, also known as the application ID, for an Azure application associated with the Azure AD tenant.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The unique identifier of a key in an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// The name of an Azure Key Vault containing your key.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) KeyVaultName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultName
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Resource group that contains an Azure Key Vault.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroupName
	}).(pulumi.StringPtrOutput)
}

// The secret associated with the Azure Key Vault specified by azureKeyVault.tenantID.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// The unique identifier associated with an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for an Azure AD tenant within an Azure subscription.
func (o EncryptionAtRestAzureKeyVaultConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestAzureKeyVaultConfig) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfig struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId *string `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey *string `pulumi:"serviceAccountKey"`
}

// EncryptionAtRestGoogleCloudKmsConfigInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs and EncryptionAtRestGoogleCloudKmsConfigOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigInput` via:
//
//          EncryptionAtRestGoogleCloudKmsConfigArgs{...}
type EncryptionAtRestGoogleCloudKmsConfigInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput
	ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput
}

type EncryptionAtRestGoogleCloudKmsConfigArgs struct {
	// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Key Version Resource ID from your GCP account.
	KeyVersionResourceId pulumi.StringPtrInput `pulumi:"keyVersionResourceId"`
	// String-formatted JSON object containing GCP KMS credentials from your GCP account.
	ServiceAccountKey pulumi.StringPtrInput `pulumi:"serviceAccountKey"`
}

func (EncryptionAtRestGoogleCloudKmsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i EncryptionAtRestGoogleCloudKmsConfigArgs) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigOutput).ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx)
}

// EncryptionAtRestGoogleCloudKmsConfigPtrInput is an input type that accepts EncryptionAtRestGoogleCloudKmsConfigArgs, EncryptionAtRestGoogleCloudKmsConfigPtr and EncryptionAtRestGoogleCloudKmsConfigPtrOutput values.
// You can construct a concrete instance of `EncryptionAtRestGoogleCloudKmsConfigPtrInput` via:
//
//          EncryptionAtRestGoogleCloudKmsConfigArgs{...}
//
//  or:
//
//          nil
type EncryptionAtRestGoogleCloudKmsConfigPtrInput interface {
	pulumi.Input

	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput
	ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput
}

type encryptionAtRestGoogleCloudKmsConfigPtrType EncryptionAtRestGoogleCloudKmsConfigArgs

func EncryptionAtRestGoogleCloudKmsConfigPtr(v *EncryptionAtRestGoogleCloudKmsConfigArgs) EncryptionAtRestGoogleCloudKmsConfigPtrInput {
	return (*encryptionAtRestGoogleCloudKmsConfigPtrType)(v)
}

func (*encryptionAtRestGoogleCloudKmsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return i.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (i *encryptionAtRestGoogleCloudKmsConfigPtrType) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfigOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutput() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(context.Background())
}

func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionAtRestGoogleCloudKmsConfig) *EncryptionAtRestGoogleCloudKmsConfig {
		return &v
	}).(EncryptionAtRestGoogleCloudKmsConfigPtrOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.KeyVersionResourceId }).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionAtRestGoogleCloudKmsConfig) *string { return v.ServiceAccountKey }).(pulumi.StringPtrOutput)
}

type EncryptionAtRestGoogleCloudKmsConfigPtrOutput struct{ *pulumi.OutputState }

func (EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionAtRestGoogleCloudKmsConfig)(nil)).Elem()
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutput() EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ToEncryptionAtRestGoogleCloudKmsConfigPtrOutputWithContext(ctx context.Context) EncryptionAtRestGoogleCloudKmsConfigPtrOutput {
	return o
}

func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Elem() EncryptionAtRestGoogleCloudKmsConfigOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) EncryptionAtRestGoogleCloudKmsConfig {
		if v != nil {
			return *v
		}
		var ret EncryptionAtRestGoogleCloudKmsConfig
		return ret
	}).(EncryptionAtRestGoogleCloudKmsConfigOutput)
}

// Specifies whether Encryption at Rest is enabled for an Atlas project. To disable Encryption at Rest, pass only this parameter with a value of false. When you disable Encryption at Rest, Atlas also removes the configuration details.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Key Version Resource ID from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) KeyVersionResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersionResourceId
	}).(pulumi.StringPtrOutput)
}

// String-formatted JSON object containing GCP KMS credentials from your GCP account.
func (o EncryptionAtRestGoogleCloudKmsConfigPtrOutput) ServiceAccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionAtRestGoogleCloudKmsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountKey
	}).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessors struct {
	AwsEventbridge *EventTriggerEventProcessorsAwsEventbridge `pulumi:"awsEventbridge"`
}

// EventTriggerEventProcessorsInput is an input type that accepts EventTriggerEventProcessorsArgs and EventTriggerEventProcessorsOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsInput` via:
//
//          EventTriggerEventProcessorsArgs{...}
type EventTriggerEventProcessorsInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput
	ToEventTriggerEventProcessorsOutputWithContext(context.Context) EventTriggerEventProcessorsOutput
}

type EventTriggerEventProcessorsArgs struct {
	AwsEventbridge EventTriggerEventProcessorsAwsEventbridgePtrInput `pulumi:"awsEventbridge"`
}

func (EventTriggerEventProcessorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return i.ToEventTriggerEventProcessorsOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput)
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsArgs) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsOutput).ToEventTriggerEventProcessorsPtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsPtrInput is an input type that accepts EventTriggerEventProcessorsArgs, EventTriggerEventProcessorsPtr and EventTriggerEventProcessorsPtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsPtrInput` via:
//
//          EventTriggerEventProcessorsArgs{...}
//
//  or:
//
//          nil
type EventTriggerEventProcessorsPtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput
	ToEventTriggerEventProcessorsPtrOutputWithContext(context.Context) EventTriggerEventProcessorsPtrOutput
}

type eventTriggerEventProcessorsPtrType EventTriggerEventProcessorsArgs

func EventTriggerEventProcessorsPtr(v *EventTriggerEventProcessorsArgs) EventTriggerEventProcessorsPtrInput {
	return (*eventTriggerEventProcessorsPtrType)(v)
}

func (*eventTriggerEventProcessorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return i.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsPtrType) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsPtrOutput)
}

type EventTriggerEventProcessorsOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutput() EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsOutputWithContext(ctx context.Context) EventTriggerEventProcessorsOutput {
	return o
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o.ToEventTriggerEventProcessorsPtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessors) *EventTriggerEventProcessors {
		return &v
	}).(EventTriggerEventProcessorsPtrOutput)
}

func (o EventTriggerEventProcessorsOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsPtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessors)(nil)).Elem()
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutput() EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) ToEventTriggerEventProcessorsPtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsPtrOutput {
	return o
}

func (o EventTriggerEventProcessorsPtrOutput) Elem() EventTriggerEventProcessorsOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) EventTriggerEventProcessors {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessors
		return ret
	}).(EventTriggerEventProcessorsOutput)
}

func (o EventTriggerEventProcessorsPtrOutput) AwsEventbridge() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessors) *EventTriggerEventProcessorsAwsEventbridge {
		if v == nil {
			return nil
		}
		return v.AwsEventbridge
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridge struct {
	ConfigAccountId *string `pulumi:"configAccountId"`
	ConfigRegion    *string `pulumi:"configRegion"`
}

// EventTriggerEventProcessorsAwsEventbridgeInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs and EventTriggerEventProcessorsAwsEventbridgeOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgeInput` via:
//
//          EventTriggerEventProcessorsAwsEventbridgeArgs{...}
type EventTriggerEventProcessorsAwsEventbridgeInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput
	ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput
}

type EventTriggerEventProcessorsAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringPtrInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringPtrInput `pulumi:"configRegion"`
}

func (EventTriggerEventProcessorsAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i EventTriggerEventProcessorsAwsEventbridgeArgs) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgeOutput).ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx)
}

// EventTriggerEventProcessorsAwsEventbridgePtrInput is an input type that accepts EventTriggerEventProcessorsAwsEventbridgeArgs, EventTriggerEventProcessorsAwsEventbridgePtr and EventTriggerEventProcessorsAwsEventbridgePtrOutput values.
// You can construct a concrete instance of `EventTriggerEventProcessorsAwsEventbridgePtrInput` via:
//
//          EventTriggerEventProcessorsAwsEventbridgeArgs{...}
//
//  or:
//
//          nil
type EventTriggerEventProcessorsAwsEventbridgePtrInput interface {
	pulumi.Input

	ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput
	ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput
}

type eventTriggerEventProcessorsAwsEventbridgePtrType EventTriggerEventProcessorsAwsEventbridgeArgs

func EventTriggerEventProcessorsAwsEventbridgePtr(v *EventTriggerEventProcessorsAwsEventbridgeArgs) EventTriggerEventProcessorsAwsEventbridgePtrInput {
	return (*eventTriggerEventProcessorsAwsEventbridgePtrType)(v)
}

func (*eventTriggerEventProcessorsAwsEventbridgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return i.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (i *eventTriggerEventProcessorsAwsEventbridgePtrType) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutput() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgeOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(context.Background())
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTriggerEventProcessorsAwsEventbridge) *EventTriggerEventProcessorsAwsEventbridge {
		return &v
	}).(EventTriggerEventProcessorsAwsEventbridgePtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigAccountId }).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgeOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTriggerEventProcessorsAwsEventbridge) *string { return v.ConfigRegion }).(pulumi.StringPtrOutput)
}

type EventTriggerEventProcessorsAwsEventbridgePtrOutput struct{ *pulumi.OutputState }

func (EventTriggerEventProcessorsAwsEventbridgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTriggerEventProcessorsAwsEventbridge)(nil)).Elem()
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutput() EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ToEventTriggerEventProcessorsAwsEventbridgePtrOutputWithContext(ctx context.Context) EventTriggerEventProcessorsAwsEventbridgePtrOutput {
	return o
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) Elem() EventTriggerEventProcessorsAwsEventbridgeOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) EventTriggerEventProcessorsAwsEventbridge {
		if v != nil {
			return *v
		}
		var ret EventTriggerEventProcessorsAwsEventbridge
		return ret
	}).(EventTriggerEventProcessorsAwsEventbridgeOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigAccountId
	}).(pulumi.StringPtrOutput)
}

func (o EventTriggerEventProcessorsAwsEventbridgePtrOutput) ConfigRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTriggerEventProcessorsAwsEventbridge) *string {
		if v == nil {
			return nil
		}
		return v.ConfigRegion
	}).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMapping struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location *string `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone *string `pulumi:"zone"`
}

// GlobalClusterConfigCustomZoneMappingInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArgs and GlobalClusterConfigCustomZoneMappingOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingInput` via:
//
//          GlobalClusterConfigCustomZoneMappingArgs{...}
type GlobalClusterConfigCustomZoneMappingInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput
	ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingOutput
}

type GlobalClusterConfigCustomZoneMappingArgs struct {
	// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the zone in your Global Cluster that you want to map to location.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (GlobalClusterConfigCustomZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArgs) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingOutput)
}

// GlobalClusterConfigCustomZoneMappingArrayInput is an input type that accepts GlobalClusterConfigCustomZoneMappingArray and GlobalClusterConfigCustomZoneMappingArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigCustomZoneMappingArrayInput` via:
//
//          GlobalClusterConfigCustomZoneMappingArray{ GlobalClusterConfigCustomZoneMappingArgs{...} }
type GlobalClusterConfigCustomZoneMappingArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput
	ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput
}

type GlobalClusterConfigCustomZoneMappingArray []GlobalClusterConfigCustomZoneMappingInput

func (GlobalClusterConfigCustomZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return i.ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigCustomZoneMappingArray) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigCustomZoneMappingArrayOutput)
}

type GlobalClusterConfigCustomZoneMappingOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutput() GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingOutput) ToGlobalClusterConfigCustomZoneMappingOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingOutput {
	return o
}

// The ISO location code to which you want to map a zone in your Global Cluster. You can find a list of all supported location codes [here](https://cloud.mongodb.com/static/atlas/country_iso_codes.txt).
func (o GlobalClusterConfigCustomZoneMappingOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the zone in your Global Cluster that you want to map to location.
func (o GlobalClusterConfigCustomZoneMappingOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigCustomZoneMapping) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type GlobalClusterConfigCustomZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigCustomZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigCustomZoneMapping)(nil)).Elem()
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutput() GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) ToGlobalClusterConfigCustomZoneMappingArrayOutputWithContext(ctx context.Context) GlobalClusterConfigCustomZoneMappingArrayOutput {
	return o
}

func (o GlobalClusterConfigCustomZoneMappingArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigCustomZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigCustomZoneMapping {
		return vs[0].([]GlobalClusterConfigCustomZoneMapping)[vs[1].(int)]
	}).(GlobalClusterConfigCustomZoneMappingOutput)
}

type GlobalClusterConfigManagedNamespace struct {
	// The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed *bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique *bool `pulumi:"isShardKeyUnique"`
}

// GlobalClusterConfigManagedNamespaceInput is an input type that accepts GlobalClusterConfigManagedNamespaceArgs and GlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceInput` via:
//
//          GlobalClusterConfigManagedNamespaceArgs{...}
type GlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput
	ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceOutput
}

type GlobalClusterConfigManagedNamespaceArgs struct {
	// The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolPtrInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolPtrInput `pulumi:"isShardKeyUnique"`
}

func (GlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return i.ToGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArgs) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceOutput)
}

// GlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GlobalClusterConfigManagedNamespaceArray and GlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GlobalClusterConfigManagedNamespaceArrayInput` via:
//
//          GlobalClusterConfigManagedNamespaceArray{ GlobalClusterConfigManagedNamespaceArgs{...} }
type GlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput
	ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GlobalClusterConfigManagedNamespaceArrayOutput
}

type GlobalClusterConfigManagedNamespaceArray []GlobalClusterConfigManagedNamespaceInput

func (GlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GlobalClusterConfigManagedNamespaceArray) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterConfigManagedNamespaceArrayOutput)
}

type GlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutput() GlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceOutput) ToGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceOutput {
	return o
}

// The name of the collection associated with the managed namespace.
func (o GlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// The name of the database containing the collection.
func (o GlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolPtrOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterConfigManagedNamespace) *bool { return v.IsShardKeyUnique }).(pulumi.BoolPtrOutput)
}

type GlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutput() GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) ToGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterConfigManagedNamespace {
		return vs[0].([]GlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GlobalClusterConfigManagedNamespaceOutput)
}

type LdapConfigurationUserToDnMapping struct {
	LdapQuery    *string `pulumi:"ldapQuery"`
	Match        *string `pulumi:"match"`
	Substitution *string `pulumi:"substitution"`
}

// LdapConfigurationUserToDnMappingInput is an input type that accepts LdapConfigurationUserToDnMappingArgs and LdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingInput` via:
//
//          LdapConfigurationUserToDnMappingArgs{...}
type LdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput
	ToLdapConfigurationUserToDnMappingOutputWithContext(context.Context) LdapConfigurationUserToDnMappingOutput
}

type LdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringPtrInput `pulumi:"ldapQuery"`
	Match        pulumi.StringPtrInput `pulumi:"match"`
	Substitution pulumi.StringPtrInput `pulumi:"substitution"`
}

func (LdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return i.ToLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArgs) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingOutput)
}

// LdapConfigurationUserToDnMappingArrayInput is an input type that accepts LdapConfigurationUserToDnMappingArray and LdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `LdapConfigurationUserToDnMappingArrayInput` via:
//
//          LdapConfigurationUserToDnMappingArray{ LdapConfigurationUserToDnMappingArgs{...} }
type LdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput
	ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) LdapConfigurationUserToDnMappingArrayOutput
}

type LdapConfigurationUserToDnMappingArray []LdapConfigurationUserToDnMappingInput

func (LdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return i.ToLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i LdapConfigurationUserToDnMappingArray) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapConfigurationUserToDnMappingArrayOutput)
}

type LdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutput() LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) ToLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.LdapQuery }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o LdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapConfigurationUserToDnMapping) *string { return v.Substitution }).(pulumi.StringPtrOutput)
}

type LdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (LdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutput() LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) ToLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) LdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o LdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) LdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapConfigurationUserToDnMapping {
		return vs[0].([]LdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(LdapConfigurationUserToDnMappingOutput)
}

type LdapVerifyLink struct {
	Href *string `pulumi:"href"`
	Rel  *string `pulumi:"rel"`
}

// LdapVerifyLinkInput is an input type that accepts LdapVerifyLinkArgs and LdapVerifyLinkOutput values.
// You can construct a concrete instance of `LdapVerifyLinkInput` via:
//
//          LdapVerifyLinkArgs{...}
type LdapVerifyLinkInput interface {
	pulumi.Input

	ToLdapVerifyLinkOutput() LdapVerifyLinkOutput
	ToLdapVerifyLinkOutputWithContext(context.Context) LdapVerifyLinkOutput
}

type LdapVerifyLinkArgs struct {
	Href pulumi.StringPtrInput `pulumi:"href"`
	Rel  pulumi.StringPtrInput `pulumi:"rel"`
}

func (LdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return i.ToLdapVerifyLinkOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArgs) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkOutput)
}

// LdapVerifyLinkArrayInput is an input type that accepts LdapVerifyLinkArray and LdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `LdapVerifyLinkArrayInput` via:
//
//          LdapVerifyLinkArray{ LdapVerifyLinkArgs{...} }
type LdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput
	ToLdapVerifyLinkArrayOutputWithContext(context.Context) LdapVerifyLinkArrayOutput
}

type LdapVerifyLinkArray []LdapVerifyLinkInput

func (LdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return i.ToLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i LdapVerifyLinkArray) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyLinkArrayOutput)
}

type LdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutput() LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) ToLdapVerifyLinkOutputWithContext(ctx context.Context) LdapVerifyLinkOutput {
	return o
}

func (o LdapVerifyLinkOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyLinkOutput) Rel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyLink) *string { return v.Rel }).(pulumi.StringPtrOutput)
}

type LdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyLink)(nil)).Elem()
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutput() LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) ToLdapVerifyLinkArrayOutputWithContext(ctx context.Context) LdapVerifyLinkArrayOutput {
	return o
}

func (o LdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) LdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyLink {
		return vs[0].([]LdapVerifyLink)[vs[1].(int)]
	}).(LdapVerifyLinkOutput)
}

type LdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         *string `pulumi:"status"`
	ValidationType *string `pulumi:"validationType"`
}

// LdapVerifyValidationInput is an input type that accepts LdapVerifyValidationArgs and LdapVerifyValidationOutput values.
// You can construct a concrete instance of `LdapVerifyValidationInput` via:
//
//          LdapVerifyValidationArgs{...}
type LdapVerifyValidationInput interface {
	pulumi.Input

	ToLdapVerifyValidationOutput() LdapVerifyValidationOutput
	ToLdapVerifyValidationOutputWithContext(context.Context) LdapVerifyValidationOutput
}

type LdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
	Status         pulumi.StringPtrInput `pulumi:"status"`
	ValidationType pulumi.StringPtrInput `pulumi:"validationType"`
}

func (LdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return i.ToLdapVerifyValidationOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArgs) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationOutput)
}

// LdapVerifyValidationArrayInput is an input type that accepts LdapVerifyValidationArray and LdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `LdapVerifyValidationArrayInput` via:
//
//          LdapVerifyValidationArray{ LdapVerifyValidationArgs{...} }
type LdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput
	ToLdapVerifyValidationArrayOutputWithContext(context.Context) LdapVerifyValidationArrayOutput
}

type LdapVerifyValidationArray []LdapVerifyValidationInput

func (LdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return i.ToLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i LdapVerifyValidationArray) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LdapVerifyValidationArrayOutput)
}

type LdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutput() LdapVerifyValidationOutput {
	return o
}

func (o LdapVerifyValidationOutput) ToLdapVerifyValidationOutputWithContext(ctx context.Context) LdapVerifyValidationOutput {
	return o
}

// The current status of the LDAP over TLS/SSL configuration. One of the following values: `PENDING`, `SUCCESS`, and `FAILED`.
func (o LdapVerifyValidationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o LdapVerifyValidationOutput) ValidationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LdapVerifyValidation) *string { return v.ValidationType }).(pulumi.StringPtrOutput)
}

type LdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (LdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LdapVerifyValidation)(nil)).Elem()
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutput() LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) ToLdapVerifyValidationArrayOutputWithContext(ctx context.Context) LdapVerifyValidationArrayOutput {
	return o
}

func (o LdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) LdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LdapVerifyValidation {
		return vs[0].([]LdapVerifyValidation)[vs[1].(int)]
	}).(LdapVerifyValidationOutput)
}

type OnlineArchiveCriteria struct {
	DateField       *string `pulumi:"dateField"`
	DateFormat      *string `pulumi:"dateFormat"`
	ExpireAfterDays *int    `pulumi:"expireAfterDays"`
	Query           *string `pulumi:"query"`
	Type            string  `pulumi:"type"`
}

// OnlineArchiveCriteriaInput is an input type that accepts OnlineArchiveCriteriaArgs and OnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaInput` via:
//
//          OnlineArchiveCriteriaArgs{...}
type OnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput
	ToOnlineArchiveCriteriaOutputWithContext(context.Context) OnlineArchiveCriteriaOutput
}

type OnlineArchiveCriteriaArgs struct {
	DateField       pulumi.StringPtrInput `pulumi:"dateField"`
	DateFormat      pulumi.StringPtrInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntPtrInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringPtrInput `pulumi:"query"`
	Type            pulumi.StringInput    `pulumi:"type"`
}

func (OnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return i.ToOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput)
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i OnlineArchiveCriteriaArgs) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaOutput).ToOnlineArchiveCriteriaPtrOutputWithContext(ctx)
}

// OnlineArchiveCriteriaPtrInput is an input type that accepts OnlineArchiveCriteriaArgs, OnlineArchiveCriteriaPtr and OnlineArchiveCriteriaPtrOutput values.
// You can construct a concrete instance of `OnlineArchiveCriteriaPtrInput` via:
//
//          OnlineArchiveCriteriaArgs{...}
//
//  or:
//
//          nil
type OnlineArchiveCriteriaPtrInput interface {
	pulumi.Input

	ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput
	ToOnlineArchiveCriteriaPtrOutputWithContext(context.Context) OnlineArchiveCriteriaPtrOutput
}

type onlineArchiveCriteriaPtrType OnlineArchiveCriteriaArgs

func OnlineArchiveCriteriaPtr(v *OnlineArchiveCriteriaArgs) OnlineArchiveCriteriaPtrInput {
	return (*onlineArchiveCriteriaPtrType)(v)
}

func (*onlineArchiveCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return i.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (i *onlineArchiveCriteriaPtrType) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchiveCriteriaPtrOutput)
}

type OnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutput() OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaOutputWithContext(ctx context.Context) OnlineArchiveCriteriaOutput {
	return o
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o.ToOnlineArchiveCriteriaPtrOutputWithContext(context.Background())
}

func (o OnlineArchiveCriteriaOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OnlineArchiveCriteria) *OnlineArchiveCriteria {
		return &v
	}).(OnlineArchiveCriteriaPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateField }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *int { return v.ExpireAfterDays }).(pulumi.IntPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) *string { return v.Query }).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type OnlineArchiveCriteriaPtrOutput struct{ *pulumi.OutputState }

func (OnlineArchiveCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnlineArchiveCriteria)(nil)).Elem()
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutput() OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) ToOnlineArchiveCriteriaPtrOutputWithContext(ctx context.Context) OnlineArchiveCriteriaPtrOutput {
	return o
}

func (o OnlineArchiveCriteriaPtrOutput) Elem() OnlineArchiveCriteriaOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) OnlineArchiveCriteria {
		if v != nil {
			return *v
		}
		var ret OnlineArchiveCriteria
		return ret
	}).(OnlineArchiveCriteriaOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) DateField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateField
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.DateFormat
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) ExpireAfterDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterDays
	}).(pulumi.IntPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

func (o OnlineArchiveCriteriaPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OnlineArchiveCriteria) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type OnlineArchivePartitionField struct {
	FieldName string  `pulumi:"fieldName"`
	FieldType *string `pulumi:"fieldType"`
	Order     int     `pulumi:"order"`
}

// OnlineArchivePartitionFieldInput is an input type that accepts OnlineArchivePartitionFieldArgs and OnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldInput` via:
//
//          OnlineArchivePartitionFieldArgs{...}
type OnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput
	ToOnlineArchivePartitionFieldOutputWithContext(context.Context) OnlineArchivePartitionFieldOutput
}

type OnlineArchivePartitionFieldArgs struct {
	FieldName pulumi.StringInput    `pulumi:"fieldName"`
	FieldType pulumi.StringPtrInput `pulumi:"fieldType"`
	Order     pulumi.IntInput       `pulumi:"order"`
}

func (OnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return i.ToOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArgs) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldOutput)
}

// OnlineArchivePartitionFieldArrayInput is an input type that accepts OnlineArchivePartitionFieldArray and OnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `OnlineArchivePartitionFieldArrayInput` via:
//
//          OnlineArchivePartitionFieldArray{ OnlineArchivePartitionFieldArgs{...} }
type OnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput
	ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) OnlineArchivePartitionFieldArrayOutput
}

type OnlineArchivePartitionFieldArray []OnlineArchivePartitionFieldInput

func (OnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return i.ToOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i OnlineArchivePartitionFieldArray) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnlineArchivePartitionFieldArrayOutput)
}

type OnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutput() OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) ToOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldOutput {
	return o
}

func (o OnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o OnlineArchivePartitionFieldOutput) FieldType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) *string { return v.FieldType }).(pulumi.StringPtrOutput)
}

func (o OnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v OnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type OnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (OnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OnlineArchivePartitionField)(nil)).Elem()
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutput() OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) ToOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) OnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o OnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) OnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OnlineArchivePartitionField {
		return vs[0].([]OnlineArchivePartitionField)[vs[1].(int)]
	}).(OnlineArchivePartitionFieldOutput)
}

type ProjectTeam struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	RoleNames []string `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId string `pulumi:"teamId"`
}

// ProjectTeamInput is an input type that accepts ProjectTeamArgs and ProjectTeamOutput values.
// You can construct a concrete instance of `ProjectTeamInput` via:
//
//          ProjectTeamArgs{...}
type ProjectTeamInput interface {
	pulumi.Input

	ToProjectTeamOutput() ProjectTeamOutput
	ToProjectTeamOutputWithContext(context.Context) ProjectTeamOutput
}

type ProjectTeamArgs struct {
	// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
	// The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	TeamId pulumi.StringInput `pulumi:"teamId"`
}

func (ProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArgs) ToProjectTeamOutput() ProjectTeamOutput {
	return i.ToProjectTeamOutputWithContext(context.Background())
}

func (i ProjectTeamArgs) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamOutput)
}

// ProjectTeamArrayInput is an input type that accepts ProjectTeamArray and ProjectTeamArrayOutput values.
// You can construct a concrete instance of `ProjectTeamArrayInput` via:
//
//          ProjectTeamArray{ ProjectTeamArgs{...} }
type ProjectTeamArrayInput interface {
	pulumi.Input

	ToProjectTeamArrayOutput() ProjectTeamArrayOutput
	ToProjectTeamArrayOutputWithContext(context.Context) ProjectTeamArrayOutput
}

type ProjectTeamArray []ProjectTeamInput

func (ProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (i ProjectTeamArray) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return i.ToProjectTeamArrayOutputWithContext(context.Background())
}

func (i ProjectTeamArray) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTeamArrayOutput)
}

type ProjectTeamOutput struct{ *pulumi.OutputState }

func (ProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamOutput) ToProjectTeamOutput() ProjectTeamOutput {
	return o
}

func (o ProjectTeamOutput) ToProjectTeamOutputWithContext(ctx context.Context) ProjectTeamOutput {
	return o
}

// Each string in the array represents a project role you want to assign to the team. Every user associated with the team inherits these roles. You must specify an array even if you are only associating a single role with the team.
// The following are valid roles:
// * `GROUP_OWNER`
// * `GROUP_READ_ONLY`
// * `GROUP_DATA_ACCESS_ADMIN`
// * `GROUP_DATA_ACCESS_READ_WRITE`
// * `GROUP_DATA_ACCESS_READ_ONLY`
// * `GROUP_CLUSTER_MANAGER`
func (o ProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

// The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
func (o ProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type ProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (ProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTeam)(nil)).Elem()
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutput() ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) ToProjectTeamArrayOutputWithContext(ctx context.Context) ProjectTeamArrayOutput {
	return o
}

func (o ProjectTeamArrayOutput) Index(i pulumi.IntInput) ProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTeam {
		return vs[0].([]ProjectTeam)[vs[1].(int)]
	}).(ProjectTeamOutput)
}

type X509AuthenticationDatabaseUserCertificate struct {
	CreatedAt *string `pulumi:"createdAt"`
	GroupId   *string `pulumi:"groupId"`
	Id        *int    `pulumi:"id"`
	NotAfter  *string `pulumi:"notAfter"`
	Subject   *string `pulumi:"subject"`
}

// X509AuthenticationDatabaseUserCertificateInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArgs and X509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateInput` via:
//
//          X509AuthenticationDatabaseUserCertificateArgs{...}
type X509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput
	ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateOutput
}

type X509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	GroupId   pulumi.StringPtrInput `pulumi:"groupId"`
	Id        pulumi.IntPtrInput    `pulumi:"id"`
	NotAfter  pulumi.StringPtrInput `pulumi:"notAfter"`
	Subject   pulumi.StringPtrInput `pulumi:"subject"`
}

func (X509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArgs) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateOutput)
}

// X509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts X509AuthenticationDatabaseUserCertificateArray and X509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `X509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//          X509AuthenticationDatabaseUserCertificateArray{ X509AuthenticationDatabaseUserCertificateArgs{...} }
type X509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput
	ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput
}

type X509AuthenticationDatabaseUserCertificateArray []X509AuthenticationDatabaseUserCertificateInput

func (X509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i X509AuthenticationDatabaseUserCertificateArray) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(X509AuthenticationDatabaseUserCertificateArrayOutput)
}

type X509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutput() X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) ToX509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.NotAfter }).(pulumi.StringPtrOutput)
}

func (o X509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v X509AuthenticationDatabaseUserCertificate) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type X509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (X509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]X509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutput() X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) ToX509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) X509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o X509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) X509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) X509AuthenticationDatabaseUserCertificate {
		return vs[0].([]X509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(X509AuthenticationDatabaseUserCertificateOutput)
}

type Get509AuthenticationDatabaseUserCertificate struct {
	CreatedAt string `pulumi:"createdAt"`
	GroupId   string `pulumi:"groupId"`
	Id        int    `pulumi:"id"`
	NotAfter  string `pulumi:"notAfter"`
	Subject   string `pulumi:"subject"`
}

// Get509AuthenticationDatabaseUserCertificateInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArgs and Get509AuthenticationDatabaseUserCertificateOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateInput` via:
//
//          Get509AuthenticationDatabaseUserCertificateArgs{...}
type Get509AuthenticationDatabaseUserCertificateInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput
	ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateOutput
}

type Get509AuthenticationDatabaseUserCertificateArgs struct {
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	Id        pulumi.IntInput    `pulumi:"id"`
	NotAfter  pulumi.StringInput `pulumi:"notAfter"`
	Subject   pulumi.StringInput `pulumi:"subject"`
}

func (Get509AuthenticationDatabaseUserCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArgs) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateOutput)
}

// Get509AuthenticationDatabaseUserCertificateArrayInput is an input type that accepts Get509AuthenticationDatabaseUserCertificateArray and Get509AuthenticationDatabaseUserCertificateArrayOutput values.
// You can construct a concrete instance of `Get509AuthenticationDatabaseUserCertificateArrayInput` via:
//
//          Get509AuthenticationDatabaseUserCertificateArray{ Get509AuthenticationDatabaseUserCertificateArgs{...} }
type Get509AuthenticationDatabaseUserCertificateArrayInput interface {
	pulumi.Input

	ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput
	ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput
}

type Get509AuthenticationDatabaseUserCertificateArray []Get509AuthenticationDatabaseUserCertificateInput

func (Get509AuthenticationDatabaseUserCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return i.ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(context.Background())
}

func (i Get509AuthenticationDatabaseUserCertificateArray) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Get509AuthenticationDatabaseUserCertificateArrayOutput)
}

type Get509AuthenticationDatabaseUserCertificateOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutput() Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) ToGet509AuthenticationDatabaseUserCertificateOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) int { return v.Id }).(pulumi.IntOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) NotAfter() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.NotAfter }).(pulumi.StringOutput)
}

func (o Get509AuthenticationDatabaseUserCertificateOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v Get509AuthenticationDatabaseUserCertificate) string { return v.Subject }).(pulumi.StringOutput)
}

type Get509AuthenticationDatabaseUserCertificateArrayOutput struct{ *pulumi.OutputState }

func (Get509AuthenticationDatabaseUserCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Get509AuthenticationDatabaseUserCertificate)(nil)).Elem()
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutput() Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) ToGet509AuthenticationDatabaseUserCertificateArrayOutputWithContext(ctx context.Context) Get509AuthenticationDatabaseUserCertificateArrayOutput {
	return o
}

func (o Get509AuthenticationDatabaseUserCertificateArrayOutput) Index(i pulumi.IntInput) Get509AuthenticationDatabaseUserCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Get509AuthenticationDatabaseUserCertificate {
		return vs[0].([]Get509AuthenticationDatabaseUserCertificate)[vs[1].(int)]
	}).(Get509AuthenticationDatabaseUserCertificateOutput)
}

type GetAlertConfigurationMatcher struct {
	// Name of the field in the target object to match on.
	FieldName string `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator string `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value string `pulumi:"value"`
}

// GetAlertConfigurationMatcherInput is an input type that accepts GetAlertConfigurationMatcherArgs and GetAlertConfigurationMatcherOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherInput` via:
//
//          GetAlertConfigurationMatcherArgs{...}
type GetAlertConfigurationMatcherInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput
	ToGetAlertConfigurationMatcherOutputWithContext(context.Context) GetAlertConfigurationMatcherOutput
}

type GetAlertConfigurationMatcherArgs struct {
	// Name of the field in the target object to match on.
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
	// - `PRIMARY`
	// - `SECONDARY`
	// - `STANDALONE`
	// - `CONFIG`
	// - `MONGOS`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertConfigurationMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return i.ToGetAlertConfigurationMatcherOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArgs) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherOutput)
}

// GetAlertConfigurationMatcherArrayInput is an input type that accepts GetAlertConfigurationMatcherArray and GetAlertConfigurationMatcherArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMatcherArrayInput` via:
//
//          GetAlertConfigurationMatcherArray{ GetAlertConfigurationMatcherArgs{...} }
type GetAlertConfigurationMatcherArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput
	ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Context) GetAlertConfigurationMatcherArrayOutput
}

type GetAlertConfigurationMatcherArray []GetAlertConfigurationMatcherInput

func (GetAlertConfigurationMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return i.ToGetAlertConfigurationMatcherArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMatcherArray) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMatcherArrayOutput)
}

type GetAlertConfigurationMatcherOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutput() GetAlertConfigurationMatcherOutput {
	return o
}

func (o GetAlertConfigurationMatcherOutput) ToGetAlertConfigurationMatcherOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherOutput {
	return o
}

// Name of the field in the target object to match on.
func (o GetAlertConfigurationMatcherOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.FieldName }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o GetAlertConfigurationMatcherOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Operator }).(pulumi.StringOutput)
}

// Value to test with the specified operator. If `fieldName` is set to TYPE_NAME, you can match on the following values:
// - `PRIMARY`
// - `SECONDARY`
// - `STANDALONE`
// - `CONFIG`
// - `MONGOS`
func (o GetAlertConfigurationMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertConfigurationMatcherArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMatcher)(nil)).Elem()
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutput() GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) ToGetAlertConfigurationMatcherArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMatcherArrayOutput {
	return o
}

func (o GetAlertConfigurationMatcherArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMatcher {
		return vs[0].([]GetAlertConfigurationMatcher)[vs[1].(int)]
	}).(GetAlertConfigurationMatcherOutput)
}

type GetAlertConfigurationMetricThresholdConfig struct {
	// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
	MetricName string `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode string `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units string `pulumi:"units"`
}

// GetAlertConfigurationMetricThresholdConfigInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArgs and GetAlertConfigurationMetricThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigInput` via:
//
//          GetAlertConfigurationMetricThresholdConfigArgs{...}
type GetAlertConfigurationMetricThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput
	ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigOutput
}

type GetAlertConfigurationMetricThresholdConfigArgs struct {
	// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// This must be set to AVERAGE. Atlas computes the current metric value as an average.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationMetricThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArgs) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigOutput)
}

// GetAlertConfigurationMetricThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationMetricThresholdConfigArray and GetAlertConfigurationMetricThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationMetricThresholdConfigArrayInput` via:
//
//          GetAlertConfigurationMetricThresholdConfigArray{ GetAlertConfigurationMetricThresholdConfigArgs{...} }
type GetAlertConfigurationMetricThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput
	ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput
}

type GetAlertConfigurationMetricThresholdConfigArray []GetAlertConfigurationMetricThresholdConfigInput

func (GetAlertConfigurationMetricThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationMetricThresholdConfigArray) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationMetricThresholdConfigArrayOutput)
}

type GetAlertConfigurationMetricThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutput() GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigOutput) ToGetAlertConfigurationMetricThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigOutput {
	return o
}

// Name of the metric to check. The full list of current options is available [here](https://docs.atlas.mongodb.com/reference/alert-host-metrics/#measurement-types)
func (o GetAlertConfigurationMetricThresholdConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

// This must be set to AVERAGE. Atlas computes the current metric value as an average.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Mode }).(pulumi.StringOutput)
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o GetAlertConfigurationMetricThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationMetricThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o GetAlertConfigurationMetricThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationMetricThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationMetricThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationMetricThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationMetricThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutput() GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) ToGetAlertConfigurationMetricThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationMetricThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationMetricThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationMetricThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationMetricThresholdConfig {
		return vs[0].([]GetAlertConfigurationMetricThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationMetricThresholdConfigOutput)
}

type GetAlertConfigurationNotification struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken string `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName string `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey string `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion string `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin int `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress string `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled bool `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName string `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken string `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin int `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber string `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey string `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion string `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName string   `pulumi:"orgName"`
	Roles   []string `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey string `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled bool `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId string `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName string `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username string `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey string `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey string `pulumi:"victorOpsRoutingKey"`
}

// GetAlertConfigurationNotificationInput is an input type that accepts GetAlertConfigurationNotificationArgs and GetAlertConfigurationNotificationOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationInput` via:
//
//          GetAlertConfigurationNotificationArgs{...}
type GetAlertConfigurationNotificationInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput
	ToGetAlertConfigurationNotificationOutputWithContext(context.Context) GetAlertConfigurationNotificationOutput
}

type GetAlertConfigurationNotificationArgs struct {
	// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// Slack channel name. Required for the SLACK notifications type.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
	DatadogApiKey pulumi.StringInput `pulumi:"datadogApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
	DatadogRegion pulumi.StringInput `pulumi:"datadogRegion"`
	// Number of minutes to wait after an alert condition is detected before sending out the first notification.
	DelayMin pulumi.IntInput `pulumi:"delayMin"`
	// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
	EmailAddress pulumi.StringInput `pulumi:"emailAddress"`
	// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	EmailEnabled pulumi.BoolInput `pulumi:"emailEnabled"`
	// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	FlowdockApiToken pulumi.StringInput `pulumi:"flowdockApiToken"`
	// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
	IntervalMin pulumi.IntInput `pulumi:"intervalMin"`
	// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
	MobileNumber pulumi.StringInput `pulumi:"mobileNumber"`
	// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
	OpsGenieApiKey pulumi.StringInput `pulumi:"opsGenieApiKey"`
	// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
	OpsGenieRegion pulumi.StringInput `pulumi:"opsGenieRegion"`
	// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
	OrgName pulumi.StringInput      `pulumi:"orgName"`
	Roles   pulumi.StringArrayInput `pulumi:"roles"`
	// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
	SmsEnabled pulumi.BoolInput `pulumi:"smsEnabled"`
	// Unique identifier of a team.
	TeamId pulumi.StringInput `pulumi:"teamId"`
	// Type of alert notification.
	// Accepted values are:
	// - `DATADOG`
	// - `EMAIL`
	// - `FLOWDOCK`
	// - `GROUP` (Project)
	// - `OPS_GENIE`
	// - `ORG`
	// - `PAGER_DUTY`
	// - `SLACK`
	// - `SMS`
	// - `TEAM`
	// - `USER`
	// - `VICTOR_OPS`
	// - `WEBHOOK`
	TypeName pulumi.StringInput `pulumi:"typeName"`
	// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
	Username pulumi.StringInput `pulumi:"username"`
	// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsApiKey pulumi.StringInput `pulumi:"victorOpsApiKey"`
	// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
	VictorOpsRoutingKey pulumi.StringInput `pulumi:"victorOpsRoutingKey"`
}

func (GetAlertConfigurationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return i.ToGetAlertConfigurationNotificationOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArgs) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationOutput)
}

// GetAlertConfigurationNotificationArrayInput is an input type that accepts GetAlertConfigurationNotificationArray and GetAlertConfigurationNotificationArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationNotificationArrayInput` via:
//
//          GetAlertConfigurationNotificationArray{ GetAlertConfigurationNotificationArgs{...} }
type GetAlertConfigurationNotificationArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput
	ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Context) GetAlertConfigurationNotificationArrayOutput
}

type GetAlertConfigurationNotificationArray []GetAlertConfigurationNotificationInput

func (GetAlertConfigurationNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return i.ToGetAlertConfigurationNotificationArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationNotificationArray) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationNotificationArrayOutput)
}

type GetAlertConfigurationNotificationOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutput() GetAlertConfigurationNotificationOutput {
	return o
}

func (o GetAlertConfigurationNotificationOutput) ToGetAlertConfigurationNotificationOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationOutput {
	return o
}

// Slack API token. Required for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Slack channel name. Required for the SLACK notifications type.
func (o GetAlertConfigurationNotificationOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Datadog API Key. Found in the Datadog dashboard. Required for the DATADOG notifications type.
func (o GetAlertConfigurationNotificationOutput) DatadogApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US`, `EU`. The default Datadog region is US.
func (o GetAlertConfigurationNotificationOutput) DatadogRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.DatadogRegion }).(pulumi.StringOutput)
}

// Number of minutes to wait after an alert condition is detected before sending out the first notification.
func (o GetAlertConfigurationNotificationOutput) DelayMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.DelayMin }).(pulumi.IntOutput)
}

// Email address to which alert notifications are sent. Required for the EMAIL notifications type.
func (o GetAlertConfigurationNotificationOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.EmailAddress }).(pulumi.StringOutput)
}

// Flag indicating if email notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o GetAlertConfigurationNotificationOutput) EmailEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.EmailEnabled }).(pulumi.BoolOutput)
}

// Flowdock flow name in lower-case letters. Required for the `FLOWDOCK` notifications type
func (o GetAlertConfigurationNotificationOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowName }).(pulumi.StringOutput)
}

// The Flowdock personal API token. Required for the `FLOWDOCK` notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) FlowdockApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.FlowdockApiToken }).(pulumi.StringOutput)
}

// Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved. The minimum value is 5.
func (o GetAlertConfigurationNotificationOutput) IntervalMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) int { return v.IntervalMin }).(pulumi.IntOutput)
}

// Mobile number to which alert notifications are sent. Required for the SMS notifications type.
func (o GetAlertConfigurationNotificationOutput) MobileNumber() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.MobileNumber }).(pulumi.StringOutput)
}

// Opsgenie API Key. Required for the `OPS_GENIE` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.
func (o GetAlertConfigurationNotificationOutput) OpsGenieApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieApiKey }).(pulumi.StringOutput)
}

// Region that indicates which API URL to use. Accepted regions are: `US` ,`EU`. The default Opsgenie region is US.
func (o GetAlertConfigurationNotificationOutput) OpsGenieRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OpsGenieRegion }).(pulumi.StringOutput)
}

// Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Required for the FLOWDOCK notifications type.
func (o GetAlertConfigurationNotificationOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.OrgName }).(pulumi.StringOutput)
}

func (o GetAlertConfigurationNotificationOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// PagerDuty service key. Required for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.ServiceKey }).(pulumi.StringOutput)
}

// Flag indicating if text message notifications should be sent. Configurable for `ORG`, `GROUP`, and `USER` notifications types.
func (o GetAlertConfigurationNotificationOutput) SmsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) bool { return v.SmsEnabled }).(pulumi.BoolOutput)
}

// Unique identifier of a team.
func (o GetAlertConfigurationNotificationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TeamId }).(pulumi.StringOutput)
}

// Type of alert notification.
// Accepted values are:
// - `DATADOG`
// - `EMAIL`
// - `FLOWDOCK`
// - `GROUP` (Project)
// - `OPS_GENIE`
// - `ORG`
// - `PAGER_DUTY`
// - `SLACK`
// - `SMS`
// - `TEAM`
// - `USER`
// - `VICTOR_OPS`
// - `WEBHOOK`
func (o GetAlertConfigurationNotificationOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.TypeName }).(pulumi.StringOutput)
}

// Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Required for the `USER` notifications type.
func (o GetAlertConfigurationNotificationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.Username }).(pulumi.StringOutput)
}

// VictorOps API key. Required for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsApiKey }).(pulumi.StringOutput)
}

// VictorOps routing key. Optional for the `VICTOR_OPS` notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.
func (o GetAlertConfigurationNotificationOutput) VictorOpsRoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationNotification) string { return v.VictorOpsRoutingKey }).(pulumi.StringOutput)
}

type GetAlertConfigurationNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationNotification)(nil)).Elem()
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutput() GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) ToGetAlertConfigurationNotificationArrayOutputWithContext(ctx context.Context) GetAlertConfigurationNotificationArrayOutput {
	return o
}

func (o GetAlertConfigurationNotificationArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationNotification {
		return vs[0].([]GetAlertConfigurationNotification)[vs[1].(int)]
	}).(GetAlertConfigurationNotificationOutput)
}

type GetAlertConfigurationThresholdConfig struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator string `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold float64 `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units string `pulumi:"units"`
}

// GetAlertConfigurationThresholdConfigInput is an input type that accepts GetAlertConfigurationThresholdConfigArgs and GetAlertConfigurationThresholdConfigOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigInput` via:
//
//          GetAlertConfigurationThresholdConfigArgs{...}
type GetAlertConfigurationThresholdConfigInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput
	ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigOutput
}

type GetAlertConfigurationThresholdConfigArgs struct {
	// Operator to apply when checking the current metric value against the threshold value.
	// Accepted values are:
	// - `GREATER_THAN`
	// - `LESS_THAN`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold value outside of which an alert will be triggered.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The units for the threshold value. Depends on the type of metric.
	// Accepted values are:
	// - `RAW`
	// - `BITS`
	// - `BYTES`
	// - `KILOBITS`
	// - `KILOBYTES`
	// - `MEGABITS`
	// - `MEGABYTES`
	// - `GIGABITS`
	// - `GIGABYTES`
	// - `TERABYTES`
	// - `PETABYTES`
	// - `MILLISECONDS`
	// - `SECONDS`
	// - `MINUTES`
	// - `HOURS`
	// - `DAYS`
	Units pulumi.StringInput `pulumi:"units"`
}

func (GetAlertConfigurationThresholdConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return i.ToGetAlertConfigurationThresholdConfigOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArgs) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigOutput)
}

// GetAlertConfigurationThresholdConfigArrayInput is an input type that accepts GetAlertConfigurationThresholdConfigArray and GetAlertConfigurationThresholdConfigArrayOutput values.
// You can construct a concrete instance of `GetAlertConfigurationThresholdConfigArrayInput` via:
//
//          GetAlertConfigurationThresholdConfigArray{ GetAlertConfigurationThresholdConfigArgs{...} }
type GetAlertConfigurationThresholdConfigArrayInput interface {
	pulumi.Input

	ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput
	ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Context) GetAlertConfigurationThresholdConfigArrayOutput
}

type GetAlertConfigurationThresholdConfigArray []GetAlertConfigurationThresholdConfigInput

func (GetAlertConfigurationThresholdConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return i.ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(context.Background())
}

func (i GetAlertConfigurationThresholdConfigArray) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertConfigurationThresholdConfigArrayOutput)
}

type GetAlertConfigurationThresholdConfigOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutput() GetAlertConfigurationThresholdConfigOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigOutput) ToGetAlertConfigurationThresholdConfigOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigOutput {
	return o
}

// Operator to apply when checking the current metric value against the threshold value.
// Accepted values are:
// - `GREATER_THAN`
// - `LESS_THAN`
func (o GetAlertConfigurationThresholdConfigOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold value outside of which an alert will be triggered.
func (o GetAlertConfigurationThresholdConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The units for the threshold value. Depends on the type of metric.
// Accepted values are:
// - `RAW`
// - `BITS`
// - `BYTES`
// - `KILOBITS`
// - `KILOBYTES`
// - `MEGABITS`
// - `MEGABYTES`
// - `GIGABITS`
// - `GIGABYTES`
// - `TERABYTES`
// - `PETABYTES`
// - `MILLISECONDS`
// - `SECONDS`
// - `MINUTES`
// - `HOURS`
// - `DAYS`
func (o GetAlertConfigurationThresholdConfigOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertConfigurationThresholdConfig) string { return v.Units }).(pulumi.StringOutput)
}

type GetAlertConfigurationThresholdConfigArrayOutput struct{ *pulumi.OutputState }

func (GetAlertConfigurationThresholdConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertConfigurationThresholdConfig)(nil)).Elem()
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutput() GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) ToGetAlertConfigurationThresholdConfigArrayOutputWithContext(ctx context.Context) GetAlertConfigurationThresholdConfigArrayOutput {
	return o
}

func (o GetAlertConfigurationThresholdConfigArrayOutput) Index(i pulumi.IntInput) GetAlertConfigurationThresholdConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertConfigurationThresholdConfig {
		return vs[0].([]GetAlertConfigurationThresholdConfig)[vs[1].(int)]
	}).(GetAlertConfigurationThresholdConfigOutput)
}

type GetCloudBackupSchedulePolicyItemDaily struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemDailyInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArgs and GetCloudBackupSchedulePolicyItemDailyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyInput` via:
//
//          GetCloudBackupSchedulePolicyItemDailyArgs{...}
type GetCloudBackupSchedulePolicyItemDailyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput
	ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyOutput
}

type GetCloudBackupSchedulePolicyItemDailyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemDailyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArgs) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

// GetCloudBackupSchedulePolicyItemDailyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemDailyArray and GetCloudBackupSchedulePolicyItemDailyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemDailyArrayInput` via:
//
//          GetCloudBackupSchedulePolicyItemDailyArray{ GetCloudBackupSchedulePolicyItemDailyArgs{...} }
type GetCloudBackupSchedulePolicyItemDailyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput
	ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput
}

type GetCloudBackupSchedulePolicyItemDailyArray []GetCloudBackupSchedulePolicyItemDailyInput

func (GetCloudBackupSchedulePolicyItemDailyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemDailyArray) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemDailyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemDailyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutput() GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyOutput) ToGetCloudBackupSchedulePolicyItemDailyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o GetCloudBackupSchedulePolicyItemDailyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemDaily) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemDailyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemDailyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemDaily)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutput() GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) ToGetCloudBackupSchedulePolicyItemDailyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemDailyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemDailyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemDailyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemDaily {
		return vs[0].([]GetCloudBackupSchedulePolicyItemDaily)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemDailyOutput)
}

type GetCloudBackupSchedulePolicyItemHourly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemHourlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArgs and GetCloudBackupSchedulePolicyItemHourlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyInput` via:
//
//          GetCloudBackupSchedulePolicyItemHourlyArgs{...}
type GetCloudBackupSchedulePolicyItemHourlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput
	ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemHourlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArgs) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

// GetCloudBackupSchedulePolicyItemHourlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemHourlyArray and GetCloudBackupSchedulePolicyItemHourlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemHourlyArrayInput` via:
//
//          GetCloudBackupSchedulePolicyItemHourlyArray{ GetCloudBackupSchedulePolicyItemHourlyArgs{...} }
type GetCloudBackupSchedulePolicyItemHourlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemHourlyArray []GetCloudBackupSchedulePolicyItemHourlyInput

func (GetCloudBackupSchedulePolicyItemHourlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemHourlyArray) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemHourlyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemHourlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutput() GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyOutput) ToGetCloudBackupSchedulePolicyItemHourlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o GetCloudBackupSchedulePolicyItemHourlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemHourly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemHourlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemHourly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutput() GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) ToGetCloudBackupSchedulePolicyItemHourlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemHourlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemHourlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemHourlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemHourly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemHourly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemHourlyOutput)
}

type GetCloudBackupSchedulePolicyItemMonthly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemMonthlyInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArgs and GetCloudBackupSchedulePolicyItemMonthlyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyInput` via:
//
//          GetCloudBackupSchedulePolicyItemMonthlyArgs{...}
type GetCloudBackupSchedulePolicyItemMonthlyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArgs) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

// GetCloudBackupSchedulePolicyItemMonthlyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemMonthlyArray and GetCloudBackupSchedulePolicyItemMonthlyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemMonthlyArrayInput` via:
//
//          GetCloudBackupSchedulePolicyItemMonthlyArray{ GetCloudBackupSchedulePolicyItemMonthlyArgs{...} }
type GetCloudBackupSchedulePolicyItemMonthlyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
	ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput
}

type GetCloudBackupSchedulePolicyItemMonthlyArray []GetCloudBackupSchedulePolicyItemMonthlyInput

func (GetCloudBackupSchedulePolicyItemMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemMonthlyArray) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemMonthlyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutput() GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) ToGetCloudBackupSchedulePolicyItemMonthlyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o GetCloudBackupSchedulePolicyItemMonthlyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemMonthly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemMonthlyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemMonthly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutput() GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) ToGetCloudBackupSchedulePolicyItemMonthlyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemMonthlyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemMonthlyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemMonthly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemMonthly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemMonthlyOutput)
}

type GetCloudBackupSchedulePolicyItemWeekly struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType string `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id string `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit string `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue int `pulumi:"retentionValue"`
}

// GetCloudBackupSchedulePolicyItemWeeklyInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArgs and GetCloudBackupSchedulePolicyItemWeeklyOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyInput` via:
//
//          GetCloudBackupSchedulePolicyItemWeeklyArgs{...}
type GetCloudBackupSchedulePolicyItemWeeklyInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArgs struct {
	// Desired frequency of the new backup policy item specified by `frequencyType`.
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// Frequency associated with the backup policy item.
	FrequencyType pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifier of the backup policy item.
	Id pulumi.StringInput `pulumi:"id"`
	// Scope of the backup policy item: days, weeks, or months.
	RetentionUnit pulumi.StringInput `pulumi:"retentionUnit"`
	// Value to associate with `retentionUnit`.
	RetentionValue pulumi.IntInput `pulumi:"retentionValue"`
}

func (GetCloudBackupSchedulePolicyItemWeeklyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArgs) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

// GetCloudBackupSchedulePolicyItemWeeklyArrayInput is an input type that accepts GetCloudBackupSchedulePolicyItemWeeklyArray and GetCloudBackupSchedulePolicyItemWeeklyArrayOutput values.
// You can construct a concrete instance of `GetCloudBackupSchedulePolicyItemWeeklyArrayInput` via:
//
//          GetCloudBackupSchedulePolicyItemWeeklyArray{ GetCloudBackupSchedulePolicyItemWeeklyArgs{...} }
type GetCloudBackupSchedulePolicyItemWeeklyArrayInput interface {
	pulumi.Input

	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
	ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput
}

type GetCloudBackupSchedulePolicyItemWeeklyArray []GetCloudBackupSchedulePolicyItemWeeklyInput

func (GetCloudBackupSchedulePolicyItemWeeklyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return i.ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(context.Background())
}

func (i GetCloudBackupSchedulePolicyItemWeeklyArray) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput)
}

type GetCloudBackupSchedulePolicyItemWeeklyOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutput() GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) ToGetCloudBackupSchedulePolicyItemWeeklyOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return o
}

// Desired frequency of the new backup policy item specified by `frequencyType`.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// Frequency associated with the backup policy item.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifier of the backup policy item.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.Id }).(pulumi.StringOutput)
}

// Scope of the backup policy item: days, weeks, or months.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

// Value to associate with `retentionUnit`.
func (o GetCloudBackupSchedulePolicyItemWeeklyOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudBackupSchedulePolicyItemWeekly) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudBackupSchedulePolicyItemWeeklyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudBackupSchedulePolicyItemWeekly)(nil)).Elem()
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutput() GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) ToGetCloudBackupSchedulePolicyItemWeeklyArrayOutputWithContext(ctx context.Context) GetCloudBackupSchedulePolicyItemWeeklyArrayOutput {
	return o
}

func (o GetCloudBackupSchedulePolicyItemWeeklyArrayOutput) Index(i pulumi.IntInput) GetCloudBackupSchedulePolicyItemWeeklyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudBackupSchedulePolicyItemWeekly {
		return vs[0].([]GetCloudBackupSchedulePolicyItemWeekly)[vs[1].(int)]
	}).(GetCloudBackupSchedulePolicyItemWeeklyOutput)
}

type GetCloudProviderAccessAwsIamRole struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate string `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate string `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages []GetCloudProviderAccessAwsIamRoleFeatureUsage `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName string `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId string `pulumi:"roleId"`
}

// GetCloudProviderAccessAwsIamRoleInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArgs and GetCloudProviderAccessAwsIamRoleOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleInput` via:
//
//          GetCloudProviderAccessAwsIamRoleArgs{...}
type GetCloudProviderAccessAwsIamRoleInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput
	ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleOutput
}

type GetCloudProviderAccessAwsIamRoleArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
	// Date on which this role was authorized.
	AuthorizedDate pulumi.StringInput `pulumi:"authorizedDate"`
	// Date on which this role was created.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Atlas features this AWS IAM role is linked to.
	FeatureUsages GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput `pulumi:"featureUsages"`
	// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	// Name of the cloud provider. Currently limited to AWS.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Unique ID of this role.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetCloudProviderAccessAwsIamRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArgs) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleOutput)
}

// GetCloudProviderAccessAwsIamRoleArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleArray and GetCloudProviderAccessAwsIamRoleArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleArrayInput` via:
//
//          GetCloudProviderAccessAwsIamRoleArray{ GetCloudProviderAccessAwsIamRoleArgs{...} }
type GetCloudProviderAccessAwsIamRoleArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput
	ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput
}

type GetCloudProviderAccessAwsIamRoleArray []GetCloudProviderAccessAwsIamRoleInput

func (GetCloudProviderAccessAwsIamRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleArray) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleArrayOutput)
}

type GetCloudProviderAccessAwsIamRoleOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutput() GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleOutput) ToGetCloudProviderAccessAwsIamRoleOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleOutput {
	return o
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

// Date on which this role was authorized.
func (o GetCloudProviderAccessAwsIamRoleOutput) AuthorizedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.AuthorizedDate }).(pulumi.StringOutput)
}

// Date on which this role was created.
func (o GetCloudProviderAccessAwsIamRoleOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Atlas features this AWS IAM role is linked to.
func (o GetCloudProviderAccessAwsIamRoleOutput) FeatureUsages() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) []GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return v.FeatureUsages
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

// ARN of the IAM Role that Atlas assumes when accessing resources in your AWS account.
func (o GetCloudProviderAccessAwsIamRoleOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

// Name of the cloud provider. Currently limited to AWS.
func (o GetCloudProviderAccessAwsIamRoleOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Unique ID of this role.
func (o GetCloudProviderAccessAwsIamRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRole) string { return v.RoleId }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRole)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutput() GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) ToGetCloudProviderAccessAwsIamRoleArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRole {
		return vs[0].([]GetCloudProviderAccessAwsIamRole)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsage struct {
	FeatureId   map[string]interface{} `pulumi:"featureId"`
	FeatureType string                 `pulumi:"featureType"`
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArgs and GetCloudProviderAccessAwsIamRoleFeatureUsageOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageInput` via:
//
//          GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...}
type GetCloudProviderAccessAwsIamRoleFeatureUsageInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArgs struct {
	FeatureId   pulumi.MapInput    `pulumi:"featureId"`
	FeatureType pulumi.StringInput `pulumi:"featureType"`
}

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArgs) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

// GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput is an input type that accepts GetCloudProviderAccessAwsIamRoleFeatureUsageArray and GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput` via:
//
//          GetCloudProviderAccessAwsIamRoleFeatureUsageArray{ GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{...} }
type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
	ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArray []GetCloudProviderAccessAwsIamRoleFeatureUsageInput

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return i.ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessAwsIamRoleFeatureUsageArray) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureId() pulumi.MapOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) map[string]interface{} { return v.FeatureId }).(pulumi.MapOutput)
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageOutput) FeatureType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessAwsIamRoleFeatureUsage) string { return v.FeatureType }).(pulumi.StringOutput)
}

type GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessAwsIamRoleFeatureUsage)(nil)).Elem()
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput() GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) ToGetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput {
	return o
}

func (o GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessAwsIamRoleFeatureUsageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessAwsIamRoleFeatureUsage {
		return vs[0].([]GetCloudProviderAccessAwsIamRoleFeatureUsage)[vs[1].(int)]
	}).(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput)
}

type GetCloudProviderAccessSetupAwsConfig struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId string `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn string `pulumi:"atlasAwsAccountArn"`
}

// GetCloudProviderAccessSetupAwsConfigInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArgs and GetCloudProviderAccessSetupAwsConfigOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigInput` via:
//
//          GetCloudProviderAccessSetupAwsConfigArgs{...}
type GetCloudProviderAccessSetupAwsConfigInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput
	ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigOutput
}

type GetCloudProviderAccessSetupAwsConfigArgs struct {
	// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
	AtlasAssumedRoleExternalId pulumi.StringInput `pulumi:"atlasAssumedRoleExternalId"`
	// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
	AtlasAwsAccountArn pulumi.StringInput `pulumi:"atlasAwsAccountArn"`
}

func (GetCloudProviderAccessSetupAwsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArgs) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigOutput)
}

// GetCloudProviderAccessSetupAwsConfigArrayInput is an input type that accepts GetCloudProviderAccessSetupAwsConfigArray and GetCloudProviderAccessSetupAwsConfigArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderAccessSetupAwsConfigArrayInput` via:
//
//          GetCloudProviderAccessSetupAwsConfigArray{ GetCloudProviderAccessSetupAwsConfigArgs{...} }
type GetCloudProviderAccessSetupAwsConfigArrayInput interface {
	pulumi.Input

	ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput
	ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput
}

type GetCloudProviderAccessSetupAwsConfigArray []GetCloudProviderAccessSetupAwsConfigInput

func (GetCloudProviderAccessSetupAwsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return i.ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderAccessSetupAwsConfigArray) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderAccessSetupAwsConfigArrayOutput)
}

type GetCloudProviderAccessSetupAwsConfigOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutput() GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigOutput) ToGetCloudProviderAccessSetupAwsConfigOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigOutput {
	return o
}

// Unique external ID Atlas uses when assuming the IAM role in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAssumedRoleExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAssumedRoleExternalId }).(pulumi.StringOutput)
}

// ARN associated with the Atlas AWS account used to assume IAM roles in your AWS account.
func (o GetCloudProviderAccessSetupAwsConfigOutput) AtlasAwsAccountArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderAccessSetupAwsConfig) string { return v.AtlasAwsAccountArn }).(pulumi.StringOutput)
}

type GetCloudProviderAccessSetupAwsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderAccessSetupAwsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderAccessSetupAwsConfig)(nil)).Elem()
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutput() GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) ToGetCloudProviderAccessSetupAwsConfigArrayOutputWithContext(ctx context.Context) GetCloudProviderAccessSetupAwsConfigArrayOutput {
	return o
}

func (o GetCloudProviderAccessSetupAwsConfigArrayOutput) Index(i pulumi.IntInput) GetCloudProviderAccessSetupAwsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderAccessSetupAwsConfig {
		return vs[0].([]GetCloudProviderAccessSetupAwsConfig)[vs[1].(int)]
	}).(GetCloudProviderAccessSetupAwsConfigOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicy struct {
	Id          string                                                 `pulumi:"id"`
	PolicyItems []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArgs and GetCloudProviderSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArgs struct {
	Id          pulumi.StringInput                                             `pulumi:"id"`
	PolicyItems GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyArray and GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyArray{ GetCloudProviderSnapshotBackupPolicyPolicyArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyArray []GetCloudProviderSnapshotBackupPolicyPolicyInput

func (GetCloudProviderSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyArray) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutput() GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyOutput) PolicyItems() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicy) []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicy {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	Id                string `pulumi:"id"`
	RetentionUnit     string `pulumi:"retentionUnit"`
	RetentionValue    int    `pulumi:"retentionValue"`
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionUnit     pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue    pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray and GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{ GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray []GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetCloudProviderSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCloudProviderSnapshotRestoreJobsResult struct {
	// Indicates whether the restore job was canceled.
	Cancelled bool `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt string `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType string `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls []string `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired bool `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt string `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt string `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    string `pulumi:"id"`
	OplogInc              int    `pulumi:"oplogInc"`
	OplogTs               int    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds int    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId string `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName string `pulumi:"targetClusterName"`
	TargetProjectId   string `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp string `pulumi:"timestamp"`
}

// GetCloudProviderSnapshotRestoreJobsResultInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultArgs and GetCloudProviderSnapshotRestoreJobsResultOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultInput` via:
//
//          GetCloudProviderSnapshotRestoreJobsResultArgs{...}
type GetCloudProviderSnapshotRestoreJobsResultInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput
	ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput
}

type GetCloudProviderSnapshotRestoreJobsResultArgs struct {
	// Indicates whether the restore job was canceled.
	Cancelled pulumi.BoolInput `pulumi:"cancelled"`
	// UTC ISO 8601 formatted point in time when Atlas created the restore job.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Type of restore job to create. Possible values are: automated and download.
	DeliveryType pulumi.StringInput `pulumi:"deliveryType"`
	// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
	DeliveryUrls pulumi.StringArrayInput `pulumi:"deliveryUrls"`
	// Indicates whether the restore job expired.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// UTC ISO 8601 formatted point in time when the restore job expires.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// UTC ISO 8601 formatted point in time when the restore job completed.
	FinishedAt pulumi.StringInput `pulumi:"finishedAt"`
	// The unique identifier of the restore job.
	Id                    pulumi.StringInput `pulumi:"id"`
	OplogInc              pulumi.IntInput    `pulumi:"oplogInc"`
	OplogTs               pulumi.IntInput    `pulumi:"oplogTs"`
	PointInTimeUtcSeconds pulumi.IntInput    `pulumi:"pointInTimeUtcSeconds"`
	// Unique identifier of the source snapshot ID of the restore job.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
	TargetClusterName pulumi.StringInput `pulumi:"targetClusterName"`
	TargetProjectId   pulumi.StringInput `pulumi:"targetProjectId"`
	// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
}

func (GetCloudProviderSnapshotRestoreJobsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultArgs) ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultArgs) ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultOutput)
}

// GetCloudProviderSnapshotRestoreJobsResultArrayInput is an input type that accepts GetCloudProviderSnapshotRestoreJobsResultArray and GetCloudProviderSnapshotRestoreJobsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotRestoreJobsResultArrayInput` via:
//
//          GetCloudProviderSnapshotRestoreJobsResultArray{ GetCloudProviderSnapshotRestoreJobsResultArgs{...} }
type GetCloudProviderSnapshotRestoreJobsResultArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput
	ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput
}

type GetCloudProviderSnapshotRestoreJobsResultArray []GetCloudProviderSnapshotRestoreJobsResultInput

func (GetCloudProviderSnapshotRestoreJobsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotRestoreJobsResultArray) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return i.ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotRestoreJobsResultArray) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotRestoreJobsResultArrayOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ToGetCloudProviderSnapshotRestoreJobsResultOutput() GetCloudProviderSnapshotRestoreJobsResultOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ToGetCloudProviderSnapshotRestoreJobsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return o
}

// Indicates whether the restore job was canceled.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Cancelled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) bool { return v.Cancelled }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when Atlas created the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Type of restore job to create. Possible values are: automated and download.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) DeliveryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.DeliveryType }).(pulumi.StringOutput)
}

// One or more URLs for the compressed snapshot files for manual download. Only visible if deliveryType is download.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) DeliveryUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) []string { return v.DeliveryUrls }).(pulumi.StringArrayOutput)
}

// Indicates whether the restore job expired.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) bool { return v.Expired }).(pulumi.BoolOutput)
}

// UTC ISO 8601 formatted point in time when the restore job expires.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when the restore job completed.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) FinishedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.FinishedAt }).(pulumi.StringOutput)
}

// The unique identifier of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) OplogInc() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.OplogInc }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) OplogTs() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.OplogTs }).(pulumi.IntOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) PointInTimeUtcSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) int { return v.PointInTimeUtcSeconds }).(pulumi.IntOutput)
}

// Unique identifier of the source snapshot ID of the restore job.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// Name of the target Atlas cluster to which the restore job restores the snapshot. Only visible if deliveryType is automated.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) TargetClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.TargetClusterName }).(pulumi.StringOutput)
}

func (o GetCloudProviderSnapshotRestoreJobsResultOutput) TargetProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.TargetProjectId }).(pulumi.StringOutput)
}

// Timestamp in ISO 8601 date and time format in UTC when the snapshot associated to snapshotId was taken.
func (o GetCloudProviderSnapshotRestoreJobsResultOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotRestoreJobsResult) string { return v.Timestamp }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotRestoreJobsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotRestoreJobsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutput() GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) ToGetCloudProviderSnapshotRestoreJobsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotRestoreJobsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotRestoreJobsResultArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotRestoreJobsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotRestoreJobsResult {
		return vs[0].([]GetCloudProviderSnapshotRestoreJobsResult)[vs[1].(int)]
	}).(GetCloudProviderSnapshotRestoreJobsResultOutput)
}

type GetCloudProviderSnapshotsResult struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt string `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description string `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt string `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id string `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid string `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion string `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType string `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status string `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes int `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type string `pulumi:"type"`
}

// GetCloudProviderSnapshotsResultInput is an input type that accepts GetCloudProviderSnapshotsResultArgs and GetCloudProviderSnapshotsResultOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultInput` via:
//
//          GetCloudProviderSnapshotsResultArgs{...}
type GetCloudProviderSnapshotsResultInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput
	ToGetCloudProviderSnapshotsResultOutputWithContext(context.Context) GetCloudProviderSnapshotsResultOutput
}

type GetCloudProviderSnapshotsResultArgs struct {
	// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// UDescription of the snapshot. Only present for on-demand snapshots.
	Description pulumi.StringInput `pulumi:"description"`
	// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Unique identifier of the snapshot.
	Id pulumi.StringInput `pulumi:"id"`
	// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
	MasterKeyUuid pulumi.StringInput `pulumi:"masterKeyUuid"`
	// Version of the MongoDB server.
	MongodVersion pulumi.StringInput `pulumi:"mongodVersion"`
	// Specified the type of snapshot. Valid values are onDemand and scheduled.
	SnapshotType pulumi.StringInput `pulumi:"snapshotType"`
	// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the size of the snapshot in bytes.
	StorageSizeBytes pulumi.IntInput `pulumi:"storageSizeBytes"`
	// Specifies the type of cluster: replicaSet or shardedCluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetCloudProviderSnapshotsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultArgs) ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput {
	return i.ToGetCloudProviderSnapshotsResultOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultArgs) ToGetCloudProviderSnapshotsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultOutput)
}

// GetCloudProviderSnapshotsResultArrayInput is an input type that accepts GetCloudProviderSnapshotsResultArray and GetCloudProviderSnapshotsResultArrayOutput values.
// You can construct a concrete instance of `GetCloudProviderSnapshotsResultArrayInput` via:
//
//          GetCloudProviderSnapshotsResultArray{ GetCloudProviderSnapshotsResultArgs{...} }
type GetCloudProviderSnapshotsResultArrayInput interface {
	pulumi.Input

	ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput
	ToGetCloudProviderSnapshotsResultArrayOutputWithContext(context.Context) GetCloudProviderSnapshotsResultArrayOutput
}

type GetCloudProviderSnapshotsResultArray []GetCloudProviderSnapshotsResultInput

func (GetCloudProviderSnapshotsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (i GetCloudProviderSnapshotsResultArray) ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput {
	return i.ToGetCloudProviderSnapshotsResultArrayOutputWithContext(context.Background())
}

func (i GetCloudProviderSnapshotsResultArray) ToGetCloudProviderSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudProviderSnapshotsResultArrayOutput)
}

type GetCloudProviderSnapshotsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultOutput) ToGetCloudProviderSnapshotsResultOutput() GetCloudProviderSnapshotsResultOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultOutput) ToGetCloudProviderSnapshotsResultOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultOutput {
	return o
}

// UTC ISO 8601 formatted point in time when Atlas took the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// UDescription of the snapshot. Only present for on-demand snapshots.
func (o GetCloudProviderSnapshotsResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Description }).(pulumi.StringOutput)
}

// UTC ISO 8601 formatted point in time when Atlas will delete the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Unique identifier of the snapshot.
func (o GetCloudProviderSnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique ID of the AWS KMS Customer Master Key used to encrypt the snapshot. Only visible for clusters using Encryption at Rest via Customer KMS.
func (o GetCloudProviderSnapshotsResultOutput) MasterKeyUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.MasterKeyUuid }).(pulumi.StringOutput)
}

// Version of the MongoDB server.
func (o GetCloudProviderSnapshotsResultOutput) MongodVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.MongodVersion }).(pulumi.StringOutput)
}

// Specified the type of snapshot. Valid values are onDemand and scheduled.
func (o GetCloudProviderSnapshotsResultOutput) SnapshotType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.SnapshotType }).(pulumi.StringOutput)
}

// Current status of the snapshot. One of the following values: queued, inProgress, completed, failed.
func (o GetCloudProviderSnapshotsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the size of the snapshot in bytes.
func (o GetCloudProviderSnapshotsResultOutput) StorageSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) int { return v.StorageSizeBytes }).(pulumi.IntOutput)
}

// Specifies the type of cluster: replicaSet or shardedCluster.
func (o GetCloudProviderSnapshotsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProviderSnapshotsResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetCloudProviderSnapshotsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCloudProviderSnapshotsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudProviderSnapshotsResult)(nil)).Elem()
}

func (o GetCloudProviderSnapshotsResultArrayOutput) ToGetCloudProviderSnapshotsResultArrayOutput() GetCloudProviderSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultArrayOutput) ToGetCloudProviderSnapshotsResultArrayOutputWithContext(ctx context.Context) GetCloudProviderSnapshotsResultArrayOutput {
	return o
}

func (o GetCloudProviderSnapshotsResultArrayOutput) Index(i pulumi.IntInput) GetCloudProviderSnapshotsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudProviderSnapshotsResult {
		return vs[0].([]GetCloudProviderSnapshotsResult)[vs[1].(int)]
	}).(GetCloudProviderSnapshotsResultOutput)
}

type GetClusterBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClusterBiConnectorConfigInput is an input type that accepts GetClusterBiConnectorConfigArgs and GetClusterBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigInput` via:
//
//          GetClusterBiConnectorConfigArgs{...}
type GetClusterBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput
	ToGetClusterBiConnectorConfigOutputWithContext(context.Context) GetClusterBiConnectorConfigOutput
}

type GetClusterBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClusterBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return i.ToGetClusterBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArgs) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigOutput)
}

// GetClusterBiConnectorConfigArrayInput is an input type that accepts GetClusterBiConnectorConfigArray and GetClusterBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterBiConnectorConfigArrayInput` via:
//
//          GetClusterBiConnectorConfigArray{ GetClusterBiConnectorConfigArgs{...} }
type GetClusterBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput
	ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Context) GetClusterBiConnectorConfigArrayOutput
}

type GetClusterBiConnectorConfigArray []GetClusterBiConnectorConfigInput

func (GetClusterBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return i.ToGetClusterBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterBiConnectorConfigArray) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBiConnectorConfigArrayOutput)
}

type GetClusterBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutput() GetClusterBiConnectorConfigOutput {
	return o
}

func (o GetClusterBiConnectorConfigOutput) ToGetClusterBiConnectorConfigOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClusterBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClusterBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClusterBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBiConnectorConfig)(nil)).Elem()
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutput() GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) ToGetClusterBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClusterBiConnectorConfigArrayOutput {
	return o
}

func (o GetClusterBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClusterBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBiConnectorConfig {
		return vs[0].([]GetClusterBiConnectorConfig)[vs[1].(int)]
	}).(GetClusterBiConnectorConfigOutput)
}

type GetClusterConnectionString struct {
	AwsPrivateLink    map[string]interface{}                      `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                      `pulumi:"awsPrivateLinkSrv"`
	Private           string                                      `pulumi:"private"`
	PrivateEndpoints  []GetClusterConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                      `pulumi:"privateSrv"`
	Standard          string                                      `pulumi:"standard"`
	StandardSrv       string                                      `pulumi:"standardSrv"`
}

// GetClusterConnectionStringInput is an input type that accepts GetClusterConnectionStringArgs and GetClusterConnectionStringOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringInput` via:
//
//          GetClusterConnectionStringArgs{...}
type GetClusterConnectionStringInput interface {
	pulumi.Input

	ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput
	ToGetClusterConnectionStringOutputWithContext(context.Context) GetClusterConnectionStringOutput
}

type GetClusterConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                     `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                     `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                  `pulumi:"private"`
	PrivateEndpoints  GetClusterConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                  `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                  `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                  `pulumi:"standardSrv"`
}

func (GetClusterConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return i.ToGetClusterConnectionStringOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArgs) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringOutput)
}

// GetClusterConnectionStringArrayInput is an input type that accepts GetClusterConnectionStringArray and GetClusterConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringArrayInput` via:
//
//          GetClusterConnectionStringArray{ GetClusterConnectionStringArgs{...} }
type GetClusterConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput
	ToGetClusterConnectionStringArrayOutputWithContext(context.Context) GetClusterConnectionStringArrayOutput
}

type GetClusterConnectionStringArray []GetClusterConnectionStringInput

func (GetClusterConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return i.ToGetClusterConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringArray) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringArrayOutput)
}

type GetClusterConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutput() GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) ToGetClusterConnectionStringOutputWithContext(ctx context.Context) GetClusterConnectionStringOutput {
	return o
}

func (o GetClusterConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClusterConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClusterConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) PrivateEndpoints() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionString) []GetClusterConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClusterConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClusterConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionString)(nil)).Elem()
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutput() GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) ToGetClusterConnectionStringArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringArrayOutput {
	return o
}

func (o GetClusterConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionString {
		return vs[0].([]GetClusterConnectionString)[vs[1].(int)]
	}).(GetClusterConnectionStringOutput)
}

type GetClusterConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                              `pulumi:"connectionString"`
	Endpoints           []GetClusterConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                              `pulumi:"srvConnectionString"`
	Type                string                                              `pulumi:"type"`
}

// GetClusterConnectionStringPrivateEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArgs and GetClusterConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointInput` via:
//
//          GetClusterConnectionStringPrivateEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                          `pulumi:"connectionString"`
	Endpoints           GetClusterConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                          `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                          `pulumi:"type"`
}

func (GetClusterConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArgs) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointOutput)
}

// GetClusterConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointArray and GetClusterConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointArrayInput` via:
//
//          GetClusterConnectionStringPrivateEndpointArray{ GetClusterConnectionStringPrivateEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointArray []GetClusterConnectionStringPrivateEndpointInput

func (GetClusterConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointArray) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointArrayOutput)
}

type GetClusterConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutput() GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ToGetClusterConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Endpoints() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) []GetClusterConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClusterConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArgs and GetClusterConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointInput` via:
//
//          GetClusterConnectionStringPrivateEndpointEndpointArgs{...}
type GetClusterConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClusterConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArgs) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

// GetClusterConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClusterConnectionStringPrivateEndpointEndpointArray and GetClusterConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClusterConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//          GetClusterConnectionStringPrivateEndpointEndpointArray{ GetClusterConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClusterConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClusterConnectionStringPrivateEndpointEndpointArray []GetClusterConnectionStringPrivateEndpointEndpointInput

func (GetClusterConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClusterConnectionStringPrivateEndpointEndpointArray) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutput() GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ToGetClusterConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClusterConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClusterConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutput() GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClusterConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClusterConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClusterConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClusterConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClusterConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClusterConnectionStringPrivateEndpointEndpointOutput)
}

type GetClusterLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClusterLabelInput is an input type that accepts GetClusterLabelArgs and GetClusterLabelOutput values.
// You can construct a concrete instance of `GetClusterLabelInput` via:
//
//          GetClusterLabelArgs{...}
type GetClusterLabelInput interface {
	pulumi.Input

	ToGetClusterLabelOutput() GetClusterLabelOutput
	ToGetClusterLabelOutputWithContext(context.Context) GetClusterLabelOutput
}

type GetClusterLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return i.ToGetClusterLabelOutputWithContext(context.Background())
}

func (i GetClusterLabelArgs) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelOutput)
}

// GetClusterLabelArrayInput is an input type that accepts GetClusterLabelArray and GetClusterLabelArrayOutput values.
// You can construct a concrete instance of `GetClusterLabelArrayInput` via:
//
//          GetClusterLabelArray{ GetClusterLabelArgs{...} }
type GetClusterLabelArrayInput interface {
	pulumi.Input

	ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput
	ToGetClusterLabelArrayOutputWithContext(context.Context) GetClusterLabelArrayOutput
}

type GetClusterLabelArray []GetClusterLabelInput

func (GetClusterLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return i.ToGetClusterLabelArrayOutputWithContext(context.Background())
}

func (i GetClusterLabelArray) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterLabelArrayOutput)
}

type GetClusterLabelOutput struct{ *pulumi.OutputState }

func (GetClusterLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutput() GetClusterLabelOutput {
	return o
}

func (o GetClusterLabelOutput) ToGetClusterLabelOutputWithContext(ctx context.Context) GetClusterLabelOutput {
	return o
}

// The key that was set.
func (o GetClusterLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClusterLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClusterLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterLabel)(nil)).Elem()
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutput() GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) ToGetClusterLabelArrayOutputWithContext(ctx context.Context) GetClusterLabelArrayOutput {
	return o
}

func (o GetClusterLabelArrayOutput) Index(i pulumi.IntInput) GetClusterLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterLabel {
		return vs[0].([]GetClusterLabel)[vs[1].(int)]
	}).(GetClusterLabelOutput)
}

type GetClusterReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClusterReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClusterReplicationSpecInput is an input type that accepts GetClusterReplicationSpecArgs and GetClusterReplicationSpecOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecInput` via:
//
//          GetClusterReplicationSpecArgs{...}
type GetClusterReplicationSpecInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput
	ToGetClusterReplicationSpecOutputWithContext(context.Context) GetClusterReplicationSpecOutput
}

type GetClusterReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClusterReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClusterReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return i.ToGetClusterReplicationSpecOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArgs) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecOutput)
}

// GetClusterReplicationSpecArrayInput is an input type that accepts GetClusterReplicationSpecArray and GetClusterReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecArrayInput` via:
//
//          GetClusterReplicationSpecArray{ GetClusterReplicationSpecArgs{...} }
type GetClusterReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput
	ToGetClusterReplicationSpecArrayOutputWithContext(context.Context) GetClusterReplicationSpecArrayOutput
}

type GetClusterReplicationSpecArray []GetClusterReplicationSpecInput

func (GetClusterReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return i.ToGetClusterReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecArray) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecArrayOutput)
}

type GetClusterReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutput() GetClusterReplicationSpecOutput {
	return o
}

func (o GetClusterReplicationSpecOutput) ToGetClusterReplicationSpecOutputWithContext(ctx context.Context) GetClusterReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClusterReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClusterReplicationSpecOutput) RegionsConfigs() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) []GetClusterReplicationSpecRegionsConfig { return v.RegionsConfigs }).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClusterReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpec)(nil)).Elem()
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutput() GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) ToGetClusterReplicationSpecArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecArrayOutput {
	return o
}

func (o GetClusterReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpec {
		return vs[0].([]GetClusterReplicationSpec)[vs[1].(int)]
	}).(GetClusterReplicationSpecOutput)
}

type GetClusterReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClusterReplicationSpecRegionsConfigInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArgs and GetClusterReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigInput` via:
//
//          GetClusterReplicationSpecRegionsConfigArgs{...}
type GetClusterReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput
	ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigOutput
}

type GetClusterReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClusterReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArgs) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigOutput)
}

// GetClusterReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClusterReplicationSpecRegionsConfigArray and GetClusterReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClusterReplicationSpecRegionsConfigArrayInput` via:
//
//          GetClusterReplicationSpecRegionsConfigArray{ GetClusterReplicationSpecRegionsConfigArgs{...} }
type GetClusterReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput
	ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput
}

type GetClusterReplicationSpecRegionsConfigArray []GetClusterReplicationSpecRegionsConfigInput

func (GetClusterReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClusterReplicationSpecRegionsConfigArray) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterReplicationSpecRegionsConfigArrayOutput)
}

type GetClusterReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutput() GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigOutput) ToGetClusterReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClusterReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClusterReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClusterReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClusterReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClusterReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClusterReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutput() GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) ToGetClusterReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClusterReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClusterReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClusterReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterReplicationSpecRegionsConfig {
		return vs[0].([]GetClusterReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClusterReplicationSpecRegionsConfigOutput)
}

type GetClusterSnapshotBackupPolicy struct {
	ClusterId             string                                 `pulumi:"clusterId"`
	ClusterName           string                                 `pulumi:"clusterName"`
	NextSnapshot          string                                 `pulumi:"nextSnapshot"`
	Policies              []GetClusterSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                    `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                    `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                    `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                   `pulumi:"updateSnapshots"`
}

// GetClusterSnapshotBackupPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyArgs and GetClusterSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyInput` via:
//
//          GetClusterSnapshotBackupPolicyArgs{...}
type GetClusterSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput
	ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyOutput
}

type GetClusterSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                             `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                             `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                             `pulumi:"nextSnapshot"`
	Policies              GetClusterSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                               `pulumi:"updateSnapshots"`
}

func (GetClusterSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArgs) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyOutput)
}

// GetClusterSnapshotBackupPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyArray and GetClusterSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyArray{ GetClusterSnapshotBackupPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyArray []GetClusterSnapshotBackupPolicyInput

func (GetClusterSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyArray) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutput() GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ToGetClusterSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) Policies() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) []GetClusterSnapshotBackupPolicyPolicy { return v.Policies }).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClusterSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutput() GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                           `pulumi:"id"`
	PolicyItems []GetClusterSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClusterSnapshotBackupPolicyPolicyInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArgs and GetClusterSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyArgs{...}
type GetClusterSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput
	ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyOutput
}

type GetClusterSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                       `pulumi:"id"`
	PolicyItems GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClusterSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArgs) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

// GetClusterSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyArray and GetClusterSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyArray{ GetClusterSnapshotBackupPolicyPolicyArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyArray []GetClusterSnapshotBackupPolicyPolicyInput

func (GetClusterSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyArray) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutput() GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) ToGetClusterSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicy) []GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutput() GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs and GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClusterSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClusterSnapshotBackupPolicyPolicyPolicyItemArray and GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{ GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArray []GetClusterSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClusterSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClusterSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetClustersResult struct {
	// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled bool `pulumi:"autoScalingComputeEnabled"`
	// (Optional) Set to `true` to enable the cluster tier to scale down.
	AutoScalingComputeScaleDownEnabled bool `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled bool `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName string `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled bool `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector map[string]string `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs []GetClustersResultBiConnectorConfig `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType string `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings []GetClustersResultConnectionString `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId string `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb float64 `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider string                   `pulumi:"encryptionAtRestProvider"`
	Labels                   []GetClustersResultLabel `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion string `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion string `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri string `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated string `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions string `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name string `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused bool `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled bool `pulumi:"pitEnabled"`
	// (Optional) Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize string `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// (Optional) Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize string `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled bool `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops int `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName string `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume bool `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName string `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName string `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType string `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor int `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs []GetClustersResultReplicationSpec `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies []GetClustersResultSnapshotBackupPolicy `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress string `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName string `pulumi:"stateName"`
}

// GetClustersResultInput is an input type that accepts GetClustersResultArgs and GetClustersResultOutput values.
// You can construct a concrete instance of `GetClustersResultInput` via:
//
//          GetClustersResultArgs{...}
type GetClustersResultInput interface {
	pulumi.Input

	ToGetClustersResultOutput() GetClustersResultOutput
	ToGetClustersResultOutputWithContext(context.Context) GetClustersResultOutput
}

type GetClustersResultArgs struct {
	// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
	AutoScalingComputeEnabled pulumi.BoolInput `pulumi:"autoScalingComputeEnabled"`
	// (Optional) Set to `true` to enable the cluster tier to scale down.
	AutoScalingComputeScaleDownEnabled pulumi.BoolInput `pulumi:"autoScalingComputeScaleDownEnabled"`
	// Indicates whether disk auto-scaling is enabled.
	AutoScalingDiskGbEnabled pulumi.BoolInput `pulumi:"autoScalingDiskGbEnabled"`
	// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
	BackingProviderName pulumi.StringInput `pulumi:"backingProviderName"`
	// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
	BackupEnabled pulumi.BoolInput `pulumi:"backupEnabled"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
	//
	// Deprecated: use bi_connector_config instead
	BiConnector pulumi.StringMapInput `pulumi:"biConnector"`
	// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
	BiConnectorConfigs GetClustersResultBiConnectorConfigArrayInput `pulumi:"biConnectorConfigs"`
	// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
	// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
	// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
	// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
	// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
	// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
	// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
	// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
	// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
	// - `connection_strings.private_endoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
	// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
	// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
	ConnectionStrings GetClustersResultConnectionStringArrayInput `pulumi:"connectionStrings"`
	// The Network Peering Container ID.
	ContainerId pulumi.StringInput `pulumi:"containerId"`
	// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
	DiskSizeGb pulumi.Float64Input `pulumi:"diskSizeGb"`
	// Indicates whether Encryption at Rest is enabled or disabled.
	EncryptionAtRestProvider pulumi.StringInput               `pulumi:"encryptionAtRestProvider"`
	Labels                   GetClustersResultLabelArrayInput `pulumi:"labels"`
	// Indicates the version of the cluster to deploy.
	MongoDbMajorVersion pulumi.StringInput `pulumi:"mongoDbMajorVersion"`
	// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
	MongoDbVersion pulumi.StringInput `pulumi:"mongoDbVersion"`
	// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
	MongoUri pulumi.StringInput `pulumi:"mongoUri"`
	// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
	MongoUriUpdated pulumi.StringInput `pulumi:"mongoUriUpdated"`
	// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
	MongoUriWithOptions pulumi.StringInput `pulumi:"mongoUriWithOptions"`
	// The name of the current plugin
	Name pulumi.StringInput `pulumi:"name"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Flag that indicates whether the cluster is paused or not.
	Paused pulumi.BoolInput `pulumi:"paused"`
	// Flag that indicates if the cluster uses Continuous Cloud Backup.
	PitEnabled pulumi.BoolInput `pulumi:"pitEnabled"`
	// (Optional) Maximum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMaxInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMaxInstanceSize"`
	// (Optional) Minimum instance size to which your cluster can automatically scale.
	ProviderAutoScalingComputeMinInstanceSize pulumi.StringInput `pulumi:"providerAutoScalingComputeMinInstanceSize"`
	// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
	ProviderBackupEnabled pulumi.BoolInput `pulumi:"providerBackupEnabled"`
	// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
	ProviderDiskIops pulumi.IntInput `pulumi:"providerDiskIops"`
	// Describes Azure disk type of the server’s root volume (Azure Only).
	ProviderDiskTypeName pulumi.StringInput `pulumi:"providerDiskTypeName"`
	// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
	ProviderEncryptEbsVolume pulumi.BoolInput `pulumi:"providerEncryptEbsVolume"`
	// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
	ProviderInstanceSizeName pulumi.StringInput `pulumi:"providerInstanceSizeName"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
	ProviderRegionName pulumi.StringInput `pulumi:"providerRegionName"`
	// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
	ProviderVolumeType pulumi.StringInput `pulumi:"providerVolumeType"`
	// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
	ReplicationFactor pulumi.IntInput `pulumi:"replicationFactor"`
	// Configuration for cluster regions.  See Replication Spec below for more details.
	ReplicationSpecs GetClustersResultReplicationSpecArrayInput `pulumi:"replicationSpecs"`
	// current snapshot schedule and retention settings for the cluster.
	SnapshotBackupPolicies GetClustersResultSnapshotBackupPolicyArrayInput `pulumi:"snapshotBackupPolicies"`
	// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
	SrvAddress pulumi.StringInput `pulumi:"srvAddress"`
	// Indicates the current state of the cluster. The possible states are:
	// - IDLE
	// - CREATING
	// - UPDATING
	// - DELETING
	// - DELETED
	// - REPAIRING
	StateName pulumi.StringInput `pulumi:"stateName"`
}

func (GetClustersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArgs) ToGetClustersResultOutput() GetClustersResultOutput {
	return i.ToGetClustersResultOutputWithContext(context.Background())
}

func (i GetClustersResultArgs) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultOutput)
}

// GetClustersResultArrayInput is an input type that accepts GetClustersResultArray and GetClustersResultArrayOutput values.
// You can construct a concrete instance of `GetClustersResultArrayInput` via:
//
//          GetClustersResultArray{ GetClustersResultArgs{...} }
type GetClustersResultArrayInput interface {
	pulumi.Input

	ToGetClustersResultArrayOutput() GetClustersResultArrayOutput
	ToGetClustersResultArrayOutputWithContext(context.Context) GetClustersResultArrayOutput
}

type GetClustersResultArray []GetClustersResultInput

func (GetClustersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return i.ToGetClustersResultArrayOutputWithContext(context.Background())
}

func (i GetClustersResultArray) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultArrayOutput)
}

type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// (Optional) Specifies whether cluster tier auto-scaling is enabled. The default is false.
func (o GetClustersResultOutput) AutoScalingComputeEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeEnabled }).(pulumi.BoolOutput)
}

// (Optional) Set to `true` to enable the cluster tier to scale down.
func (o GetClustersResultOutput) AutoScalingComputeScaleDownEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingComputeScaleDownEnabled }).(pulumi.BoolOutput)
}

// Indicates whether disk auto-scaling is enabled.
func (o GetClustersResultOutput) AutoScalingDiskGbEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.AutoScalingDiskGbEnabled }).(pulumi.BoolOutput)
}

// Indicates Cloud service provider on which the server for a multi-tenant cluster is provisioned.
func (o GetClustersResultOutput) BackingProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.BackingProviderName }).(pulumi.StringOutput)
}

// Legacy Option, Indicates whether Atlas continuous backups are enabled for the cluster.
func (o GetClustersResultOutput) BackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.BackupEnabled }).(pulumi.BoolOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details. **DEPRECATED** Use `biConnectorConfig` instead.
//
// Deprecated: use bi_connector_config instead
func (o GetClustersResultOutput) BiConnector() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClustersResult) map[string]string { return v.BiConnector }).(pulumi.StringMapOutput)
}

// Indicates BI Connector for Atlas configuration on this cluster. BI Connector for Atlas is only available for M10+ clusters. See BI Connector below for more details.
func (o GetClustersResultOutput) BiConnectorConfigs() GetClustersResultBiConnectorConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultBiConnectorConfig { return v.BiConnectorConfigs }).(GetClustersResultBiConnectorConfigArrayOutput)
}

// Indicates the type of the cluster that you want to modify. You cannot convert a sharded cluster deployment to a replica set deployment.
func (o GetClustersResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Set of connection strings that your applications use to connect to this cluster. More info in [Connection-strings](https://docs.mongodb.com/manual/reference/connection-string/). Use the parameters in this object to connect your applications to this cluster. To learn more about the formats of connection strings, see [Connection String Options](https://docs.atlas.mongodb.com/reference/faq/connection-changes/). NOTE: Atlas returns the contents of this object after the cluster is operational, not while it builds the cluster.
// - `connection_strings.standard` -   Public mongodb:// connection string for this cluster.
// - `connection_strings.standard_srv` - Public mongodb+srv:// connection string for this cluster. The mongodb+srv protocol tells the driver to look up the seed list of hosts in DNS. Atlas synchronizes this list with the nodes in a cluster. If the connection string uses this URI format, you don’t need to append the seed list or change the URI if the nodes change. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.standard.
// - `connection_strings.aws_private_link` -  [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. **DEPRECATED** Use `connection_strings.private_endpoint[n].connection_string` instead.
// - `connection_strings.aws_private_link_srv` - [Private-endpoint-aware](https://docs.atlas.mongodb.com/security-private-endpoint/#private-endpoint-connection-strings) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a AWS PrivateLink connection to this cluster. Use this URI format if your driver supports it. If it doesn’t, use connectionStrings.awsPrivateLink. **DEPRECATED** `connection_strings.private_endpoint[n].srv_connection_string` instead.
// - `connection_strings.private` -   [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_srv` -  [Network-peering-endpoint-aware](https://docs.atlas.mongodb.com/security-vpc-peering/#vpc-peering) mongodb+srv://connection strings for each interface VPC endpoint you configured to connect to this cluster. Returned only if you created a network peering connection to this cluster.
// - `connection_strings.private_endpoint.#.connection_string` - Private-endpoint-aware `mongodb://`connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.srv_connection_string` - Private-endpoint-aware `mongodb+srv://` connection string for this private endpoint.
// - `connection_strings.private_endpoint.#.type` - Type of MongoDB process that you connect to with the connection strings. Atlas returns `MONGOD` for replica sets, or `MONGOS` for sharded clusters.
// - `connection_strings.private_endpoint.#.endpoints` - Private endpoint through which you connect to Atlas when you use `connection_strings.private_endpoint[n].connection_string` or `connection_strings.private_endpoint[n].srv_connection_string`
// - `connection_strings.private_endoint.#.endpoints.#.endpoint_id` - Unique identifier of the private endpoint.
// - `connection_strings.private_endpoint.#.endpoints.#.provider_name` - Cloud provider to which you deployed the private endpoint. Atlas returns `AWS` or `AZURE`.
// - `connection_strings.private_endpoint.#.endpoints.#.region` - Region to which you deployed the private endpoint.
func (o GetClustersResultOutput) ConnectionStrings() GetClustersResultConnectionStringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultConnectionString { return v.ConnectionStrings }).(GetClustersResultConnectionStringArrayOutput)
}

// The Network Peering Container ID.
func (o GetClustersResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// Indicates the size in gigabytes of the server’s root volume (AWS/GCP Only).
func (o GetClustersResultOutput) DiskSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v GetClustersResult) float64 { return v.DiskSizeGb }).(pulumi.Float64Output)
}

// Indicates whether Encryption at Rest is enabled or disabled.
func (o GetClustersResultOutput) EncryptionAtRestProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.EncryptionAtRestProvider }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) Labels() GetClustersResultLabelArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultLabel { return v.Labels }).(GetClustersResultLabelArrayOutput)
}

// Indicates the version of the cluster to deploy.
func (o GetClustersResultOutput) MongoDbMajorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbMajorVersion }).(pulumi.StringOutput)
}

// Version of MongoDB the cluster runs, in `major-version`.`minor-version` format.
func (o GetClustersResultOutput) MongoDbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoDbVersion }).(pulumi.StringOutput)
}

// Base connection string for the cluster. Atlas only displays this field after the cluster is operational, not while it builds the cluster.
func (o GetClustersResultOutput) MongoUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUri }).(pulumi.StringOutput)
}

// Lists when the connection string was last updated. The connection string changes, for example, if you change a replica set to a sharded cluster.
func (o GetClustersResultOutput) MongoUriUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriUpdated }).(pulumi.StringOutput)
}

// Describes connection string for connecting to the Atlas cluster. Includes the replicaSet, ssl, and authSource query parameters in the connection string with values appropriate for the cluster.
func (o GetClustersResultOutput) MongoUriWithOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.MongoUriWithOptions }).(pulumi.StringOutput)
}

// The name of the current plugin
func (o GetClustersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Name }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.NumShards }).(pulumi.IntOutput)
}

// Flag that indicates whether the cluster is paused or not.
func (o GetClustersResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// Flag that indicates if the cluster uses Continuous Cloud Backup.
func (o GetClustersResultOutput) PitEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.PitEnabled }).(pulumi.BoolOutput)
}

// (Optional) Maximum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMaxInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMaxInstanceSize }).(pulumi.StringOutput)
}

// (Optional) Minimum instance size to which your cluster can automatically scale.
func (o GetClustersResultOutput) ProviderAutoScalingComputeMinInstanceSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderAutoScalingComputeMinInstanceSize }).(pulumi.StringOutput)
}

// Flag indicating if the cluster uses Cloud Backup Snapshots for backups. **DEPRECATED** Use `cloudBackup` instead.
func (o GetClustersResultOutput) ProviderBackupEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderBackupEnabled }).(pulumi.BoolOutput)
}

// Indicates the maximum input/output operations per second (IOPS) the system can perform. The possible values depend on the selected providerSettings.instanceSizeName and diskSizeGB.
func (o GetClustersResultOutput) ProviderDiskIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ProviderDiskIops }).(pulumi.IntOutput)
}

// Describes Azure disk type of the server’s root volume (Azure Only).
func (o GetClustersResultOutput) ProviderDiskTypeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderDiskTypeName }).(pulumi.StringOutput)
}

// **(DEPRECATED)** Indicates whether the Amazon EBS encryption is enabled. This feature encrypts the server’s root volume for both data at rest within the volume and data moving between the volume and the instance. By default this attribute is always enabled, per deprecation process showing the real value at `providerEncryptEbsVolumeFlag` computed attribute.
func (o GetClustersResultOutput) ProviderEncryptEbsVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResult) bool { return v.ProviderEncryptEbsVolume }).(pulumi.BoolOutput)
}

// Atlas provides different instance sizes, each with a default storage capacity and RAM size.
func (o GetClustersResultOutput) ProviderInstanceSizeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderInstanceSizeName }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates Physical location of your MongoDB cluster. The region you choose can affect network latency for clients accessing your databases. Requires the Atlas Region name, see the reference list for [AWS](https://docs.atlas.mongodb.com/reference/amazon-aws/), [GCP](https://docs.atlas.mongodb.com/reference/google-gcp/), [Azure](https://docs.atlas.mongodb.com/reference/microsoft-azure/).
func (o GetClustersResultOutput) ProviderRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderRegionName }).(pulumi.StringOutput)
}

// Indicates the type of the volume. The possible values are: `STANDARD` and `PROVISIONED`.
func (o GetClustersResultOutput) ProviderVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.ProviderVolumeType }).(pulumi.StringOutput)
}

// (Deprecated) Number of replica set members. Each member keeps a copy of your databases, providing high availability and data redundancy. The possible values are 3, 5, or 7. The default value is 3.
func (o GetClustersResultOutput) ReplicationFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.ReplicationFactor }).(pulumi.IntOutput)
}

// Configuration for cluster regions.  See Replication Spec below for more details.
func (o GetClustersResultOutput) ReplicationSpecs() GetClustersResultReplicationSpecArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultReplicationSpec { return v.ReplicationSpecs }).(GetClustersResultReplicationSpecArrayOutput)
}

// current snapshot schedule and retention settings for the cluster.
func (o GetClustersResultOutput) SnapshotBackupPolicies() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResultSnapshotBackupPolicy { return v.SnapshotBackupPolicies }).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

// Connection string for connecting to the Atlas cluster. The +srv modifier forces the connection to use TLS/SSL. See the mongoURI for additional options.
func (o GetClustersResultOutput) SrvAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.SrvAddress }).(pulumi.StringOutput)
}

// Indicates the current state of the cluster. The possible states are:
// - IDLE
// - CREATING
// - UPDATING
// - DELETING
// - DELETED
// - REPAIRING
func (o GetClustersResultOutput) StateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.StateName }).(pulumi.StringOutput)
}

type GetClustersResultArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutput() GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) ToGetClustersResultArrayOutputWithContext(ctx context.Context) GetClustersResultArrayOutput {
	return o
}

func (o GetClustersResultArrayOutput) Index(i pulumi.IntInput) GetClustersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResult {
		return vs[0].([]GetClustersResult)[vs[1].(int)]
	}).(GetClustersResultOutput)
}

type GetClustersResultBiConnectorConfig struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled bool `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference string `pulumi:"readPreference"`
}

// GetClustersResultBiConnectorConfigInput is an input type that accepts GetClustersResultBiConnectorConfigArgs and GetClustersResultBiConnectorConfigOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigInput` via:
//
//          GetClustersResultBiConnectorConfigArgs{...}
type GetClustersResultBiConnectorConfigInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput
	ToGetClustersResultBiConnectorConfigOutputWithContext(context.Context) GetClustersResultBiConnectorConfigOutput
}

type GetClustersResultBiConnectorConfigArgs struct {
	// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
	ReadPreference pulumi.StringInput `pulumi:"readPreference"`
}

func (GetClustersResultBiConnectorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return i.ToGetClustersResultBiConnectorConfigOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArgs) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigOutput)
}

// GetClustersResultBiConnectorConfigArrayInput is an input type that accepts GetClustersResultBiConnectorConfigArray and GetClustersResultBiConnectorConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultBiConnectorConfigArrayInput` via:
//
//          GetClustersResultBiConnectorConfigArray{ GetClustersResultBiConnectorConfigArgs{...} }
type GetClustersResultBiConnectorConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput
	ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Context) GetClustersResultBiConnectorConfigArrayOutput
}

type GetClustersResultBiConnectorConfigArray []GetClustersResultBiConnectorConfigInput

func (GetClustersResultBiConnectorConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return i.ToGetClustersResultBiConnectorConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultBiConnectorConfigArray) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultBiConnectorConfigArrayOutput)
}

type GetClustersResultBiConnectorConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutput() GetClustersResultBiConnectorConfigOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigOutput) ToGetClustersResultBiConnectorConfigOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigOutput {
	return o
}

// Indicates whether or not BI Connector for Atlas is enabled on the cluster.
func (o GetClustersResultBiConnectorConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Indicates the read preference to be used by BI Connector for Atlas on the cluster. Each BI Connector for Atlas read preference contains a distinct combination of [readPreference](https://docs.mongodb.com/manual/core/read-preference/) and [readPreferenceTags](https://docs.mongodb.com/manual/core/read-preference/#tag-sets) options. For details on BI Connector for Atlas read preferences, refer to the [BI Connector Read Preferences Table](https://docs.atlas.mongodb.com/tutorial/create-global-writes-cluster/#bic-read-preferences).
func (o GetClustersResultBiConnectorConfigOutput) ReadPreference() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultBiConnectorConfig) string { return v.ReadPreference }).(pulumi.StringOutput)
}

type GetClustersResultBiConnectorConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultBiConnectorConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultBiConnectorConfig)(nil)).Elem()
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutput() GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) ToGetClustersResultBiConnectorConfigArrayOutputWithContext(ctx context.Context) GetClustersResultBiConnectorConfigArrayOutput {
	return o
}

func (o GetClustersResultBiConnectorConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultBiConnectorConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultBiConnectorConfig {
		return vs[0].([]GetClustersResultBiConnectorConfig)[vs[1].(int)]
	}).(GetClustersResultBiConnectorConfigOutput)
}

type GetClustersResultConnectionString struct {
	AwsPrivateLink    map[string]interface{}                             `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv map[string]interface{}                             `pulumi:"awsPrivateLinkSrv"`
	Private           string                                             `pulumi:"private"`
	PrivateEndpoints  []GetClustersResultConnectionStringPrivateEndpoint `pulumi:"privateEndpoints"`
	PrivateSrv        string                                             `pulumi:"privateSrv"`
	Standard          string                                             `pulumi:"standard"`
	StandardSrv       string                                             `pulumi:"standardSrv"`
}

// GetClustersResultConnectionStringInput is an input type that accepts GetClustersResultConnectionStringArgs and GetClustersResultConnectionStringOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringInput` via:
//
//          GetClustersResultConnectionStringArgs{...}
type GetClustersResultConnectionStringInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput
	ToGetClustersResultConnectionStringOutputWithContext(context.Context) GetClustersResultConnectionStringOutput
}

type GetClustersResultConnectionStringArgs struct {
	AwsPrivateLink    pulumi.MapInput                                            `pulumi:"awsPrivateLink"`
	AwsPrivateLinkSrv pulumi.MapInput                                            `pulumi:"awsPrivateLinkSrv"`
	Private           pulumi.StringInput                                         `pulumi:"private"`
	PrivateEndpoints  GetClustersResultConnectionStringPrivateEndpointArrayInput `pulumi:"privateEndpoints"`
	PrivateSrv        pulumi.StringInput                                         `pulumi:"privateSrv"`
	Standard          pulumi.StringInput                                         `pulumi:"standard"`
	StandardSrv       pulumi.StringInput                                         `pulumi:"standardSrv"`
}

func (GetClustersResultConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return i.ToGetClustersResultConnectionStringOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArgs) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringOutput)
}

// GetClustersResultConnectionStringArrayInput is an input type that accepts GetClustersResultConnectionStringArray and GetClustersResultConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringArrayInput` via:
//
//          GetClustersResultConnectionStringArray{ GetClustersResultConnectionStringArgs{...} }
type GetClustersResultConnectionStringArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput
	ToGetClustersResultConnectionStringArrayOutputWithContext(context.Context) GetClustersResultConnectionStringArrayOutput
}

type GetClustersResultConnectionStringArray []GetClustersResultConnectionStringInput

func (GetClustersResultConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return i.ToGetClustersResultConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringArray) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringArrayOutput)
}

type GetClustersResultConnectionStringOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutput() GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) ToGetClustersResultConnectionStringOutputWithContext(ctx context.Context) GetClustersResultConnectionStringOutput {
	return o
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLink() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLink }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) AwsPrivateLinkSrv() pulumi.MapOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) map[string]interface{} { return v.AwsPrivateLinkSrv }).(pulumi.MapOutput)
}

func (o GetClustersResultConnectionStringOutput) Private() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Private }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateEndpoints() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) []GetClustersResultConnectionStringPrivateEndpoint {
		return v.PrivateEndpoints
	}).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringOutput) PrivateSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.PrivateSrv }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) Standard() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.Standard }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringOutput) StandardSrv() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionString) string { return v.StandardSrv }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionString)(nil)).Elem()
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutput() GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) ToGetClustersResultConnectionStringArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionString {
		return vs[0].([]GetClustersResultConnectionString)[vs[1].(int)]
	}).(GetClustersResultConnectionStringOutput)
}

type GetClustersResultConnectionStringPrivateEndpoint struct {
	ConnectionString    string                                                     `pulumi:"connectionString"`
	Endpoints           []GetClustersResultConnectionStringPrivateEndpointEndpoint `pulumi:"endpoints"`
	SrvConnectionString string                                                     `pulumi:"srvConnectionString"`
	Type                string                                                     `pulumi:"type"`
}

// GetClustersResultConnectionStringPrivateEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArgs and GetClustersResultConnectionStringPrivateEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointInput` via:
//
//          GetClustersResultConnectionStringPrivateEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointArgs struct {
	ConnectionString    pulumi.StringInput                                                 `pulumi:"connectionString"`
	Endpoints           GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput `pulumi:"endpoints"`
	SrvConnectionString pulumi.StringInput                                                 `pulumi:"srvConnectionString"`
	Type                pulumi.StringInput                                                 `pulumi:"type"`
}

func (GetClustersResultConnectionStringPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

// GetClustersResultConnectionStringPrivateEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointArray and GetClustersResultConnectionStringPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointArrayInput` via:
//
//          GetClustersResultConnectionStringPrivateEndpointArray{ GetClustersResultConnectionStringPrivateEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointArray []GetClustersResultConnectionStringPrivateEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointArrayOutput)
}

type GetClustersResultConnectionStringPrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutput() GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Endpoints() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) []GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return v.Endpoints
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) SrvConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.SrvConnectionString }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpoint struct {
	EndpointId string `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName string `pulumi:"providerName"`
	Region       string `pulumi:"region"`
}

// GetClustersResultConnectionStringPrivateEndpointEndpointInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArgs and GetClustersResultConnectionStringPrivateEndpointEndpointOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointInput` via:
//
//          GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...}
type GetClustersResultConnectionStringPrivateEndpointEndpointInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArgs struct {
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Indicates the cloud service provider on which the servers are provisioned.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	Region       pulumi.StringInput `pulumi:"region"`
}

func (GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArgs) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

// GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput is an input type that accepts GetClustersResultConnectionStringPrivateEndpointEndpointArray and GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput values.
// You can construct a concrete instance of `GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput` via:
//
//          GetClustersResultConnectionStringPrivateEndpointEndpointArray{ GetClustersResultConnectionStringPrivateEndpointEndpointArgs{...} }
type GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput interface {
	pulumi.Input

	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
	ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArray []GetClustersResultConnectionStringPrivateEndpointEndpointInput

func (GetClustersResultConnectionStringPrivateEndpointEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return i.ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(context.Background())
}

func (i GetClustersResultConnectionStringPrivateEndpointEndpointArray) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpointOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutput() GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Indicates the cloud service provider on which the servers are provisioned.
func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.ProviderName }).(pulumi.StringOutput)
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultConnectionStringPrivateEndpointEndpoint) string { return v.Region }).(pulumi.StringOutput)
}

type GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultConnectionStringPrivateEndpointEndpoint)(nil)).Elem()
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput() GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) ToGetClustersResultConnectionStringPrivateEndpointEndpointArrayOutputWithContext(ctx context.Context) GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput {
	return o
}

func (o GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput) Index(i pulumi.IntInput) GetClustersResultConnectionStringPrivateEndpointEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultConnectionStringPrivateEndpointEndpoint {
		return vs[0].([]GetClustersResultConnectionStringPrivateEndpointEndpoint)[vs[1].(int)]
	}).(GetClustersResultConnectionStringPrivateEndpointEndpointOutput)
}

type GetClustersResultLabel struct {
	// The key that was set.
	Key string `pulumi:"key"`
	// The value that represents the key.
	Value string `pulumi:"value"`
}

// GetClustersResultLabelInput is an input type that accepts GetClustersResultLabelArgs and GetClustersResultLabelOutput values.
// You can construct a concrete instance of `GetClustersResultLabelInput` via:
//
//          GetClustersResultLabelArgs{...}
type GetClustersResultLabelInput interface {
	pulumi.Input

	ToGetClustersResultLabelOutput() GetClustersResultLabelOutput
	ToGetClustersResultLabelOutputWithContext(context.Context) GetClustersResultLabelOutput
}

type GetClustersResultLabelArgs struct {
	// The key that was set.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that represents the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClustersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return i.ToGetClustersResultLabelOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArgs) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelOutput)
}

// GetClustersResultLabelArrayInput is an input type that accepts GetClustersResultLabelArray and GetClustersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetClustersResultLabelArrayInput` via:
//
//          GetClustersResultLabelArray{ GetClustersResultLabelArgs{...} }
type GetClustersResultLabelArrayInput interface {
	pulumi.Input

	ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput
	ToGetClustersResultLabelArrayOutputWithContext(context.Context) GetClustersResultLabelArrayOutput
}

type GetClustersResultLabelArray []GetClustersResultLabelInput

func (GetClustersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return i.ToGetClustersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetClustersResultLabelArray) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultLabelArrayOutput)
}

type GetClustersResultLabelOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutput() GetClustersResultLabelOutput {
	return o
}

func (o GetClustersResultLabelOutput) ToGetClustersResultLabelOutputWithContext(ctx context.Context) GetClustersResultLabelOutput {
	return o
}

// The key that was set.
func (o GetClustersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that represents the key.
func (o GetClustersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetClustersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultLabel)(nil)).Elem()
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutput() GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) ToGetClustersResultLabelArrayOutputWithContext(ctx context.Context) GetClustersResultLabelArrayOutput {
	return o
}

func (o GetClustersResultLabelArrayOutput) Index(i pulumi.IntInput) GetClustersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultLabel {
		return vs[0].([]GetClustersResultLabel)[vs[1].(int)]
	}).(GetClustersResultLabelOutput)
}

type GetClustersResultReplicationSpec struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id string `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards int `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs []GetClustersResultReplicationSpecRegionsConfig `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName string `pulumi:"zoneName"`
}

// GetClustersResultReplicationSpecInput is an input type that accepts GetClustersResultReplicationSpecArgs and GetClustersResultReplicationSpecOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecInput` via:
//
//          GetClustersResultReplicationSpecArgs{...}
type GetClustersResultReplicationSpecInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput
	ToGetClustersResultReplicationSpecOutputWithContext(context.Context) GetClustersResultReplicationSpecOutput
}

type GetClustersResultReplicationSpecArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of shards to deploy in the specified zone.
	NumShards pulumi.IntInput `pulumi:"numShards"`
	// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
	RegionsConfigs GetClustersResultReplicationSpecRegionsConfigArrayInput `pulumi:"regionsConfigs"`
	// Indicates the n ame for the zone in a Global Cluster.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetClustersResultReplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return i.ToGetClustersResultReplicationSpecOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArgs) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecOutput)
}

// GetClustersResultReplicationSpecArrayInput is an input type that accepts GetClustersResultReplicationSpecArray and GetClustersResultReplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecArrayInput` via:
//
//          GetClustersResultReplicationSpecArray{ GetClustersResultReplicationSpecArgs{...} }
type GetClustersResultReplicationSpecArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput
	ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecArrayOutput
}

type GetClustersResultReplicationSpecArray []GetClustersResultReplicationSpecInput

func (GetClustersResultReplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return i.ToGetClustersResultReplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecArray) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecArrayOutput)
}

type GetClustersResultReplicationSpecOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutput() GetClustersResultReplicationSpecOutput {
	return o
}

func (o GetClustersResultReplicationSpecOutput) ToGetClustersResultReplicationSpecOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.Id }).(pulumi.StringOutput)
}

// Number of shards to deploy in the specified zone.
func (o GetClustersResultReplicationSpecOutput) NumShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) int { return v.NumShards }).(pulumi.IntOutput)
}

// Describes the physical location of the region. Each regionsConfig document describes the region’s priority in elections and the number and type of MongoDB nodes Atlas deploys to the region. You must order each regionsConfigs document by regionsConfig.priority, descending. See Region Config below for more details.
func (o GetClustersResultReplicationSpecOutput) RegionsConfigs() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) []GetClustersResultReplicationSpecRegionsConfig {
		return v.RegionsConfigs
	}).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

// Indicates the n ame for the zone in a Global Cluster.
func (o GetClustersResultReplicationSpecOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpec) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpec)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutput() GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) ToGetClustersResultReplicationSpecArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpec {
		return vs[0].([]GetClustersResultReplicationSpec)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecOutput)
}

type GetClustersResultReplicationSpecRegionsConfig struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes int `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes int `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority int `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes int `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName string `pulumi:"regionName"`
}

// GetClustersResultReplicationSpecRegionsConfigInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArgs and GetClustersResultReplicationSpecRegionsConfigOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigInput` via:
//
//          GetClustersResultReplicationSpecRegionsConfigArgs{...}
type GetClustersResultReplicationSpecRegionsConfigInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput
	ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigOutput
}

type GetClustersResultReplicationSpecRegionsConfigArgs struct {
	// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
	AnalyticsNodes pulumi.IntInput `pulumi:"analyticsNodes"`
	// Number of electable nodes for Atlas to deploy to the region.
	ElectableNodes pulumi.IntInput `pulumi:"electableNodes"`
	// Election priority of the region. For regions with only read-only nodes, set this value to 0.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
	ReadOnlyNodes pulumi.IntInput `pulumi:"readOnlyNodes"`
	// Name for the region specified.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetClustersResultReplicationSpecRegionsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArgs) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

// GetClustersResultReplicationSpecRegionsConfigArrayInput is an input type that accepts GetClustersResultReplicationSpecRegionsConfigArray and GetClustersResultReplicationSpecRegionsConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersResultReplicationSpecRegionsConfigArrayInput` via:
//
//          GetClustersResultReplicationSpecRegionsConfigArray{ GetClustersResultReplicationSpecRegionsConfigArgs{...} }
type GetClustersResultReplicationSpecRegionsConfigArrayInput interface {
	pulumi.Input

	ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput
	ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput
}

type GetClustersResultReplicationSpecRegionsConfigArray []GetClustersResultReplicationSpecRegionsConfigInput

func (GetClustersResultReplicationSpecRegionsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return i.ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersResultReplicationSpecRegionsConfigArray) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultReplicationSpecRegionsConfigArrayOutput)
}

type GetClustersResultReplicationSpecRegionsConfigOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutput() GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigOutput) ToGetClustersResultReplicationSpecRegionsConfigOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigOutput {
	return o
}

// Indicates the number of analytics nodes for Atlas to deploy to the region. Analytics nodes are useful for handling analytic data such as reporting queries from BI Connector for Atlas. Analytics nodes are read-only, and can never become the primary.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) AnalyticsNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.AnalyticsNodes }).(pulumi.IntOutput)
}

// Number of electable nodes for Atlas to deploy to the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ElectableNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ElectableNodes }).(pulumi.IntOutput)
}

// Election priority of the region. For regions with only read-only nodes, set this value to 0.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.Priority }).(pulumi.IntOutput)
}

// Number of read-only nodes for Atlas to deploy to the region. Read-only nodes can never become the primary, but can facilitate local-reads. Specify 0 if you do not want any read-only nodes in the region.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) ReadOnlyNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) int { return v.ReadOnlyNodes }).(pulumi.IntOutput)
}

// Name for the region specified.
func (o GetClustersResultReplicationSpecRegionsConfigOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultReplicationSpecRegionsConfig) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetClustersResultReplicationSpecRegionsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultReplicationSpecRegionsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultReplicationSpecRegionsConfig)(nil)).Elem()
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutput() GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) ToGetClustersResultReplicationSpecRegionsConfigArrayOutputWithContext(ctx context.Context) GetClustersResultReplicationSpecRegionsConfigArrayOutput {
	return o
}

func (o GetClustersResultReplicationSpecRegionsConfigArrayOutput) Index(i pulumi.IntInput) GetClustersResultReplicationSpecRegionsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultReplicationSpecRegionsConfig {
		return vs[0].([]GetClustersResultReplicationSpecRegionsConfig)[vs[1].(int)]
	}).(GetClustersResultReplicationSpecRegionsConfigOutput)
}

type GetClustersResultSnapshotBackupPolicy struct {
	ClusterId             string                                        `pulumi:"clusterId"`
	ClusterName           string                                        `pulumi:"clusterName"`
	NextSnapshot          string                                        `pulumi:"nextSnapshot"`
	Policies              []GetClustersResultSnapshotBackupPolicyPolicy `pulumi:"policies"`
	ReferenceHourOfDay    int                                           `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour int                                           `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     int                                           `pulumi:"restoreWindowDays"`
	UpdateSnapshots       bool                                          `pulumi:"updateSnapshots"`
}

// GetClustersResultSnapshotBackupPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArgs and GetClustersResultSnapshotBackupPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyInput` via:
//
//          GetClustersResultSnapshotBackupPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyArgs struct {
	ClusterId             pulumi.StringInput                                    `pulumi:"clusterId"`
	ClusterName           pulumi.StringInput                                    `pulumi:"clusterName"`
	NextSnapshot          pulumi.StringInput                                    `pulumi:"nextSnapshot"`
	Policies              GetClustersResultSnapshotBackupPolicyPolicyArrayInput `pulumi:"policies"`
	ReferenceHourOfDay    pulumi.IntInput                                       `pulumi:"referenceHourOfDay"`
	ReferenceMinuteOfHour pulumi.IntInput                                       `pulumi:"referenceMinuteOfHour"`
	RestoreWindowDays     pulumi.IntInput                                       `pulumi:"restoreWindowDays"`
	UpdateSnapshots       pulumi.BoolInput                                      `pulumi:"updateSnapshots"`
}

func (GetClustersResultSnapshotBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArgs) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyArray and GetClustersResultSnapshotBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyArray{ GetClustersResultSnapshotBackupPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyArray []GetClustersResultSnapshotBackupPolicyInput

func (GetClustersResultSnapshotBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyArray) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutput() GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ToGetClustersResultSnapshotBackupPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) NextSnapshot() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) string { return v.NextSnapshot }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) Policies() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) []GetClustersResultSnapshotBackupPolicyPolicy {
		return v.Policies
	}).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceHourOfDay() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceHourOfDay }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) ReferenceMinuteOfHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.ReferenceMinuteOfHour }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) RestoreWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) int { return v.RestoreWindowDays }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyOutput) UpdateSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicy) bool { return v.UpdateSnapshots }).(pulumi.BoolOutput)
}

type GetClustersResultSnapshotBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicy struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          string                                                  `pulumi:"id"`
	PolicyItems []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem `pulumi:"policyItems"`
}

// GetClustersResultSnapshotBackupPolicyPolicyInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArgs and GetClustersResultSnapshotBackupPolicyPolicyOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArgs struct {
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id          pulumi.StringInput                                              `pulumi:"id"`
	PolicyItems GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput `pulumi:"policyItems"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArgs) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyArray and GetClustersResultSnapshotBackupPolicyPolicyArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyArray{ GetClustersResultSnapshotBackupPolicyPolicyArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyArray []GetClustersResultSnapshotBackupPolicyPolicyInput

func (GetClustersResultSnapshotBackupPolicyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyArray) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutput() GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) ToGetClustersResultSnapshotBackupPolicyPolicyOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return o
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyOutput) PolicyItems() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicy) []GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return v.PolicyItems
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicy)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicy {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicy)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItem struct {
	FrequencyInterval int    `pulumi:"frequencyInterval"`
	FrequencyType     string `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             string `pulumi:"id"`
	RetentionUnit  string `pulumi:"retentionUnit"`
	RetentionValue int    `pulumi:"retentionValue"`
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...}
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs struct {
	FrequencyInterval pulumi.IntInput    `pulumi:"frequencyInterval"`
	FrequencyType     pulumi.StringInput `pulumi:"frequencyType"`
	// Unique identifer of the replication document for a zone in a Global Cluster.
	Id             pulumi.StringInput `pulumi:"id"`
	RetentionUnit  pulumi.StringInput `pulumi:"retentionUnit"`
	RetentionValue pulumi.IntInput    `pulumi:"retentionValue"`
}

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

// GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput is an input type that accepts GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray and GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput values.
// You can construct a concrete instance of `GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput` via:
//
//          GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{ GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{...} }
type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput interface {
	pulumi.Input

	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
	ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray []GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return i.ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(context.Background())
}

func (i GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) FrequencyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.FrequencyType }).(pulumi.StringOutput)
}

// Unique identifer of the replication document for a zone in a Global Cluster.
func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) string { return v.RetentionUnit }).(pulumi.StringOutput)
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput) RetentionValue() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResultSnapshotBackupPolicyPolicyPolicyItem) int { return v.RetentionValue }).(pulumi.IntOutput)
}

type GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput struct{ *pulumi.OutputState }

func (GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)(nil)).Elem()
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput() GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) ToGetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutputWithContext(ctx context.Context) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput {
	return o
}

func (o GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput) Index(i pulumi.IntInput) GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersResultSnapshotBackupPolicyPolicyPolicyItem {
		return vs[0].([]GetClustersResultSnapshotBackupPolicyPolicyPolicyItem)[vs[1].(int)]
	}).(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput)
}

type GetCustomDbRoleAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRoleActionResource `pulumi:"resources"`
}

// GetCustomDbRoleActionInput is an input type that accepts GetCustomDbRoleActionArgs and GetCustomDbRoleActionOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionInput` via:
//
//          GetCustomDbRoleActionArgs{...}
type GetCustomDbRoleActionInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput
	ToGetCustomDbRoleActionOutputWithContext(context.Context) GetCustomDbRoleActionOutput
}

type GetCustomDbRoleActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRoleActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRoleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return i.ToGetCustomDbRoleActionOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArgs) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionOutput)
}

// GetCustomDbRoleActionArrayInput is an input type that accepts GetCustomDbRoleActionArray and GetCustomDbRoleActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionArrayInput` via:
//
//          GetCustomDbRoleActionArray{ GetCustomDbRoleActionArgs{...} }
type GetCustomDbRoleActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput
	ToGetCustomDbRoleActionArrayOutputWithContext(context.Context) GetCustomDbRoleActionArrayOutput
}

type GetCustomDbRoleActionArray []GetCustomDbRoleActionInput

func (GetCustomDbRoleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return i.ToGetCustomDbRoleActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionArray) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionArrayOutput)
}

type GetCustomDbRoleActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutput() GetCustomDbRoleActionOutput {
	return o
}

func (o GetCustomDbRoleActionOutput) ToGetCustomDbRoleActionOutputWithContext(ctx context.Context) GetCustomDbRoleActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRoleActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRoleActionOutput) Resources() GetCustomDbRoleActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRoleAction) []GetCustomDbRoleActionResource { return v.Resources }).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleAction)(nil)).Elem()
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutput() GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) ToGetCustomDbRoleActionArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionArrayOutput {
	return o
}

func (o GetCustomDbRoleActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleAction {
		return vs[0].([]GetCustomDbRoleAction)[vs[1].(int)]
	}).(GetCustomDbRoleActionOutput)
}

type GetCustomDbRoleActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	DatabaseName   string `pulumi:"databaseName"`
}

// GetCustomDbRoleActionResourceInput is an input type that accepts GetCustomDbRoleActionResourceArgs and GetCustomDbRoleActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceInput` via:
//
//          GetCustomDbRoleActionResourceArgs{...}
type GetCustomDbRoleActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput
	ToGetCustomDbRoleActionResourceOutputWithContext(context.Context) GetCustomDbRoleActionResourceOutput
}

type GetCustomDbRoleActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	DatabaseName   pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRoleActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return i.ToGetCustomDbRoleActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArgs) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceOutput)
}

// GetCustomDbRoleActionResourceArrayInput is an input type that accepts GetCustomDbRoleActionResourceArray and GetCustomDbRoleActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleActionResourceArrayInput` via:
//
//          GetCustomDbRoleActionResourceArray{ GetCustomDbRoleActionResourceArgs{...} }
type GetCustomDbRoleActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput
	ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Context) GetCustomDbRoleActionResourceArrayOutput
}

type GetCustomDbRoleActionResourceArray []GetCustomDbRoleActionResourceInput

func (GetCustomDbRoleActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return i.ToGetCustomDbRoleActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleActionResourceArray) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleActionResourceArrayOutput)
}

type GetCustomDbRoleActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutput() GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) ToGetCustomDbRoleActionResourceOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceOutput {
	return o
}

func (o GetCustomDbRoleActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRoleActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

func (o GetCustomDbRoleActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRoleActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleActionResource)(nil)).Elem()
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutput() GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) ToGetCustomDbRoleActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRoleActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRoleActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleActionResource {
		return vs[0].([]GetCustomDbRoleActionResource)[vs[1].(int)]
	}).(GetCustomDbRoleActionResourceOutput)
}

type GetCustomDbRoleInheritedRole struct {
	DatabaseName string `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName string `pulumi:"roleName"`
}

// GetCustomDbRoleInheritedRoleInput is an input type that accepts GetCustomDbRoleInheritedRoleArgs and GetCustomDbRoleInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleInput` via:
//
//          GetCustomDbRoleInheritedRoleArgs{...}
type GetCustomDbRoleInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput
	ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleOutput
}

type GetCustomDbRoleInheritedRoleArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the custom role.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRoleInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return i.ToGetCustomDbRoleInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArgs) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleOutput)
}

// GetCustomDbRoleInheritedRoleArrayInput is an input type that accepts GetCustomDbRoleInheritedRoleArray and GetCustomDbRoleInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRoleInheritedRoleArrayInput` via:
//
//          GetCustomDbRoleInheritedRoleArray{ GetCustomDbRoleInheritedRoleArgs{...} }
type GetCustomDbRoleInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput
	ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRoleInheritedRoleArrayOutput
}

type GetCustomDbRoleInheritedRoleArray []GetCustomDbRoleInheritedRoleInput

func (GetCustomDbRoleInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return i.ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRoleInheritedRoleArray) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRoleInheritedRoleArrayOutput)
}

type GetCustomDbRoleInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutput() GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) ToGetCustomDbRoleInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Name of the custom role.
func (o GetCustomDbRoleInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRoleInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRoleInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRoleInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRoleInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutput() GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) ToGetCustomDbRoleInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRoleInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRoleInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRoleInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRoleInheritedRole {
		return vs[0].([]GetCustomDbRoleInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRoleInheritedRoleOutput)
}

type GetCustomDbRolesResult struct {
	Actions        []GetCustomDbRolesResultAction        `pulumi:"actions"`
	InheritedRoles []GetCustomDbRolesResultInheritedRole `pulumi:"inheritedRoles"`
	RoleName       string                                `pulumi:"roleName"`
}

// GetCustomDbRolesResultInput is an input type that accepts GetCustomDbRolesResultArgs and GetCustomDbRolesResultOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInput` via:
//
//          GetCustomDbRolesResultArgs{...}
type GetCustomDbRolesResultInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput
	ToGetCustomDbRolesResultOutputWithContext(context.Context) GetCustomDbRolesResultOutput
}

type GetCustomDbRolesResultArgs struct {
	Actions        GetCustomDbRolesResultActionArrayInput        `pulumi:"actions"`
	InheritedRoles GetCustomDbRolesResultInheritedRoleArrayInput `pulumi:"inheritedRoles"`
	RoleName       pulumi.StringInput                            `pulumi:"roleName"`
}

func (GetCustomDbRolesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return i.ToGetCustomDbRolesResultOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArgs) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultOutput)
}

// GetCustomDbRolesResultArrayInput is an input type that accepts GetCustomDbRolesResultArray and GetCustomDbRolesResultArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultArrayInput` via:
//
//          GetCustomDbRolesResultArray{ GetCustomDbRolesResultArgs{...} }
type GetCustomDbRolesResultArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput
	ToGetCustomDbRolesResultArrayOutputWithContext(context.Context) GetCustomDbRolesResultArrayOutput
}

type GetCustomDbRolesResultArray []GetCustomDbRolesResultInput

func (GetCustomDbRolesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return i.ToGetCustomDbRolesResultArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultArray) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultArrayOutput)
}

type GetCustomDbRolesResultOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutput() GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) ToGetCustomDbRolesResultOutputWithContext(ctx context.Context) GetCustomDbRolesResultOutput {
	return o
}

func (o GetCustomDbRolesResultOutput) Actions() GetCustomDbRolesResultActionArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultAction { return v.Actions }).(GetCustomDbRolesResultActionArrayOutput)
}

func (o GetCustomDbRolesResultOutput) InheritedRoles() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) []GetCustomDbRolesResultInheritedRole { return v.InheritedRoles }).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

func (o GetCustomDbRolesResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResult) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResult)(nil)).Elem()
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutput() GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) ToGetCustomDbRolesResultArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultArrayOutput {
	return o
}

func (o GetCustomDbRolesResultArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResult {
		return vs[0].([]GetCustomDbRolesResult)[vs[1].(int)]
	}).(GetCustomDbRolesResultOutput)
}

type GetCustomDbRolesResultAction struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action string `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources []GetCustomDbRolesResultActionResource `pulumi:"resources"`
}

// GetCustomDbRolesResultActionInput is an input type that accepts GetCustomDbRolesResultActionArgs and GetCustomDbRolesResultActionOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionInput` via:
//
//          GetCustomDbRolesResultActionArgs{...}
type GetCustomDbRolesResultActionInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput
	ToGetCustomDbRolesResultActionOutputWithContext(context.Context) GetCustomDbRolesResultActionOutput
}

type GetCustomDbRolesResultActionArgs struct {
	// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
	Resources GetCustomDbRolesResultActionResourceArrayInput `pulumi:"resources"`
}

func (GetCustomDbRolesResultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return i.ToGetCustomDbRolesResultActionOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArgs) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionOutput)
}

// GetCustomDbRolesResultActionArrayInput is an input type that accepts GetCustomDbRolesResultActionArray and GetCustomDbRolesResultActionArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionArrayInput` via:
//
//          GetCustomDbRolesResultActionArray{ GetCustomDbRolesResultActionArgs{...} }
type GetCustomDbRolesResultActionArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput
	ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionArrayOutput
}

type GetCustomDbRolesResultActionArray []GetCustomDbRolesResultActionInput

func (GetCustomDbRolesResultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return i.ToGetCustomDbRolesResultActionArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionArray) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionArrayOutput)
}

type GetCustomDbRolesResultActionOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutput() GetCustomDbRolesResultActionOutput {
	return o
}

func (o GetCustomDbRolesResultActionOutput) ToGetCustomDbRolesResultActionOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionOutput {
	return o
}

// (Required) Name of the privilege action. For a complete list of actions available in the Atlas API, see Custom Role Actions.
func (o GetCustomDbRolesResultActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) string { return v.Action }).(pulumi.StringOutput)
}

// (Required) Contains information on where the action is granted. Each object in the array either indicates a database and collection on which the action is granted, or indicates that the action is granted on the cluster resource.
func (o GetCustomDbRolesResultActionOutput) Resources() GetCustomDbRolesResultActionResourceArrayOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultAction) []GetCustomDbRolesResultActionResource { return v.Resources }).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultAction)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutput() GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) ToGetCustomDbRolesResultActionArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultAction {
		return vs[0].([]GetCustomDbRolesResultAction)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionOutput)
}

type GetCustomDbRolesResultActionResource struct {
	Cluster        bool   `pulumi:"cluster"`
	CollectionName string `pulumi:"collectionName"`
	DatabaseName   string `pulumi:"databaseName"`
}

// GetCustomDbRolesResultActionResourceInput is an input type that accepts GetCustomDbRolesResultActionResourceArgs and GetCustomDbRolesResultActionResourceOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceInput` via:
//
//          GetCustomDbRolesResultActionResourceArgs{...}
type GetCustomDbRolesResultActionResourceInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput
	ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceOutput
}

type GetCustomDbRolesResultActionResourceArgs struct {
	Cluster        pulumi.BoolInput   `pulumi:"cluster"`
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	DatabaseName   pulumi.StringInput `pulumi:"databaseName"`
}

func (GetCustomDbRolesResultActionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return i.ToGetCustomDbRolesResultActionResourceOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArgs) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceOutput)
}

// GetCustomDbRolesResultActionResourceArrayInput is an input type that accepts GetCustomDbRolesResultActionResourceArray and GetCustomDbRolesResultActionResourceArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultActionResourceArrayInput` via:
//
//          GetCustomDbRolesResultActionResourceArray{ GetCustomDbRolesResultActionResourceArgs{...} }
type GetCustomDbRolesResultActionResourceArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput
	ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Context) GetCustomDbRolesResultActionResourceArrayOutput
}

type GetCustomDbRolesResultActionResourceArray []GetCustomDbRolesResultActionResourceInput

func (GetCustomDbRolesResultActionResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return i.ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultActionResourceArray) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultActionResourceArrayOutput)
}

type GetCustomDbRolesResultActionResourceOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutput() GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) ToGetCustomDbRolesResultActionResourceOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceOutput) Cluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) bool { return v.Cluster }).(pulumi.BoolOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.CollectionName }).(pulumi.StringOutput)
}

func (o GetCustomDbRolesResultActionResourceOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultActionResource) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultActionResourceArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultActionResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultActionResource)(nil)).Elem()
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutput() GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) ToGetCustomDbRolesResultActionResourceArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultActionResourceArrayOutput {
	return o
}

func (o GetCustomDbRolesResultActionResourceArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultActionResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultActionResource {
		return vs[0].([]GetCustomDbRolesResultActionResource)[vs[1].(int)]
	}).(GetCustomDbRolesResultActionResourceOutput)
}

type GetCustomDbRolesResultInheritedRole struct {
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetCustomDbRolesResultInheritedRoleInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArgs and GetCustomDbRolesResultInheritedRoleOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleInput` via:
//
//          GetCustomDbRolesResultInheritedRoleArgs{...}
type GetCustomDbRolesResultInheritedRoleInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput
	ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleOutput
}

type GetCustomDbRolesResultInheritedRoleArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetCustomDbRolesResultInheritedRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArgs) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleOutput)
}

// GetCustomDbRolesResultInheritedRoleArrayInput is an input type that accepts GetCustomDbRolesResultInheritedRoleArray and GetCustomDbRolesResultInheritedRoleArrayOutput values.
// You can construct a concrete instance of `GetCustomDbRolesResultInheritedRoleArrayInput` via:
//
//          GetCustomDbRolesResultInheritedRoleArray{ GetCustomDbRolesResultInheritedRoleArgs{...} }
type GetCustomDbRolesResultInheritedRoleArrayInput interface {
	pulumi.Input

	ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput
	ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput
}

type GetCustomDbRolesResultInheritedRoleArray []GetCustomDbRolesResultInheritedRoleInput

func (GetCustomDbRolesResultInheritedRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return i.ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(context.Background())
}

func (i GetCustomDbRolesResultInheritedRoleArray) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDbRolesResultInheritedRoleArrayOutput)
}

type GetCustomDbRolesResultInheritedRoleOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutput() GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) ToGetCustomDbRolesResultInheritedRoleOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetCustomDbRolesResultInheritedRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomDbRolesResultInheritedRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetCustomDbRolesResultInheritedRoleArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDbRolesResultInheritedRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDbRolesResultInheritedRole)(nil)).Elem()
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutput() GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) ToGetCustomDbRolesResultInheritedRoleArrayOutputWithContext(ctx context.Context) GetCustomDbRolesResultInheritedRoleArrayOutput {
	return o
}

func (o GetCustomDbRolesResultInheritedRoleArrayOutput) Index(i pulumi.IntInput) GetCustomDbRolesResultInheritedRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDbRolesResultInheritedRole {
		return vs[0].([]GetCustomDbRolesResultInheritedRole)[vs[1].(int)]
	}).(GetCustomDbRolesResultInheritedRoleOutput)
}

type GetDataLakeAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakeAwInput is an input type that accepts GetDataLakeAwArgs and GetDataLakeAwOutput values.
// You can construct a concrete instance of `GetDataLakeAwInput` via:
//
//          GetDataLakeAwArgs{...}
type GetDataLakeAwInput interface {
	pulumi.Input

	ToGetDataLakeAwOutput() GetDataLakeAwOutput
	ToGetDataLakeAwOutputWithContext(context.Context) GetDataLakeAwOutput
}

type GetDataLakeAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakeAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return i.ToGetDataLakeAwOutputWithContext(context.Background())
}

func (i GetDataLakeAwArgs) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwOutput)
}

// GetDataLakeAwArrayInput is an input type that accepts GetDataLakeAwArray and GetDataLakeAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakeAwArrayInput` via:
//
//          GetDataLakeAwArray{ GetDataLakeAwArgs{...} }
type GetDataLakeAwArrayInput interface {
	pulumi.Input

	ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput
	ToGetDataLakeAwArrayOutputWithContext(context.Context) GetDataLakeAwArrayOutput
}

type GetDataLakeAwArray []GetDataLakeAwInput

func (GetDataLakeAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return i.ToGetDataLakeAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakeAwArray) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeAwArrayOutput)
}

type GetDataLakeAwOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutput() GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ToGetDataLakeAwOutputWithContext(ctx context.Context) GetDataLakeAwOutput {
	return o
}

func (o GetDataLakeAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakeAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakeAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeAw)(nil)).Elem()
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutput() GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) ToGetDataLakeAwArrayOutputWithContext(ctx context.Context) GetDataLakeAwArrayOutput {
	return o
}

func (o GetDataLakeAwArrayOutput) Index(i pulumi.IntInput) GetDataLakeAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeAw {
		return vs[0].([]GetDataLakeAw)[vs[1].(int)]
	}).(GetDataLakeAwOutput)
}

type GetDataLakeDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakeDataProcessRegionInput is an input type that accepts GetDataLakeDataProcessRegionArgs and GetDataLakeDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionInput` via:
//
//          GetDataLakeDataProcessRegionArgs{...}
type GetDataLakeDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput
	ToGetDataLakeDataProcessRegionOutputWithContext(context.Context) GetDataLakeDataProcessRegionOutput
}

type GetDataLakeDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return i.ToGetDataLakeDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArgs) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionOutput)
}

// GetDataLakeDataProcessRegionArrayInput is an input type that accepts GetDataLakeDataProcessRegionArray and GetDataLakeDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeDataProcessRegionArrayInput` via:
//
//          GetDataLakeDataProcessRegionArray{ GetDataLakeDataProcessRegionArgs{...} }
type GetDataLakeDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput
	ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakeDataProcessRegionArrayOutput
}

type GetDataLakeDataProcessRegionArray []GetDataLakeDataProcessRegionInput

func (GetDataLakeDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return i.ToGetDataLakeDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeDataProcessRegionArray) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeDataProcessRegionArrayOutput)
}

type GetDataLakeDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutput() GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) ToGetDataLakeDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionOutput {
	return o
}

func (o GetDataLakeDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakeDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutput() GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) ToGetDataLakeDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakeDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakeDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakeDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeDataProcessRegion {
		return vs[0].([]GetDataLakeDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakeDataProcessRegionOutput)
}

type GetDataLakeStorageDatabase struct {
	Collections            []GetDataLakeStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                    `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  string                           `pulumi:"name"`
	Views []GetDataLakeStorageDatabaseView `pulumi:"views"`
}

// GetDataLakeStorageDatabaseInput is an input type that accepts GetDataLakeStorageDatabaseArgs and GetDataLakeStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseInput` via:
//
//          GetDataLakeStorageDatabaseArgs{...}
type GetDataLakeStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput
	ToGetDataLakeStorageDatabaseOutputWithContext(context.Context) GetDataLakeStorageDatabaseOutput
}

type GetDataLakeStorageDatabaseArgs struct {
	Collections            GetDataLakeStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                `pulumi:"maxWildcardCollections"`
	// Name of the data lake.
	Name  pulumi.StringInput                       `pulumi:"name"`
	Views GetDataLakeStorageDatabaseViewArrayInput `pulumi:"views"`
}

func (GetDataLakeStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return i.ToGetDataLakeStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArgs) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseOutput)
}

// GetDataLakeStorageDatabaseArrayInput is an input type that accepts GetDataLakeStorageDatabaseArray and GetDataLakeStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseArrayInput` via:
//
//          GetDataLakeStorageDatabaseArray{ GetDataLakeStorageDatabaseArgs{...} }
type GetDataLakeStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput
	ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseArrayOutput
}

type GetDataLakeStorageDatabaseArray []GetDataLakeStorageDatabaseInput

func (GetDataLakeStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return i.ToGetDataLakeStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseArray) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseArrayOutput)
}

type GetDataLakeStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutput() GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) ToGetDataLakeStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseOutput {
	return o
}

func (o GetDataLakeStorageDatabaseOutput) Collections() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseCollection { return v.Collections }).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakeStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseOutput) Views() GetDataLakeStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabase) []GetDataLakeStorageDatabaseView { return v.Views }).(GetDataLakeStorageDatabaseViewArrayOutput)
}

type GetDataLakeStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabase)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutput() GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) ToGetDataLakeStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabase {
		return vs[0].([]GetDataLakeStorageDatabase)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseOutput)
}

type GetDataLakeStorageDatabaseCollection struct {
	DataSources []GetDataLakeStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	// Name of the data lake.
	Name string `pulumi:"name"`
}

// GetDataLakeStorageDatabaseCollectionInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArgs and GetDataLakeStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionInput` via:
//
//          GetDataLakeStorageDatabaseCollectionArgs{...}
type GetDataLakeStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput
	ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionOutput
}

type GetDataLakeStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakeStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	// Name of the data lake.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDataLakeStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArgs) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionOutput)
}

// GetDataLakeStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionArray and GetDataLakeStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionArrayInput` via:
//
//          GetDataLakeStorageDatabaseCollectionArray{ GetDataLakeStorageDatabaseCollectionArgs{...} }
type GetDataLakeStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput
	ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput
}

type GetDataLakeStorageDatabaseCollectionArray []GetDataLakeStorageDatabaseCollectionInput

func (GetDataLakeStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionArray) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionArrayOutput)
}

type GetDataLakeStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutput() GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) ToGetDataLakeStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionOutput) DataSources() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) []GetDataLakeStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutput() GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) ToGetDataLakeStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollection {
		return vs[0].([]GetDataLakeStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakeStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArgs and GetDataLakeStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceInput` via:
//
//          GetDataLakeStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakeStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakeStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArgs) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

// GetDataLakeStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakeStorageDatabaseCollectionDataSourceArray and GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseCollectionDataSourceArrayInput` via:
//
//          GetDataLakeStorageDatabaseCollectionDataSourceArray{ GetDataLakeStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakeStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakeStorageDatabaseCollectionDataSourceArray []GetDataLakeStorageDatabaseCollectionDataSourceInput

func (GetDataLakeStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseCollectionDataSourceArray) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutput() GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakeStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakeStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakeStorageDatabaseView struct {
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakeStorageDatabaseViewInput is an input type that accepts GetDataLakeStorageDatabaseViewArgs and GetDataLakeStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewInput` via:
//
//          GetDataLakeStorageDatabaseViewArgs{...}
type GetDataLakeStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput
	ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewOutput
}

type GetDataLakeStorageDatabaseViewArgs struct {
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakeStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return i.ToGetDataLakeStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArgs) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewOutput)
}

// GetDataLakeStorageDatabaseViewArrayInput is an input type that accepts GetDataLakeStorageDatabaseViewArray and GetDataLakeStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageDatabaseViewArrayInput` via:
//
//          GetDataLakeStorageDatabaseViewArray{ GetDataLakeStorageDatabaseViewArgs{...} }
type GetDataLakeStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput
	ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakeStorageDatabaseViewArrayOutput
}

type GetDataLakeStorageDatabaseViewArray []GetDataLakeStorageDatabaseViewInput

func (GetDataLakeStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageDatabaseViewArray) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageDatabaseViewArrayOutput)
}

type GetDataLakeStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutput() GetDataLakeStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewOutput) ToGetDataLakeStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewOutput {
	return o
}

// Name of the data lake.
func (o GetDataLakeStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakeStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutput() GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) ToGetDataLakeStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakeStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakeStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageDatabaseView {
		return vs[0].([]GetDataLakeStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakeStorageDatabaseViewOutput)
}

type GetDataLakeStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	// Name of the data lake.
	Name     string `pulumi:"name"`
	Prefix   string `pulumi:"prefix"`
	Provider string `pulumi:"provider"`
	Region   string `pulumi:"region"`
}

// GetDataLakeStorageStoreInput is an input type that accepts GetDataLakeStorageStoreArgs and GetDataLakeStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreInput` via:
//
//          GetDataLakeStorageStoreArgs{...}
type GetDataLakeStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput
	ToGetDataLakeStorageStoreOutputWithContext(context.Context) GetDataLakeStorageStoreOutput
}

type GetDataLakeStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	// Name of the data lake.
	Name     pulumi.StringInput `pulumi:"name"`
	Prefix   pulumi.StringInput `pulumi:"prefix"`
	Provider pulumi.StringInput `pulumi:"provider"`
	Region   pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakeStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return i.ToGetDataLakeStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArgs) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreOutput)
}

// GetDataLakeStorageStoreArrayInput is an input type that accepts GetDataLakeStorageStoreArray and GetDataLakeStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakeStorageStoreArrayInput` via:
//
//          GetDataLakeStorageStoreArray{ GetDataLakeStorageStoreArgs{...} }
type GetDataLakeStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput
	ToGetDataLakeStorageStoreArrayOutputWithContext(context.Context) GetDataLakeStorageStoreArrayOutput
}

type GetDataLakeStorageStoreArray []GetDataLakeStorageStoreInput

func (GetDataLakeStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return i.ToGetDataLakeStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakeStorageStoreArray) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakeStorageStoreArrayOutput)
}

type GetDataLakeStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutput() GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) ToGetDataLakeStorageStoreOutputWithContext(ctx context.Context) GetDataLakeStorageStoreOutput {
	return o
}

func (o GetDataLakeStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakeStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

// Name of the data lake.
func (o GetDataLakeStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakeStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakeStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakeStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakeStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakeStorageStore)(nil)).Elem()
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutput() GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) ToGetDataLakeStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakeStorageStoreArrayOutput {
	return o
}

func (o GetDataLakeStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakeStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakeStorageStore {
		return vs[0].([]GetDataLakeStorageStore)[vs[1].(int)]
	}).(GetDataLakeStorageStoreOutput)
}

type GetDataLakesResult struct {
	Aws []GetDataLakesResultAw `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions []GetDataLakesResultDataProcessRegion `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames []string `pulumi:"hostnames"`
	Name      string   `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId string `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State string `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases []GetDataLakesResultStorageDatabase `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores []GetDataLakesResultStorageStore `pulumi:"storageStores"`
}

// GetDataLakesResultInput is an input type that accepts GetDataLakesResultArgs and GetDataLakesResultOutput values.
// You can construct a concrete instance of `GetDataLakesResultInput` via:
//
//          GetDataLakesResultArgs{...}
type GetDataLakesResultInput interface {
	pulumi.Input

	ToGetDataLakesResultOutput() GetDataLakesResultOutput
	ToGetDataLakesResultOutputWithContext(context.Context) GetDataLakesResultOutput
}

type GetDataLakesResultArgs struct {
	Aws GetDataLakesResultAwArrayInput `pulumi:"aws"`
	// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
	// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
	// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
	DataProcessRegions GetDataLakesResultDataProcessRegionArrayInput `pulumi:"dataProcessRegions"`
	// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
	Hostnames pulumi.StringArrayInput `pulumi:"hostnames"`
	Name      pulumi.StringInput      `pulumi:"name"`
	// The unique ID for the project to get all data lakes.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Current state of the Atlas Data Lake:
	State pulumi.StringInput `pulumi:"state"`
	// Configuration details for mapping each data store to queryable databases and collections.
	// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
	// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
	// * `storage_databases.#.collections.#.name` - Name of the collection.
	// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
	// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
	// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
	// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
	// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
	// * `storage_databases.#.views.#.name` - Name of the view.
	// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
	// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
	StorageDatabases GetDataLakesResultStorageDatabaseArrayInput `pulumi:"storageDatabases"`
	// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
	// * `storage_stores.#.name` - Name of the data store.
	// * `storage_stores.#.provider` - Defines where the data is stored.
	// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
	// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
	// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
	// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
	// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
	StorageStores GetDataLakesResultStorageStoreArrayInput `pulumi:"storageStores"`
}

func (GetDataLakesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return i.ToGetDataLakesResultOutputWithContext(context.Background())
}

func (i GetDataLakesResultArgs) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultOutput)
}

// GetDataLakesResultArrayInput is an input type that accepts GetDataLakesResultArray and GetDataLakesResultArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultArrayInput` via:
//
//          GetDataLakesResultArray{ GetDataLakesResultArgs{...} }
type GetDataLakesResultArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput
	ToGetDataLakesResultArrayOutputWithContext(context.Context) GetDataLakesResultArrayOutput
}

type GetDataLakesResultArray []GetDataLakesResultInput

func (GetDataLakesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return i.ToGetDataLakesResultArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultArray) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultArrayOutput)
}

type GetDataLakesResultOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutput() GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) ToGetDataLakesResultOutputWithContext(ctx context.Context) GetDataLakesResultOutput {
	return o
}

func (o GetDataLakesResultOutput) Aws() GetDataLakesResultAwArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultAw { return v.Aws }).(GetDataLakesResultAwArrayOutput)
}

// The cloud provider region to which Atlas Data Lake routes client connections for data processing.
// * `data_process_region.0.cloud_provider` - Name of the cloud service provider.
// * `data_process_region.0.region` -Name of the region to which Data Lake routes client connections for data processing.
func (o GetDataLakesResultOutput) DataProcessRegions() GetDataLakesResultDataProcessRegionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultDataProcessRegion { return v.DataProcessRegions }).(GetDataLakesResultDataProcessRegionArrayOutput)
}

// The list of hostnames assigned to the Atlas Data Lake. Each string in the array is a hostname assigned to the Atlas Data Lake.
func (o GetDataLakesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique ID for the project to get all data lakes.
func (o GetDataLakesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Current state of the Atlas Data Lake:
func (o GetDataLakesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResult) string { return v.State }).(pulumi.StringOutput)
}

// Configuration details for mapping each data store to queryable databases and collections.
// * `storage_databases.#.name` - Name of the database to which Data Lake maps the data contained in the data store.
// * `storage_databases.#.collections` -     Array of objects where each object represents a collection and data sources that map to a [stores](https://docs.mongodb.com/datalake/reference/format/data-lake-configuration#mongodb-datalakeconf-datalakeconf.stores) data store.
// * `storage_databases.#.collections.#.name` - Name of the collection.
// * `storage_databases.#.collections.#.data_sources` -     Array of objects where each object represents a stores data store to map with the collection.
// * `storage_databases.#.collections.#.data_sources.#.store_name` -     Name of a data store to map to the `<collection>`.
// * `storage_databases.#.collections.#.data_sources.#.default_format` - Default format that Data Lake assumes if it encounters a file without an extension while searching the storeName.
// * `storage_databases.#.collections.#.data_sources.#.path` - Controls how Atlas Data Lake searches for and parses files in the storeName before mapping them to the `<collection>`.
// * `storage_databases.#.views` -     Array of objects where each object represents an [aggregation pipeline](https://docs.mongodb.com/manual/core/aggregation-pipeline/#id1) on a collection.
// * `storage_databases.#.views.#.name` - Name of the view.
// * `storage_databases.#.views.#.source` -  Name of the source collection for the view.
// * `storage_databases.#.views.#.pipeline`- Aggregation pipeline stage(s) to apply to the source collection.
func (o GetDataLakesResultOutput) StorageDatabases() GetDataLakesResultStorageDatabaseArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageDatabase { return v.StorageDatabases }).(GetDataLakesResultStorageDatabaseArrayOutput)
}

// Each object in the array represents a data store. Data Lake uses the storage.databases configuration details to map data in each data store to queryable databases and collections.
// * `storage_stores.#.name` - Name of the data store.
// * `storage_stores.#.provider` - Defines where the data is stored.
// * `storage_stores.#.region` - Name of the AWS region in which the S3 bucket is hosted.
// * `storage_stores.#.bucket` - Name of the AWS S3 bucket.
// * `storage_stores.#.prefix` - Prefix Data Lake applies when searching for files in the S3 bucket .
// * `storage_stores.#.delimiter` - The delimiter that separates `storage_databases.#.collections.#.data_sources.#.path` segments in the data store.
// * `storage_stores.#.include_tags` - Determines whether or not to use S3 tags on the files in the given path as additional partition attributes.
func (o GetDataLakesResultOutput) StorageStores() GetDataLakesResultStorageStoreArrayOutput {
	return o.ApplyT(func(v GetDataLakesResult) []GetDataLakesResultStorageStore { return v.StorageStores }).(GetDataLakesResultStorageStoreArrayOutput)
}

type GetDataLakesResultArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResult)(nil)).Elem()
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutput() GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) ToGetDataLakesResultArrayOutputWithContext(ctx context.Context) GetDataLakesResultArrayOutput {
	return o
}

func (o GetDataLakesResultArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResult {
		return vs[0].([]GetDataLakesResult)[vs[1].(int)]
	}).(GetDataLakesResultOutput)
}

type GetDataLakesResultAw struct {
	ExternalId        string `pulumi:"externalId"`
	IamAssumedRoleArn string `pulumi:"iamAssumedRoleArn"`
	IamUserArn        string `pulumi:"iamUserArn"`
	RoleId            string `pulumi:"roleId"`
	TestS3Bucket      string `pulumi:"testS3Bucket"`
}

// GetDataLakesResultAwInput is an input type that accepts GetDataLakesResultAwArgs and GetDataLakesResultAwOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwInput` via:
//
//          GetDataLakesResultAwArgs{...}
type GetDataLakesResultAwInput interface {
	pulumi.Input

	ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput
	ToGetDataLakesResultAwOutputWithContext(context.Context) GetDataLakesResultAwOutput
}

type GetDataLakesResultAwArgs struct {
	ExternalId        pulumi.StringInput `pulumi:"externalId"`
	IamAssumedRoleArn pulumi.StringInput `pulumi:"iamAssumedRoleArn"`
	IamUserArn        pulumi.StringInput `pulumi:"iamUserArn"`
	RoleId            pulumi.StringInput `pulumi:"roleId"`
	TestS3Bucket      pulumi.StringInput `pulumi:"testS3Bucket"`
}

func (GetDataLakesResultAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return i.ToGetDataLakesResultAwOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArgs) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwOutput)
}

// GetDataLakesResultAwArrayInput is an input type that accepts GetDataLakesResultAwArray and GetDataLakesResultAwArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultAwArrayInput` via:
//
//          GetDataLakesResultAwArray{ GetDataLakesResultAwArgs{...} }
type GetDataLakesResultAwArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput
	ToGetDataLakesResultAwArrayOutputWithContext(context.Context) GetDataLakesResultAwArrayOutput
}

type GetDataLakesResultAwArray []GetDataLakesResultAwInput

func (GetDataLakesResultAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return i.ToGetDataLakesResultAwArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultAwArray) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultAwArrayOutput)
}

type GetDataLakesResultAwOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutput() GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ToGetDataLakesResultAwOutputWithContext(ctx context.Context) GetDataLakesResultAwOutput {
	return o
}

func (o GetDataLakesResultAwOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamAssumedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamAssumedRoleArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) IamUserArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.IamUserArn }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetDataLakesResultAwOutput) TestS3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultAw) string { return v.TestS3Bucket }).(pulumi.StringOutput)
}

type GetDataLakesResultAwArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultAw)(nil)).Elem()
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutput() GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) ToGetDataLakesResultAwArrayOutputWithContext(ctx context.Context) GetDataLakesResultAwArrayOutput {
	return o
}

func (o GetDataLakesResultAwArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultAw {
		return vs[0].([]GetDataLakesResultAw)[vs[1].(int)]
	}).(GetDataLakesResultAwOutput)
}

type GetDataLakesResultDataProcessRegion struct {
	CloudProvider string `pulumi:"cloudProvider"`
	Region        string `pulumi:"region"`
}

// GetDataLakesResultDataProcessRegionInput is an input type that accepts GetDataLakesResultDataProcessRegionArgs and GetDataLakesResultDataProcessRegionOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionInput` via:
//
//          GetDataLakesResultDataProcessRegionArgs{...}
type GetDataLakesResultDataProcessRegionInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput
	ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionOutput
}

type GetDataLakesResultDataProcessRegionArgs struct {
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	Region        pulumi.StringInput `pulumi:"region"`
}

func (GetDataLakesResultDataProcessRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return i.ToGetDataLakesResultDataProcessRegionOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArgs) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionOutput)
}

// GetDataLakesResultDataProcessRegionArrayInput is an input type that accepts GetDataLakesResultDataProcessRegionArray and GetDataLakesResultDataProcessRegionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultDataProcessRegionArrayInput` via:
//
//          GetDataLakesResultDataProcessRegionArray{ GetDataLakesResultDataProcessRegionArgs{...} }
type GetDataLakesResultDataProcessRegionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput
	ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Context) GetDataLakesResultDataProcessRegionArrayOutput
}

type GetDataLakesResultDataProcessRegionArray []GetDataLakesResultDataProcessRegionInput

func (GetDataLakesResultDataProcessRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return i.ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultDataProcessRegionArray) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultDataProcessRegionArrayOutput)
}

type GetDataLakesResultDataProcessRegionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutput() GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) ToGetDataLakesResultDataProcessRegionOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultDataProcessRegionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultDataProcessRegion) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultDataProcessRegionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultDataProcessRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultDataProcessRegion)(nil)).Elem()
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutput() GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) ToGetDataLakesResultDataProcessRegionArrayOutputWithContext(ctx context.Context) GetDataLakesResultDataProcessRegionArrayOutput {
	return o
}

func (o GetDataLakesResultDataProcessRegionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultDataProcessRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultDataProcessRegion {
		return vs[0].([]GetDataLakesResultDataProcessRegion)[vs[1].(int)]
	}).(GetDataLakesResultDataProcessRegionOutput)
}

type GetDataLakesResultStorageDatabase struct {
	Collections            []GetDataLakesResultStorageDatabaseCollection `pulumi:"collections"`
	MaxWildcardCollections int                                           `pulumi:"maxWildcardCollections"`
	Name                   string                                        `pulumi:"name"`
	Views                  []GetDataLakesResultStorageDatabaseView       `pulumi:"views"`
}

// GetDataLakesResultStorageDatabaseInput is an input type that accepts GetDataLakesResultStorageDatabaseArgs and GetDataLakesResultStorageDatabaseOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseInput` via:
//
//          GetDataLakesResultStorageDatabaseArgs{...}
type GetDataLakesResultStorageDatabaseInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput
	ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseOutput
}

type GetDataLakesResultStorageDatabaseArgs struct {
	Collections            GetDataLakesResultStorageDatabaseCollectionArrayInput `pulumi:"collections"`
	MaxWildcardCollections pulumi.IntInput                                       `pulumi:"maxWildcardCollections"`
	Name                   pulumi.StringInput                                    `pulumi:"name"`
	Views                  GetDataLakesResultStorageDatabaseViewArrayInput       `pulumi:"views"`
}

func (GetDataLakesResultStorageDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return i.ToGetDataLakesResultStorageDatabaseOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArgs) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseOutput)
}

// GetDataLakesResultStorageDatabaseArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseArray and GetDataLakesResultStorageDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseArrayInput` via:
//
//          GetDataLakesResultStorageDatabaseArray{ GetDataLakesResultStorageDatabaseArgs{...} }
type GetDataLakesResultStorageDatabaseArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput
	ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseArrayOutput
}

type GetDataLakesResultStorageDatabaseArray []GetDataLakesResultStorageDatabaseInput

func (GetDataLakesResultStorageDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseArray) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseArrayOutput)
}

type GetDataLakesResultStorageDatabaseOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutput() GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) ToGetDataLakesResultStorageDatabaseOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseOutput) Collections() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseCollection {
		return v.Collections
	}).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) MaxWildcardCollections() pulumi.IntOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) int { return v.MaxWildcardCollections }).(pulumi.IntOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseOutput) Views() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabase) []GetDataLakesResultStorageDatabaseView { return v.Views }).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

type GetDataLakesResultStorageDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabase)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutput() GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) ToGetDataLakesResultStorageDatabaseArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabase {
		return vs[0].([]GetDataLakesResultStorageDatabase)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseOutput)
}

type GetDataLakesResultStorageDatabaseCollection struct {
	DataSources []GetDataLakesResultStorageDatabaseCollectionDataSource `pulumi:"dataSources"`
	Name        string                                                  `pulumi:"name"`
}

// GetDataLakesResultStorageDatabaseCollectionInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArgs and GetDataLakesResultStorageDatabaseCollectionOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionInput` via:
//
//          GetDataLakesResultStorageDatabaseCollectionArgs{...}
type GetDataLakesResultStorageDatabaseCollectionInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput
	ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionOutput
}

type GetDataLakesResultStorageDatabaseCollectionArgs struct {
	DataSources GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput `pulumi:"dataSources"`
	Name        pulumi.StringInput                                              `pulumi:"name"`
}

func (GetDataLakesResultStorageDatabaseCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArgs) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

// GetDataLakesResultStorageDatabaseCollectionArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionArray and GetDataLakesResultStorageDatabaseCollectionArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionArrayInput` via:
//
//          GetDataLakesResultStorageDatabaseCollectionArray{ GetDataLakesResultStorageDatabaseCollectionArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionArray []GetDataLakesResultStorageDatabaseCollectionInput

func (GetDataLakesResultStorageDatabaseCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionArray) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionArrayOutput)
}

type GetDataLakesResultStorageDatabaseCollectionOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutput() GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) ToGetDataLakesResultStorageDatabaseCollectionOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) DataSources() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) []GetDataLakesResultStorageDatabaseCollectionDataSource {
		return v.DataSources
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollection) string { return v.Name }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollection)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutput() GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollection {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollection)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSource struct {
	DefaultFormat string `pulumi:"defaultFormat"`
	Path          string `pulumi:"path"`
	StoreName     string `pulumi:"storeName"`
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArgs and GetDataLakesResultStorageDatabaseCollectionDataSourceOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceInput` via:
//
//          GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...}
type GetDataLakesResultStorageDatabaseCollectionDataSourceInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArgs struct {
	DefaultFormat pulumi.StringInput `pulumi:"defaultFormat"`
	Path          pulumi.StringInput `pulumi:"path"`
	StoreName     pulumi.StringInput `pulumi:"storeName"`
}

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArgs) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

// GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseCollectionDataSourceArray and GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput` via:
//
//          GetDataLakesResultStorageDatabaseCollectionDataSourceArray{ GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{...} }
type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
	ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArray []GetDataLakesResultStorageDatabaseCollectionDataSourceInput

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseCollectionDataSourceArray) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) DefaultFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.DefaultFormat }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseCollectionDataSource) string { return v.StoreName }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseCollectionDataSource)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput() GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) ToGetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseCollectionDataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseCollectionDataSource {
		return vs[0].([]GetDataLakesResultStorageDatabaseCollectionDataSource)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput)
}

type GetDataLakesResultStorageDatabaseView struct {
	Name     string `pulumi:"name"`
	Pipeline string `pulumi:"pipeline"`
	Source   string `pulumi:"source"`
}

// GetDataLakesResultStorageDatabaseViewInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArgs and GetDataLakesResultStorageDatabaseViewOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewInput` via:
//
//          GetDataLakesResultStorageDatabaseViewArgs{...}
type GetDataLakesResultStorageDatabaseViewInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput
	ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewOutput
}

type GetDataLakesResultStorageDatabaseViewArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Pipeline pulumi.StringInput `pulumi:"pipeline"`
	Source   pulumi.StringInput `pulumi:"source"`
}

func (GetDataLakesResultStorageDatabaseViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArgs) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewOutput)
}

// GetDataLakesResultStorageDatabaseViewArrayInput is an input type that accepts GetDataLakesResultStorageDatabaseViewArray and GetDataLakesResultStorageDatabaseViewArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageDatabaseViewArrayInput` via:
//
//          GetDataLakesResultStorageDatabaseViewArray{ GetDataLakesResultStorageDatabaseViewArgs{...} }
type GetDataLakesResultStorageDatabaseViewArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput
	ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput
}

type GetDataLakesResultStorageDatabaseViewArray []GetDataLakesResultStorageDatabaseViewInput

func (GetDataLakesResultStorageDatabaseViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return i.ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageDatabaseViewArray) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageDatabaseViewArrayOutput)
}

type GetDataLakesResultStorageDatabaseViewOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutput() GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) ToGetDataLakesResultStorageDatabaseViewOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Pipeline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Pipeline }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageDatabaseViewOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageDatabaseView) string { return v.Source }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageDatabaseViewArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageDatabaseViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageDatabaseView)(nil)).Elem()
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutput() GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) ToGetDataLakesResultStorageDatabaseViewArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageDatabaseViewArrayOutput {
	return o
}

func (o GetDataLakesResultStorageDatabaseViewArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageDatabaseViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageDatabaseView {
		return vs[0].([]GetDataLakesResultStorageDatabaseView)[vs[1].(int)]
	}).(GetDataLakesResultStorageDatabaseViewOutput)
}

type GetDataLakesResultStorageStore struct {
	AdditionalStorageClasses []string `pulumi:"additionalStorageClasses"`
	Bucket                   string   `pulumi:"bucket"`
	Delimiter                string   `pulumi:"delimiter"`
	IncludeTags              bool     `pulumi:"includeTags"`
	Name                     string   `pulumi:"name"`
	Prefix                   string   `pulumi:"prefix"`
	Provider                 string   `pulumi:"provider"`
	Region                   string   `pulumi:"region"`
}

// GetDataLakesResultStorageStoreInput is an input type that accepts GetDataLakesResultStorageStoreArgs and GetDataLakesResultStorageStoreOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreInput` via:
//
//          GetDataLakesResultStorageStoreArgs{...}
type GetDataLakesResultStorageStoreInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput
	ToGetDataLakesResultStorageStoreOutputWithContext(context.Context) GetDataLakesResultStorageStoreOutput
}

type GetDataLakesResultStorageStoreArgs struct {
	AdditionalStorageClasses pulumi.StringArrayInput `pulumi:"additionalStorageClasses"`
	Bucket                   pulumi.StringInput      `pulumi:"bucket"`
	Delimiter                pulumi.StringInput      `pulumi:"delimiter"`
	IncludeTags              pulumi.BoolInput        `pulumi:"includeTags"`
	Name                     pulumi.StringInput      `pulumi:"name"`
	Prefix                   pulumi.StringInput      `pulumi:"prefix"`
	Provider                 pulumi.StringInput      `pulumi:"provider"`
	Region                   pulumi.StringInput      `pulumi:"region"`
}

func (GetDataLakesResultStorageStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return i.ToGetDataLakesResultStorageStoreOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArgs) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreOutput)
}

// GetDataLakesResultStorageStoreArrayInput is an input type that accepts GetDataLakesResultStorageStoreArray and GetDataLakesResultStorageStoreArrayOutput values.
// You can construct a concrete instance of `GetDataLakesResultStorageStoreArrayInput` via:
//
//          GetDataLakesResultStorageStoreArray{ GetDataLakesResultStorageStoreArgs{...} }
type GetDataLakesResultStorageStoreArrayInput interface {
	pulumi.Input

	ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput
	ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Context) GetDataLakesResultStorageStoreArrayOutput
}

type GetDataLakesResultStorageStoreArray []GetDataLakesResultStorageStoreInput

func (GetDataLakesResultStorageStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return i.ToGetDataLakesResultStorageStoreArrayOutputWithContext(context.Background())
}

func (i GetDataLakesResultStorageStoreArray) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDataLakesResultStorageStoreArrayOutput)
}

type GetDataLakesResultStorageStoreOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutput() GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) ToGetDataLakesResultStorageStoreOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreOutput {
	return o
}

func (o GetDataLakesResultStorageStoreOutput) AdditionalStorageClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) []string { return v.AdditionalStorageClasses }).(pulumi.StringArrayOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetDataLakesResultStorageStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataLakesResultStorageStore) string { return v.Region }).(pulumi.StringOutput)
}

type GetDataLakesResultStorageStoreArrayOutput struct{ *pulumi.OutputState }

func (GetDataLakesResultStorageStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDataLakesResultStorageStore)(nil)).Elem()
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutput() GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) ToGetDataLakesResultStorageStoreArrayOutputWithContext(ctx context.Context) GetDataLakesResultStorageStoreArrayOutput {
	return o
}

func (o GetDataLakesResultStorageStoreArrayOutput) Index(i pulumi.IntInput) GetDataLakesResultStorageStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDataLakesResultStorageStore {
		return vs[0].([]GetDataLakesResultStorageStore)[vs[1].(int)]
	}).(GetDataLakesResultStorageStoreOutput)
}

type GetDatabaseUserLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUserLabelInput is an input type that accepts GetDatabaseUserLabelArgs and GetDatabaseUserLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelInput` via:
//
//          GetDatabaseUserLabelArgs{...}
type GetDatabaseUserLabelInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput
	ToGetDatabaseUserLabelOutputWithContext(context.Context) GetDatabaseUserLabelOutput
}

type GetDatabaseUserLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUserLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return i.ToGetDatabaseUserLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArgs) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelOutput)
}

// GetDatabaseUserLabelArrayInput is an input type that accepts GetDatabaseUserLabelArray and GetDatabaseUserLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserLabelArrayInput` via:
//
//          GetDatabaseUserLabelArray{ GetDatabaseUserLabelArgs{...} }
type GetDatabaseUserLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput
	ToGetDatabaseUserLabelArrayOutputWithContext(context.Context) GetDatabaseUserLabelArrayOutput
}

type GetDatabaseUserLabelArray []GetDatabaseUserLabelInput

func (GetDatabaseUserLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return i.ToGetDatabaseUserLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserLabelArray) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserLabelArrayOutput)
}

type GetDatabaseUserLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutput() GetDatabaseUserLabelOutput {
	return o
}

func (o GetDatabaseUserLabelOutput) ToGetDatabaseUserLabelOutputWithContext(ctx context.Context) GetDatabaseUserLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUserLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUserLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUserLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserLabel)(nil)).Elem()
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutput() GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) ToGetDatabaseUserLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUserLabelArrayOutput {
	return o
}

func (o GetDatabaseUserLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserLabel {
		return vs[0].([]GetDatabaseUserLabel)[vs[1].(int)]
	}).(GetDatabaseUserLabelOutput)
}

type GetDatabaseUserRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUserRoleInput is an input type that accepts GetDatabaseUserRoleArgs and GetDatabaseUserRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleInput` via:
//
//          GetDatabaseUserRoleArgs{...}
type GetDatabaseUserRoleInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput
	ToGetDatabaseUserRoleOutputWithContext(context.Context) GetDatabaseUserRoleOutput
}

type GetDatabaseUserRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return i.ToGetDatabaseUserRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArgs) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleOutput)
}

// GetDatabaseUserRoleArrayInput is an input type that accepts GetDatabaseUserRoleArray and GetDatabaseUserRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserRoleArrayInput` via:
//
//          GetDatabaseUserRoleArray{ GetDatabaseUserRoleArgs{...} }
type GetDatabaseUserRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput
	ToGetDatabaseUserRoleArrayOutputWithContext(context.Context) GetDatabaseUserRoleArrayOutput
}

type GetDatabaseUserRoleArray []GetDatabaseUserRoleInput

func (GetDatabaseUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return i.ToGetDatabaseUserRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserRoleArray) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserRoleArrayOutput)
}

type GetDatabaseUserRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutput() GetDatabaseUserRoleOutput {
	return o
}

func (o GetDatabaseUserRoleOutput) ToGetDatabaseUserRoleOutputWithContext(ctx context.Context) GetDatabaseUserRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUserRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUserRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUserRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserRole)(nil)).Elem()
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutput() GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) ToGetDatabaseUserRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUserRoleArrayOutput {
	return o
}

func (o GetDatabaseUserRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserRole {
		return vs[0].([]GetDatabaseUserRole)[vs[1].(int)]
	}).(GetDatabaseUserRoleOutput)
}

type GetDatabaseUserScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUserScopeInput is an input type that accepts GetDatabaseUserScopeArgs and GetDatabaseUserScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeInput` via:
//
//          GetDatabaseUserScopeArgs{...}
type GetDatabaseUserScopeInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput
	ToGetDatabaseUserScopeOutputWithContext(context.Context) GetDatabaseUserScopeOutput
}

type GetDatabaseUserScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUserScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return i.ToGetDatabaseUserScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArgs) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeOutput)
}

// GetDatabaseUserScopeArrayInput is an input type that accepts GetDatabaseUserScopeArray and GetDatabaseUserScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUserScopeArrayInput` via:
//
//          GetDatabaseUserScopeArray{ GetDatabaseUserScopeArgs{...} }
type GetDatabaseUserScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput
	ToGetDatabaseUserScopeArrayOutputWithContext(context.Context) GetDatabaseUserScopeArrayOutput
}

type GetDatabaseUserScopeArray []GetDatabaseUserScopeInput

func (GetDatabaseUserScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return i.ToGetDatabaseUserScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUserScopeArray) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUserScopeArrayOutput)
}

type GetDatabaseUserScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutput() GetDatabaseUserScopeOutput {
	return o
}

func (o GetDatabaseUserScopeOutput) ToGetDatabaseUserScopeOutputWithContext(ctx context.Context) GetDatabaseUserScopeOutput {
	return o
}

// Name of the role to grant.
func (o GetDatabaseUserScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUserScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUserScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUserScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUserScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUserScope)(nil)).Elem()
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutput() GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) ToGetDatabaseUserScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUserScopeArrayOutput {
	return o
}

func (o GetDatabaseUserScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUserScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUserScope {
		return vs[0].([]GetDatabaseUserScope)[vs[1].(int)]
	}).(GetDatabaseUserScopeOutput)
}

type GetDatabaseUsersResult struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	// * `admin` if `x509Type` and `awsIamType` and `ldapAuthType` are omitted or NONE.
	// * `$external` if:
	// * `x509Type` is MANAGED or CUSTOMER, or
	// * `awsIamType` is USER or ROLE.
	AuthDatabaseName string `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType string                        `pulumi:"awsIamType"`
	Labels     []GetDatabaseUsersResultLabel `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType string `pulumi:"ldapAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId string `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles []GetDatabaseUsersResultRole `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes []GetDatabaseUsersResultScope `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username string `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type string `pulumi:"x509Type"`
}

// GetDatabaseUsersResultInput is an input type that accepts GetDatabaseUsersResultArgs and GetDatabaseUsersResultOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultInput` via:
//
//          GetDatabaseUsersResultArgs{...}
type GetDatabaseUsersResultInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput
	ToGetDatabaseUsersResultOutputWithContext(context.Context) GetDatabaseUsersResultOutput
}

type GetDatabaseUsersResultArgs struct {
	// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
	// Possible values include:
	// * `admin` if `x509Type` and `awsIamType` and `ldapAuthType` are omitted or NONE.
	// * `$external` if:
	// * `x509Type` is MANAGED or CUSTOMER, or
	// * `awsIamType` is USER or ROLE.
	AuthDatabaseName pulumi.StringInput `pulumi:"authDatabaseName"`
	// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
	AwsIamType pulumi.StringInput                    `pulumi:"awsIamType"`
	Labels     GetDatabaseUsersResultLabelArrayInput `pulumi:"labels"`
	// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
	LdapAuthType pulumi.StringInput `pulumi:"ldapAuthType"`
	// The unique ID for the project to get all database users.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
	Roles GetDatabaseUsersResultRoleArrayInput `pulumi:"roles"`
	// Array of clusters and Atlas Data Lakes that this user has access to.
	Scopes GetDatabaseUsersResultScopeArrayInput `pulumi:"scopes"`
	// Username for authenticating to MongoDB.
	Username pulumi.StringInput `pulumi:"username"`
	// X.509 method by which the provided username is authenticated.
	X509Type pulumi.StringInput `pulumi:"x509Type"`
}

func (GetDatabaseUsersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return i.ToGetDatabaseUsersResultOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArgs) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultOutput)
}

// GetDatabaseUsersResultArrayInput is an input type that accepts GetDatabaseUsersResultArray and GetDatabaseUsersResultArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultArrayInput` via:
//
//          GetDatabaseUsersResultArray{ GetDatabaseUsersResultArgs{...} }
type GetDatabaseUsersResultArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput
	ToGetDatabaseUsersResultArrayOutputWithContext(context.Context) GetDatabaseUsersResultArrayOutput
}

type GetDatabaseUsersResultArray []GetDatabaseUsersResultInput

func (GetDatabaseUsersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return i.ToGetDatabaseUsersResultArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultArray) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultArrayOutput)
}

type GetDatabaseUsersResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutput() GetDatabaseUsersResultOutput {
	return o
}

func (o GetDatabaseUsersResultOutput) ToGetDatabaseUsersResultOutputWithContext(ctx context.Context) GetDatabaseUsersResultOutput {
	return o
}

// (Required) Database against which Atlas authenticates the user. A user must provide both a username and authentication database to log into MongoDB.
// Possible values include:
// * `admin` if `x509Type` and `awsIamType` and `ldapAuthType` are omitted or NONE.
// * `$external` if:
// * `x509Type` is MANAGED or CUSTOMER, or
// * `awsIamType` is USER or ROLE.
func (o GetDatabaseUsersResultOutput) AuthDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AuthDatabaseName }).(pulumi.StringOutput)
}

// The new database user authenticates with AWS IAM credentials. Default is `NONE`, `USER` means user has AWS IAM user credentials, `ROLE` - means user has credentials associated with an AWS IAM role.
func (o GetDatabaseUsersResultOutput) AwsIamType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.AwsIamType }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultOutput) Labels() GetDatabaseUsersResultLabelArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultLabel { return v.Labels }).(GetDatabaseUsersResultLabelArrayOutput)
}

// Method by which the provided username is authenticated. Default is `NONE`. Other valid values are: `USER`, `GROUP`.
func (o GetDatabaseUsersResultOutput) LdapAuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.LdapAuthType }).(pulumi.StringOutput)
}

// The unique ID for the project to get all database users.
func (o GetDatabaseUsersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// List of user’s roles and the databases / collections on which the roles apply. A role allows the user to perform particular actions on the specified database. A role on the admin database can include privileges that apply to the other databases as well. See Roles below for more details.
func (o GetDatabaseUsersResultOutput) Roles() GetDatabaseUsersResultRoleArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultRole { return v.Roles }).(GetDatabaseUsersResultRoleArrayOutput)
}

// Array of clusters and Atlas Data Lakes that this user has access to.
func (o GetDatabaseUsersResultOutput) Scopes() GetDatabaseUsersResultScopeArrayOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) []GetDatabaseUsersResultScope { return v.Scopes }).(GetDatabaseUsersResultScopeArrayOutput)
}

// Username for authenticating to MongoDB.
func (o GetDatabaseUsersResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.Username }).(pulumi.StringOutput)
}

// X.509 method by which the provided username is authenticated.
func (o GetDatabaseUsersResultOutput) X509Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResult) string { return v.X509Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResult)(nil)).Elem()
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutput() GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) ToGetDatabaseUsersResultArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultArrayOutput {
	return o
}

func (o GetDatabaseUsersResultArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResult {
		return vs[0].([]GetDatabaseUsersResult)[vs[1].(int)]
	}).(GetDatabaseUsersResultOutput)
}

type GetDatabaseUsersResultLabel struct {
	// The key that you want to write.
	Key string `pulumi:"key"`
	// The value that you want to write.
	Value string `pulumi:"value"`
}

// GetDatabaseUsersResultLabelInput is an input type that accepts GetDatabaseUsersResultLabelArgs and GetDatabaseUsersResultLabelOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelInput` via:
//
//          GetDatabaseUsersResultLabelArgs{...}
type GetDatabaseUsersResultLabelInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput
	ToGetDatabaseUsersResultLabelOutputWithContext(context.Context) GetDatabaseUsersResultLabelOutput
}

type GetDatabaseUsersResultLabelArgs struct {
	// The key that you want to write.
	Key pulumi.StringInput `pulumi:"key"`
	// The value that you want to write.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDatabaseUsersResultLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return i.ToGetDatabaseUsersResultLabelOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArgs) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelOutput)
}

// GetDatabaseUsersResultLabelArrayInput is an input type that accepts GetDatabaseUsersResultLabelArray and GetDatabaseUsersResultLabelArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultLabelArrayInput` via:
//
//          GetDatabaseUsersResultLabelArray{ GetDatabaseUsersResultLabelArgs{...} }
type GetDatabaseUsersResultLabelArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput
	ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Context) GetDatabaseUsersResultLabelArrayOutput
}

type GetDatabaseUsersResultLabelArray []GetDatabaseUsersResultLabelInput

func (GetDatabaseUsersResultLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return i.ToGetDatabaseUsersResultLabelArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultLabelArray) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultLabelArrayOutput)
}

type GetDatabaseUsersResultLabelOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutput() GetDatabaseUsersResultLabelOutput {
	return o
}

func (o GetDatabaseUsersResultLabelOutput) ToGetDatabaseUsersResultLabelOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelOutput {
	return o
}

// The key that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value that you want to write.
func (o GetDatabaseUsersResultLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultLabelArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultLabel)(nil)).Elem()
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutput() GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) ToGetDatabaseUsersResultLabelArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultLabelArrayOutput {
	return o
}

func (o GetDatabaseUsersResultLabelArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultLabel {
		return vs[0].([]GetDatabaseUsersResultLabel)[vs[1].(int)]
	}).(GetDatabaseUsersResultLabelOutput)
}

type GetDatabaseUsersResultRole struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName string `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName string `pulumi:"databaseName"`
	RoleName     string `pulumi:"roleName"`
}

// GetDatabaseUsersResultRoleInput is an input type that accepts GetDatabaseUsersResultRoleArgs and GetDatabaseUsersResultRoleOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleInput` via:
//
//          GetDatabaseUsersResultRoleArgs{...}
type GetDatabaseUsersResultRoleInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput
	ToGetDatabaseUsersResultRoleOutputWithContext(context.Context) GetDatabaseUsersResultRoleOutput
}

type GetDatabaseUsersResultRoleArgs struct {
	// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	RoleName     pulumi.StringInput `pulumi:"roleName"`
}

func (GetDatabaseUsersResultRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return i.ToGetDatabaseUsersResultRoleOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArgs) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleOutput)
}

// GetDatabaseUsersResultRoleArrayInput is an input type that accepts GetDatabaseUsersResultRoleArray and GetDatabaseUsersResultRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultRoleArrayInput` via:
//
//          GetDatabaseUsersResultRoleArray{ GetDatabaseUsersResultRoleArgs{...} }
type GetDatabaseUsersResultRoleArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput
	ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Context) GetDatabaseUsersResultRoleArrayOutput
}

type GetDatabaseUsersResultRoleArray []GetDatabaseUsersResultRoleInput

func (GetDatabaseUsersResultRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return i.ToGetDatabaseUsersResultRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultRoleArray) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultRoleArrayOutput)
}

type GetDatabaseUsersResultRoleOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutput() GetDatabaseUsersResultRoleOutput {
	return o
}

func (o GetDatabaseUsersResultRoleOutput) ToGetDatabaseUsersResultRoleOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleOutput {
	return o
}

// Collection for which the role applies. You can specify a collection for the `read` and `readWrite` roles. If you do not specify a collection for `read` and `readWrite`, the role applies to all collections in the database (excluding some collections in the `system`. database).
func (o GetDatabaseUsersResultRoleOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.CollectionName }).(pulumi.StringOutput)
}

// Database on which the user has the specified role. A role on the `admin` database can include privileges that apply to the other databases.
func (o GetDatabaseUsersResultRoleOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o GetDatabaseUsersResultRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultRole) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultRole)(nil)).Elem()
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutput() GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) ToGetDatabaseUsersResultRoleArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultRoleArrayOutput {
	return o
}

func (o GetDatabaseUsersResultRoleArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultRole {
		return vs[0].([]GetDatabaseUsersResultRole)[vs[1].(int)]
	}).(GetDatabaseUsersResultRoleOutput)
}

type GetDatabaseUsersResultScope struct {
	// Name of the role to grant.
	Name string `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type string `pulumi:"type"`
}

// GetDatabaseUsersResultScopeInput is an input type that accepts GetDatabaseUsersResultScopeArgs and GetDatabaseUsersResultScopeOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeInput` via:
//
//          GetDatabaseUsersResultScopeArgs{...}
type GetDatabaseUsersResultScopeInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput
	ToGetDatabaseUsersResultScopeOutputWithContext(context.Context) GetDatabaseUsersResultScopeOutput
}

type GetDatabaseUsersResultScopeArgs struct {
	// Name of the role to grant.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabaseUsersResultScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return i.ToGetDatabaseUsersResultScopeOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArgs) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeOutput)
}

// GetDatabaseUsersResultScopeArrayInput is an input type that accepts GetDatabaseUsersResultScopeArray and GetDatabaseUsersResultScopeArrayOutput values.
// You can construct a concrete instance of `GetDatabaseUsersResultScopeArrayInput` via:
//
//          GetDatabaseUsersResultScopeArray{ GetDatabaseUsersResultScopeArgs{...} }
type GetDatabaseUsersResultScopeArrayInput interface {
	pulumi.Input

	ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput
	ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Context) GetDatabaseUsersResultScopeArrayOutput
}

type GetDatabaseUsersResultScopeArray []GetDatabaseUsersResultScopeInput

func (GetDatabaseUsersResultScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return i.ToGetDatabaseUsersResultScopeArrayOutputWithContext(context.Background())
}

func (i GetDatabaseUsersResultScopeArray) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseUsersResultScopeArrayOutput)
}

type GetDatabaseUsersResultScopeOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutput() GetDatabaseUsersResultScopeOutput {
	return o
}

func (o GetDatabaseUsersResultScopeOutput) ToGetDatabaseUsersResultScopeOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeOutput {
	return o
}

// Name of the role to grant.
func (o GetDatabaseUsersResultScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Name }).(pulumi.StringOutput)
}

// Type of resource that the user has access to. Valid values are: `CLUSTER` and `DATA_LAKE`
func (o GetDatabaseUsersResultScopeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseUsersResultScope) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabaseUsersResultScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseUsersResultScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseUsersResultScope)(nil)).Elem()
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutput() GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) ToGetDatabaseUsersResultScopeArrayOutputWithContext(ctx context.Context) GetDatabaseUsersResultScopeArrayOutput {
	return o
}

func (o GetDatabaseUsersResultScopeArrayOutput) Index(i pulumi.IntInput) GetDatabaseUsersResultScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseUsersResultScope {
		return vs[0].([]GetDatabaseUsersResultScope)[vs[1].(int)]
	}).(GetDatabaseUsersResultScopeOutput)
}

type GetEventTriggerEventProcessor struct {
	AwsEventbridges []GetEventTriggerEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggerEventProcessorInput is an input type that accepts GetEventTriggerEventProcessorArgs and GetEventTriggerEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorInput` via:
//
//          GetEventTriggerEventProcessorArgs{...}
type GetEventTriggerEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput
	ToGetEventTriggerEventProcessorOutputWithContext(context.Context) GetEventTriggerEventProcessorOutput
}

type GetEventTriggerEventProcessorArgs struct {
	AwsEventbridges GetEventTriggerEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggerEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return i.ToGetEventTriggerEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArgs) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorOutput)
}

// GetEventTriggerEventProcessorArrayInput is an input type that accepts GetEventTriggerEventProcessorArray and GetEventTriggerEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorArrayInput` via:
//
//          GetEventTriggerEventProcessorArray{ GetEventTriggerEventProcessorArgs{...} }
type GetEventTriggerEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput
	ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorArrayOutput
}

type GetEventTriggerEventProcessorArray []GetEventTriggerEventProcessorInput

func (GetEventTriggerEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return i.ToGetEventTriggerEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorArray) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorArrayOutput)
}

type GetEventTriggerEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutput() GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) ToGetEventTriggerEventProcessorOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorOutput {
	return o
}

func (o GetEventTriggerEventProcessorOutput) AwsEventbridges() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessor) []GetEventTriggerEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggerEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessor)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutput() GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) ToGetEventTriggerEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessor {
		return vs[0].([]GetEventTriggerEventProcessor)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorOutput)
}

type GetEventTriggerEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggerEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArgs and GetEventTriggerEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeInput` via:
//
//          GetEventTriggerEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggerEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggerEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArgs) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

// GetEventTriggerEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggerEventProcessorAwsEventbridgeArray and GetEventTriggerEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggerEventProcessorAwsEventbridgeArrayInput` via:
//
//          GetEventTriggerEventProcessorAwsEventbridgeArray{ GetEventTriggerEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggerEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggerEventProcessorAwsEventbridgeArray []GetEventTriggerEventProcessorAwsEventbridgeInput

func (GetEventTriggerEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggerEventProcessorAwsEventbridgeArray) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggerEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutput() GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ToGetEventTriggerEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggerEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggerEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggerEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggerEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutput() GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggerEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggerEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggerEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggerEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggerEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggerEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggerEventProcessorAwsEventbridgeOutput)
}

type GetEventTriggersResult struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection string `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase string `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       bool `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore bool `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch string `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType string `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes []string `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject string `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders []string `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     string `pulumi:"configSchedule"`
	ConfigScheduleType string `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId string `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled bool `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors []GetEventTriggersResultEventProcessor `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId string `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName string `pulumi:"functionName"`
	// The name of the trigger.
	Name      string `pulumi:"name"`
	TriggerId string `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type string `pulumi:"type"`
}

// GetEventTriggersResultInput is an input type that accepts GetEventTriggersResultArgs and GetEventTriggersResultOutput values.
// You can construct a concrete instance of `GetEventTriggersResultInput` via:
//
//          GetEventTriggersResultArgs{...}
type GetEventTriggersResultInput interface {
	pulumi.Input

	ToGetEventTriggersResultOutput() GetEventTriggersResultOutput
	ToGetEventTriggersResultOutputWithContext(context.Context) GetEventTriggersResultOutput
}

type GetEventTriggersResultArgs struct {
	// The name of the MongoDB collection that the trigger watches for change events.
	ConfigCollection pulumi.StringInput `pulumi:"configCollection"`
	// The name of the MongoDB database that contains the watched collection.
	ConfigDatabase pulumi.StringInput `pulumi:"configDatabase"`
	// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
	ConfigFullDocument       pulumi.BoolInput `pulumi:"configFullDocument"`
	ConfigFullDocumentBefore pulumi.BoolInput `pulumi:"configFullDocumentBefore"`
	// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
	ConfigMatch pulumi.StringInput `pulumi:"configMatch"`
	// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
	ConfigOperationType pulumi.StringInput `pulumi:"configOperationType"`
	// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
	ConfigOperationTypes pulumi.StringArrayInput `pulumi:"configOperationTypes"`
	// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
	ConfigProject pulumi.StringInput `pulumi:"configProject"`
	// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
	ConfigProviders pulumi.StringArrayInput `pulumi:"configProviders"`
	// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
	ConfigSchedule     pulumi.StringInput `pulumi:"configSchedule"`
	ConfigScheduleType pulumi.StringInput `pulumi:"configScheduleType"`
	// The ID of the MongoDB Service associated with the trigger.
	ConfigServiceId pulumi.StringInput `pulumi:"configServiceId"`
	// Status of a trigger.
	Disabled pulumi.BoolInput `pulumi:"disabled"`
	// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
	// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
	// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
	EventProcessors GetEventTriggersResultEventProcessorArrayInput `pulumi:"eventProcessors"`
	// The ID of the function associated with the trigger.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The name of the function associated with the trigger.
	FunctionName pulumi.StringInput `pulumi:"functionName"`
	// The name of the trigger.
	Name      pulumi.StringInput `pulumi:"name"`
	TriggerId pulumi.StringInput `pulumi:"triggerId"`
	// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetEventTriggersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return i.ToGetEventTriggersResultOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArgs) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultOutput)
}

// GetEventTriggersResultArrayInput is an input type that accepts GetEventTriggersResultArray and GetEventTriggersResultArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultArrayInput` via:
//
//          GetEventTriggersResultArray{ GetEventTriggersResultArgs{...} }
type GetEventTriggersResultArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput
	ToGetEventTriggersResultArrayOutputWithContext(context.Context) GetEventTriggersResultArrayOutput
}

type GetEventTriggersResultArray []GetEventTriggersResultInput

func (GetEventTriggersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return i.ToGetEventTriggersResultArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultArray) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultArrayOutput)
}

type GetEventTriggersResultOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutput() GetEventTriggersResultOutput {
	return o
}

func (o GetEventTriggersResultOutput) ToGetEventTriggersResultOutputWithContext(ctx context.Context) GetEventTriggersResultOutput {
	return o
}

// The name of the MongoDB collection that the trigger watches for change events.
func (o GetEventTriggersResultOutput) ConfigCollection() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigCollection }).(pulumi.StringOutput)
}

// The name of the MongoDB database that contains the watched collection.
func (o GetEventTriggersResultOutput) ConfigDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigDatabase }).(pulumi.StringOutput)
}

// If true, indicates that `UPDATE` change events should include the most current [majority-committed](https://docs.mongodb.com/manual/reference/read-concern-majority/) version of the modified document in the fullDocument field.
func (o GetEventTriggersResultOutput) ConfigFullDocument() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocument }).(pulumi.BoolOutput)
}

func (o GetEventTriggersResultOutput) ConfigFullDocumentBefore() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.ConfigFullDocumentBefore }).(pulumi.BoolOutput)
}

// A [$match](https://docs.mongodb.com/manual/reference/operator/aggregation/match/) expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger.
func (o GetEventTriggersResultOutput) ConfigMatch() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigMatch }).(pulumi.StringOutput)
}

// The [authentication operation type](https://docs.mongodb.com/realm/triggers/authentication-triggers/#std-label-authentication-event-operation-types) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigOperationType }).(pulumi.StringOutput)
}

// The [database event operation types](https://docs.mongodb.com/realm/triggers/database-triggers/#std-label-database-events) to listen for.
func (o GetEventTriggersResultOutput) ConfigOperationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigOperationTypes }).(pulumi.StringArrayOutput)
}

// A [$project](https://docs.mongodb.com/manual/reference/operator/aggregation/project/) expression document that Realm uses to filter the fields that appear in change event objects.
func (o GetEventTriggersResultOutput) ConfigProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigProject }).(pulumi.StringOutput)
}

// A list of one or more [authentication provider](https://docs.mongodb.com/realm/authentication/providers/) id values. The trigger will only listen for authentication events produced by these providers.
func (o GetEventTriggersResultOutput) ConfigProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []string { return v.ConfigProviders }).(pulumi.StringArrayOutput)
}

// A [cron expression](https://docs.mongodb.com/realm/triggers/cron-expressions/) that defines the trigger schedule.
func (o GetEventTriggersResultOutput) ConfigSchedule() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigSchedule }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) ConfigScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigScheduleType }).(pulumi.StringOutput)
}

// The ID of the MongoDB Service associated with the trigger.
func (o GetEventTriggersResultOutput) ConfigServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.ConfigServiceId }).(pulumi.StringOutput)
}

// Status of a trigger.
func (o GetEventTriggersResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEventTriggersResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

// An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor.
// * `event_processors.0.aws_eventbridge.config_account_id` - AWS Account ID.
// * `event_processors.0.aws_eventbridge.config_region` - Region of AWS Account.
func (o GetEventTriggersResultOutput) EventProcessors() GetEventTriggersResultEventProcessorArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResult) []GetEventTriggersResultEventProcessor { return v.EventProcessors }).(GetEventTriggersResultEventProcessorArrayOutput)
}

// The ID of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The name of the function associated with the trigger.
func (o GetEventTriggersResultOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.FunctionName }).(pulumi.StringOutput)
}

// The name of the trigger.
func (o GetEventTriggersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultOutput) TriggerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.TriggerId }).(pulumi.StringOutput)
}

// The type of the trigger. Possible Values: `DATABASE`, `AUTHENTICATION`
func (o GetEventTriggersResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResult) string { return v.Type }).(pulumi.StringOutput)
}

type GetEventTriggersResultArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResult)(nil)).Elem()
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutput() GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) ToGetEventTriggersResultArrayOutputWithContext(ctx context.Context) GetEventTriggersResultArrayOutput {
	return o
}

func (o GetEventTriggersResultArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResult {
		return vs[0].([]GetEventTriggersResult)[vs[1].(int)]
	}).(GetEventTriggersResultOutput)
}

type GetEventTriggersResultEventProcessor struct {
	AwsEventbridges []GetEventTriggersResultEventProcessorAwsEventbridge `pulumi:"awsEventbridges"`
}

// GetEventTriggersResultEventProcessorInput is an input type that accepts GetEventTriggersResultEventProcessorArgs and GetEventTriggersResultEventProcessorOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorInput` via:
//
//          GetEventTriggersResultEventProcessorArgs{...}
type GetEventTriggersResultEventProcessorInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput
	ToGetEventTriggersResultEventProcessorOutputWithContext(context.Context) GetEventTriggersResultEventProcessorOutput
}

type GetEventTriggersResultEventProcessorArgs struct {
	AwsEventbridges GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput `pulumi:"awsEventbridges"`
}

func (GetEventTriggersResultEventProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return i.ToGetEventTriggersResultEventProcessorOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArgs) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorOutput)
}

// GetEventTriggersResultEventProcessorArrayInput is an input type that accepts GetEventTriggersResultEventProcessorArray and GetEventTriggersResultEventProcessorArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorArrayInput` via:
//
//          GetEventTriggersResultEventProcessorArray{ GetEventTriggersResultEventProcessorArgs{...} }
type GetEventTriggersResultEventProcessorArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput
	ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorArrayOutput
}

type GetEventTriggersResultEventProcessorArray []GetEventTriggersResultEventProcessorInput

func (GetEventTriggersResultEventProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorArray) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorArrayOutput)
}

type GetEventTriggersResultEventProcessorOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutput() GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) ToGetEventTriggersResultEventProcessorOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorOutput) AwsEventbridges() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessor) []GetEventTriggersResultEventProcessorAwsEventbridge {
		return v.AwsEventbridges
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggersResultEventProcessorArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessor)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutput() GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) ToGetEventTriggersResultEventProcessorArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessor {
		return vs[0].([]GetEventTriggersResultEventProcessor)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridge struct {
	ConfigAccountId string `pulumi:"configAccountId"`
	ConfigRegion    string `pulumi:"configRegion"`
}

// GetEventTriggersResultEventProcessorAwsEventbridgeInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArgs and GetEventTriggersResultEventProcessorAwsEventbridgeOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeInput` via:
//
//          GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...}
type GetEventTriggersResultEventProcessorAwsEventbridgeInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArgs struct {
	ConfigAccountId pulumi.StringInput `pulumi:"configAccountId"`
	ConfigRegion    pulumi.StringInput `pulumi:"configRegion"`
}

func (GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArgs) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

// GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput is an input type that accepts GetEventTriggersResultEventProcessorAwsEventbridgeArray and GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput values.
// You can construct a concrete instance of `GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput` via:
//
//          GetEventTriggersResultEventProcessorAwsEventbridgeArray{ GetEventTriggersResultEventProcessorAwsEventbridgeArgs{...} }
type GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput interface {
	pulumi.Input

	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
	ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArray []GetEventTriggersResultEventProcessorAwsEventbridgeInput

func (GetEventTriggersResultEventProcessorAwsEventbridgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return i.ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(context.Background())
}

func (i GetEventTriggersResultEventProcessorAwsEventbridgeArray) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridgeOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutput() GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigAccountId }).(pulumi.StringOutput)
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeOutput) ConfigRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventTriggersResultEventProcessorAwsEventbridge) string { return v.ConfigRegion }).(pulumi.StringOutput)
}

type GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput struct{ *pulumi.OutputState }

func (GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventTriggersResultEventProcessorAwsEventbridge)(nil)).Elem()
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput() GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) ToGetEventTriggersResultEventProcessorAwsEventbridgeArrayOutputWithContext(ctx context.Context) GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput {
	return o
}

func (o GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput) Index(i pulumi.IntInput) GetEventTriggersResultEventProcessorAwsEventbridgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventTriggersResultEventProcessorAwsEventbridge {
		return vs[0].([]GetEventTriggersResultEventProcessorAwsEventbridge)[vs[1].(int)]
	}).(GetEventTriggersResultEventProcessorAwsEventbridgeOutput)
}

type GetGlobalClusterConfigManagedNamespace struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection string `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey string `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db string `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed bool `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique bool `pulumi:"isShardKeyUnique"`
}

// GetGlobalClusterConfigManagedNamespaceInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArgs and GetGlobalClusterConfigManagedNamespaceOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceInput` via:
//
//          GetGlobalClusterConfigManagedNamespaceArgs{...}
type GetGlobalClusterConfigManagedNamespaceInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput
	ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceOutput
}

type GetGlobalClusterConfigManagedNamespaceArgs struct {
	// (Required) The name of the collection associated with the managed namespace.
	Collection pulumi.StringInput `pulumi:"collection"`
	// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
	CustomShardKey pulumi.StringInput `pulumi:"customShardKey"`
	// (Required) The name of the database containing the collection.
	Db pulumi.StringInput `pulumi:"db"`
	// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
	IsCustomShardKeyHashed pulumi.BoolInput `pulumi:"isCustomShardKeyHashed"`
	// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
	IsShardKeyUnique pulumi.BoolInput `pulumi:"isShardKeyUnique"`
}

func (GetGlobalClusterConfigManagedNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArgs) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceOutput)
}

// GetGlobalClusterConfigManagedNamespaceArrayInput is an input type that accepts GetGlobalClusterConfigManagedNamespaceArray and GetGlobalClusterConfigManagedNamespaceArrayOutput values.
// You can construct a concrete instance of `GetGlobalClusterConfigManagedNamespaceArrayInput` via:
//
//          GetGlobalClusterConfigManagedNamespaceArray{ GetGlobalClusterConfigManagedNamespaceArgs{...} }
type GetGlobalClusterConfigManagedNamespaceArrayInput interface {
	pulumi.Input

	ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput
	ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput
}

type GetGlobalClusterConfigManagedNamespaceArray []GetGlobalClusterConfigManagedNamespaceInput

func (GetGlobalClusterConfigManagedNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return i.ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(context.Background())
}

func (i GetGlobalClusterConfigManagedNamespaceArray) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClusterConfigManagedNamespaceArrayOutput)
}

type GetGlobalClusterConfigManagedNamespaceOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutput() GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceOutput) ToGetGlobalClusterConfigManagedNamespaceOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceOutput {
	return o
}

// (Required) The name of the collection associated with the managed namespace.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Collection() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Collection }).(pulumi.StringOutput)
}

// (Required)	The custom shard key for the collection. Global Clusters require a compound shard key consisting of a location field and a user-selected second key, the custom shard key.
func (o GetGlobalClusterConfigManagedNamespaceOutput) CustomShardKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.CustomShardKey }).(pulumi.StringOutput)
}

// (Required) The name of the database containing the collection.
func (o GetGlobalClusterConfigManagedNamespaceOutput) Db() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) string { return v.Db }).(pulumi.StringOutput)
}

// Specifies whether the custom shard key for the collection is [hashed](https://docs.mongodb.com/manual/reference/method/sh.shardCollection/#hashed-shard-keys). If omitted, defaults to `false`. If `false`, Atlas uses [ranged sharding](https://docs.mongodb.com/manual/core/ranged-sharding/). This is only available for Atlas clusters with MongoDB v4.4 and later.
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsCustomShardKeyHashed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsCustomShardKeyHashed }).(pulumi.BoolOutput)
}

// Specifies whether the underlying index enforces a unique constraint. If omitted, defaults to false. You cannot specify true when using [hashed shard keys](https://docs.mongodb.com/manual/core/hashed-sharding/#std-label-sharding-hashed).
func (o GetGlobalClusterConfigManagedNamespaceOutput) IsShardKeyUnique() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClusterConfigManagedNamespace) bool { return v.IsShardKeyUnique }).(pulumi.BoolOutput)
}

type GetGlobalClusterConfigManagedNamespaceArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClusterConfigManagedNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClusterConfigManagedNamespace)(nil)).Elem()
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutput() GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) ToGetGlobalClusterConfigManagedNamespaceArrayOutputWithContext(ctx context.Context) GetGlobalClusterConfigManagedNamespaceArrayOutput {
	return o
}

func (o GetGlobalClusterConfigManagedNamespaceArrayOutput) Index(i pulumi.IntInput) GetGlobalClusterConfigManagedNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClusterConfigManagedNamespace {
		return vs[0].([]GetGlobalClusterConfigManagedNamespace)[vs[1].(int)]
	}).(GetGlobalClusterConfigManagedNamespaceOutput)
}

type GetLdapConfigurationUserToDnMapping struct {
	LdapQuery    string `pulumi:"ldapQuery"`
	Match        string `pulumi:"match"`
	Substitution string `pulumi:"substitution"`
}

// GetLdapConfigurationUserToDnMappingInput is an input type that accepts GetLdapConfigurationUserToDnMappingArgs and GetLdapConfigurationUserToDnMappingOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingInput` via:
//
//          GetLdapConfigurationUserToDnMappingArgs{...}
type GetLdapConfigurationUserToDnMappingInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput
	ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingOutput
}

type GetLdapConfigurationUserToDnMappingArgs struct {
	LdapQuery    pulumi.StringInput `pulumi:"ldapQuery"`
	Match        pulumi.StringInput `pulumi:"match"`
	Substitution pulumi.StringInput `pulumi:"substitution"`
}

func (GetLdapConfigurationUserToDnMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return i.ToGetLdapConfigurationUserToDnMappingOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArgs) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingOutput)
}

// GetLdapConfigurationUserToDnMappingArrayInput is an input type that accepts GetLdapConfigurationUserToDnMappingArray and GetLdapConfigurationUserToDnMappingArrayOutput values.
// You can construct a concrete instance of `GetLdapConfigurationUserToDnMappingArrayInput` via:
//
//          GetLdapConfigurationUserToDnMappingArray{ GetLdapConfigurationUserToDnMappingArgs{...} }
type GetLdapConfigurationUserToDnMappingArrayInput interface {
	pulumi.Input

	ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput
	ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Context) GetLdapConfigurationUserToDnMappingArrayOutput
}

type GetLdapConfigurationUserToDnMappingArray []GetLdapConfigurationUserToDnMappingInput

func (GetLdapConfigurationUserToDnMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return i.ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(context.Background())
}

func (i GetLdapConfigurationUserToDnMappingArray) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapConfigurationUserToDnMappingArrayOutput)
}

type GetLdapConfigurationUserToDnMappingOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutput() GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) ToGetLdapConfigurationUserToDnMappingOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingOutput) LdapQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.LdapQuery }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Match }).(pulumi.StringOutput)
}

func (o GetLdapConfigurationUserToDnMappingOutput) Substitution() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapConfigurationUserToDnMapping) string { return v.Substitution }).(pulumi.StringOutput)
}

type GetLdapConfigurationUserToDnMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLdapConfigurationUserToDnMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapConfigurationUserToDnMapping)(nil)).Elem()
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutput() GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) ToGetLdapConfigurationUserToDnMappingArrayOutputWithContext(ctx context.Context) GetLdapConfigurationUserToDnMappingArrayOutput {
	return o
}

func (o GetLdapConfigurationUserToDnMappingArrayOutput) Index(i pulumi.IntInput) GetLdapConfigurationUserToDnMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapConfigurationUserToDnMapping {
		return vs[0].([]GetLdapConfigurationUserToDnMapping)[vs[1].(int)]
	}).(GetLdapConfigurationUserToDnMappingOutput)
}

type GetLdapVerifyLink struct {
	Href string `pulumi:"href"`
	Rel  string `pulumi:"rel"`
}

// GetLdapVerifyLinkInput is an input type that accepts GetLdapVerifyLinkArgs and GetLdapVerifyLinkOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkInput` via:
//
//          GetLdapVerifyLinkArgs{...}
type GetLdapVerifyLinkInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput
	ToGetLdapVerifyLinkOutputWithContext(context.Context) GetLdapVerifyLinkOutput
}

type GetLdapVerifyLinkArgs struct {
	Href pulumi.StringInput `pulumi:"href"`
	Rel  pulumi.StringInput `pulumi:"rel"`
}

func (GetLdapVerifyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return i.ToGetLdapVerifyLinkOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArgs) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkOutput)
}

// GetLdapVerifyLinkArrayInput is an input type that accepts GetLdapVerifyLinkArray and GetLdapVerifyLinkArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyLinkArrayInput` via:
//
//          GetLdapVerifyLinkArray{ GetLdapVerifyLinkArgs{...} }
type GetLdapVerifyLinkArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput
	ToGetLdapVerifyLinkArrayOutputWithContext(context.Context) GetLdapVerifyLinkArrayOutput
}

type GetLdapVerifyLinkArray []GetLdapVerifyLinkInput

func (GetLdapVerifyLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return i.ToGetLdapVerifyLinkArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyLinkArray) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyLinkArrayOutput)
}

type GetLdapVerifyLinkOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutput() GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) ToGetLdapVerifyLinkOutputWithContext(ctx context.Context) GetLdapVerifyLinkOutput {
	return o
}

func (o GetLdapVerifyLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetLdapVerifyLinkOutput) Rel() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyLink) string { return v.Rel }).(pulumi.StringOutput)
}

type GetLdapVerifyLinkArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyLink)(nil)).Elem()
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutput() GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) ToGetLdapVerifyLinkArrayOutputWithContext(ctx context.Context) GetLdapVerifyLinkArrayOutput {
	return o
}

func (o GetLdapVerifyLinkArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyLink {
		return vs[0].([]GetLdapVerifyLink)[vs[1].(int)]
	}).(GetLdapVerifyLinkOutput)
}

type GetLdapVerifyValidation struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         string `pulumi:"status"`
	ValidationType string `pulumi:"validationType"`
}

// GetLdapVerifyValidationInput is an input type that accepts GetLdapVerifyValidationArgs and GetLdapVerifyValidationOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationInput` via:
//
//          GetLdapVerifyValidationArgs{...}
type GetLdapVerifyValidationInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput
	ToGetLdapVerifyValidationOutputWithContext(context.Context) GetLdapVerifyValidationOutput
}

type GetLdapVerifyValidationArgs struct {
	// The current status of the LDAP over TLS/SSL configuration.
	Status         pulumi.StringInput `pulumi:"status"`
	ValidationType pulumi.StringInput `pulumi:"validationType"`
}

func (GetLdapVerifyValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return i.ToGetLdapVerifyValidationOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArgs) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationOutput)
}

// GetLdapVerifyValidationArrayInput is an input type that accepts GetLdapVerifyValidationArray and GetLdapVerifyValidationArrayOutput values.
// You can construct a concrete instance of `GetLdapVerifyValidationArrayInput` via:
//
//          GetLdapVerifyValidationArray{ GetLdapVerifyValidationArgs{...} }
type GetLdapVerifyValidationArrayInput interface {
	pulumi.Input

	ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput
	ToGetLdapVerifyValidationArrayOutputWithContext(context.Context) GetLdapVerifyValidationArrayOutput
}

type GetLdapVerifyValidationArray []GetLdapVerifyValidationInput

func (GetLdapVerifyValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return i.ToGetLdapVerifyValidationArrayOutputWithContext(context.Background())
}

func (i GetLdapVerifyValidationArray) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLdapVerifyValidationArrayOutput)
}

type GetLdapVerifyValidationOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutput() GetLdapVerifyValidationOutput {
	return o
}

func (o GetLdapVerifyValidationOutput) ToGetLdapVerifyValidationOutputWithContext(ctx context.Context) GetLdapVerifyValidationOutput {
	return o
}

// The current status of the LDAP over TLS/SSL configuration.
func (o GetLdapVerifyValidationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetLdapVerifyValidationOutput) ValidationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLdapVerifyValidation) string { return v.ValidationType }).(pulumi.StringOutput)
}

type GetLdapVerifyValidationArrayOutput struct{ *pulumi.OutputState }

func (GetLdapVerifyValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLdapVerifyValidation)(nil)).Elem()
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutput() GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) ToGetLdapVerifyValidationArrayOutputWithContext(ctx context.Context) GetLdapVerifyValidationArrayOutput {
	return o
}

func (o GetLdapVerifyValidationArrayOutput) Index(i pulumi.IntInput) GetLdapVerifyValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLdapVerifyValidation {
		return vs[0].([]GetLdapVerifyValidation)[vs[1].(int)]
	}).(GetLdapVerifyValidationOutput)
}

type GetNetworkContainersResult struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock string `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id string `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName string `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName string `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned bool `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region string `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName string `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions []string `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkContainersResultInput is an input type that accepts GetNetworkContainersResultArgs and GetNetworkContainersResultOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultInput` via:
//
//          GetNetworkContainersResultArgs{...}
type GetNetworkContainersResultInput interface {
	pulumi.Input

	ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput
	ToGetNetworkContainersResultOutputWithContext(context.Context) GetNetworkContainersResultOutput
}

type GetNetworkContainersResultArgs struct {
	// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
	AtlasCidrBlock pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier of the GCP project in which the Network Peering connection resides.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// The Network Peering Container ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Network Peering connection in the Atlas project.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Indicates whether the project has Network Peering connections deployed in the container.
	Provisioned pulumi.BoolInput `pulumi:"provisioned"`
	// The Atlas Azure region name for where this container exists.
	Region pulumi.StringInput `pulumi:"region"`
	// The Atlas AWS region name for where this container exists.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// Atlas GCP regions where the container resides.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the project’s VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkContainersResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return i.ToGetNetworkContainersResultOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArgs) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultOutput)
}

// GetNetworkContainersResultArrayInput is an input type that accepts GetNetworkContainersResultArray and GetNetworkContainersResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkContainersResultArrayInput` via:
//
//          GetNetworkContainersResultArray{ GetNetworkContainersResultArgs{...} }
type GetNetworkContainersResultArrayInput interface {
	pulumi.Input

	ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput
	ToGetNetworkContainersResultArrayOutputWithContext(context.Context) GetNetworkContainersResultArrayOutput
}

type GetNetworkContainersResultArray []GetNetworkContainersResultInput

func (GetNetworkContainersResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return i.ToGetNetworkContainersResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkContainersResultArray) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkContainersResultArrayOutput)
}

type GetNetworkContainersResultOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutput() GetNetworkContainersResultOutput {
	return o
}

func (o GetNetworkContainersResultOutput) ToGetNetworkContainersResultOutputWithContext(ctx context.Context) GetNetworkContainersResultOutput {
	return o
}

// CIDR block that Atlas uses for your clusters. Atlas uses the specified CIDR block for all other Network Peering connections created in the project. The Atlas CIDR block must be at least a /24 and at most a /21 in one of the following [private networks](https://tools.ietf.org/html/rfc1918.html#section-3).
func (o GetNetworkContainersResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkContainersResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier of the GCP project in which the Network Peering connection resides.
func (o GetNetworkContainersResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The Network Peering Container ID.
func (o GetNetworkContainersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Network Peering connection in the Atlas project.
func (o GetNetworkContainersResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Cloud provider for this Network peering container. Accepted values are AWS, GCP, and Azure.
func (o GetNetworkContainersResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Indicates whether the project has Network Peering connections deployed in the container.
func (o GetNetworkContainersResultOutput) Provisioned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) bool { return v.Provisioned }).(pulumi.BoolOutput)
}

// The Atlas Azure region name for where this container exists.
func (o GetNetworkContainersResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.Region }).(pulumi.StringOutput)
}

// The Atlas AWS region name for where this container exists.
func (o GetNetworkContainersResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.RegionName }).(pulumi.StringOutput)
}

// Atlas GCP regions where the container resides.
func (o GetNetworkContainersResultOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The name of the Azure VNet. This value is null until you provision an Azure VNet in the container.
func (o GetNetworkContainersResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the project’s VPC.
func (o GetNetworkContainersResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkContainersResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkContainersResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkContainersResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkContainersResult)(nil)).Elem()
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutput() GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) ToGetNetworkContainersResultArrayOutputWithContext(ctx context.Context) GetNetworkContainersResultArrayOutput {
	return o
}

func (o GetNetworkContainersResultArrayOutput) Index(i pulumi.IntInput) GetNetworkContainersResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkContainersResult {
		return vs[0].([]GetNetworkContainersResult)[vs[1].(int)]
	}).(GetNetworkContainersResultOutput)
}

type GetNetworkPeeringsResult struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName string `pulumi:"accepterRegionName"`
	AtlasCidrBlock     string `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId string `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId string `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId string `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId string `pulumi:"connectionId"`
	ContainerId  string `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage string `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState string `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName string `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName string `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId string `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName string `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock string `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status string `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName string `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName string `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkPeeringsResultInput is an input type that accepts GetNetworkPeeringsResultArgs and GetNetworkPeeringsResultOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultInput` via:
//
//          GetNetworkPeeringsResultArgs{...}
type GetNetworkPeeringsResultInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput
	ToGetNetworkPeeringsResultOutputWithContext(context.Context) GetNetworkPeeringsResultOutput
}

type GetNetworkPeeringsResultArgs struct {
	// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
	AccepterRegionName pulumi.StringInput `pulumi:"accepterRegionName"`
	AtlasCidrBlock     pulumi.StringInput `pulumi:"atlasCidrBlock"`
	// Account ID of the owner of the peer VPC.
	AwsAccountId pulumi.StringInput `pulumi:"awsAccountId"`
	// Unique identifier for an Azure AD directory.
	AzureDirectoryId pulumi.StringInput `pulumi:"azureDirectoryId"`
	// Unique identifer of the Azure subscription in which the VNet resides.
	AzureSubscriptionId pulumi.StringInput `pulumi:"azureSubscriptionId"`
	// Unique identifier for the peering connection.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	ContainerId  pulumi.StringInput `pulumi:"containerId"`
	// When `"status" : "FAILED"`, Atlas provides a description of the error.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
	ErrorState pulumi.StringInput `pulumi:"errorState"`
	// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
	ErrorStateName pulumi.StringInput `pulumi:"errorStateName"`
	// GCP project ID of the owner of the network peer.
	GcpProjectId pulumi.StringInput `pulumi:"gcpProjectId"`
	// Name of the network peer to which Atlas connects.
	NetworkName pulumi.StringInput `pulumi:"networkName"`
	// Atlas assigned unique ID for the peering connection.
	PeeringId pulumi.StringInput `pulumi:"peeringId"`
	// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
	ProviderName pulumi.StringInput `pulumi:"providerName"`
	// Name of your Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Peer VPC CIDR block or subnet.
	RouteTableCidrBlock pulumi.StringInput `pulumi:"routeTableCidrBlock"`
	// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
	Status pulumi.StringInput `pulumi:"status"`
	// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
	StatusName pulumi.StringInput `pulumi:"statusName"`
	// Name of your Azure VNet.
	VnetName pulumi.StringInput `pulumi:"vnetName"`
	// Unique identifier of the peer VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkPeeringsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return i.ToGetNetworkPeeringsResultOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArgs) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultOutput)
}

// GetNetworkPeeringsResultArrayInput is an input type that accepts GetNetworkPeeringsResultArray and GetNetworkPeeringsResultArrayOutput values.
// You can construct a concrete instance of `GetNetworkPeeringsResultArrayInput` via:
//
//          GetNetworkPeeringsResultArray{ GetNetworkPeeringsResultArgs{...} }
type GetNetworkPeeringsResultArrayInput interface {
	pulumi.Input

	ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput
	ToGetNetworkPeeringsResultArrayOutputWithContext(context.Context) GetNetworkPeeringsResultArrayOutput
}

type GetNetworkPeeringsResultArray []GetNetworkPeeringsResultInput

func (GetNetworkPeeringsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return i.ToGetNetworkPeeringsResultArrayOutputWithContext(context.Background())
}

func (i GetNetworkPeeringsResultArray) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPeeringsResultArrayOutput)
}

type GetNetworkPeeringsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutput() GetNetworkPeeringsResultOutput {
	return o
}

func (o GetNetworkPeeringsResultOutput) ToGetNetworkPeeringsResultOutputWithContext(ctx context.Context) GetNetworkPeeringsResultOutput {
	return o
}

// Specifies the region where the peer VPC resides. For complete lists of supported regions, see [Amazon Web Services](https://docs.atlas.mongodb.com/reference/amazon-aws/).
func (o GetNetworkPeeringsResultOutput) AccepterRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AccepterRegionName }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) AtlasCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AtlasCidrBlock }).(pulumi.StringOutput)
}

// Account ID of the owner of the peer VPC.
func (o GetNetworkPeeringsResultOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Unique identifier for an Azure AD directory.
func (o GetNetworkPeeringsResultOutput) AzureDirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureDirectoryId }).(pulumi.StringOutput)
}

// Unique identifer of the Azure subscription in which the VNet resides.
func (o GetNetworkPeeringsResultOutput) AzureSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.AzureSubscriptionId }).(pulumi.StringOutput)
}

// Unique identifier for the peering connection.
func (o GetNetworkPeeringsResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o GetNetworkPeeringsResultOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ContainerId }).(pulumi.StringOutput)
}

// When `"status" : "FAILED"`, Atlas provides a description of the error.
func (o GetNetworkPeeringsResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// Description of the Atlas error when `status` is `Failed`, Otherwise, Atlas returns `null`.
func (o GetNetworkPeeringsResultOutput) ErrorState() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorState }).(pulumi.StringOutput)
}

// Error state, if any. The VPC peering connection error state value can be one of the following: `REJECTED`, `EXPIRED`, `INVALID_ARGUMENT`.
func (o GetNetworkPeeringsResultOutput) ErrorStateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ErrorStateName }).(pulumi.StringOutput)
}

// GCP project ID of the owner of the network peer.
func (o GetNetworkPeeringsResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Name of the network peer to which Atlas connects.
func (o GetNetworkPeeringsResultOutput) NetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.NetworkName }).(pulumi.StringOutput)
}

// Atlas assigned unique ID for the peering connection.
func (o GetNetworkPeeringsResultOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.PeeringId }).(pulumi.StringOutput)
}

// Cloud provider for this VPC peering connection. If omitted, Atlas sets this parameter to AWS. (Possible Values `AWS`, `AZURE`, `GCP`).
func (o GetNetworkPeeringsResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Name of your Azure resource group.
func (o GetNetworkPeeringsResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Peer VPC CIDR block or subnet.
func (o GetNetworkPeeringsResultOutput) RouteTableCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.RouteTableCidrBlock }).(pulumi.StringOutput)
}

// Status of the Atlas network peering connection: `ADDING_PEER`, `AVAILABLE`, `FAILED`, `DELETING`, `WAITING_FOR_USER`.
func (o GetNetworkPeeringsResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.Status }).(pulumi.StringOutput)
}

// The VPC peering connection status value can be one of the following: `INITIATING`, `PENDING_ACCEPTANCE`, `FAILED`, `FINALIZING`, `AVAILABLE`, `TERMINATING`.
func (o GetNetworkPeeringsResultOutput) StatusName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.StatusName }).(pulumi.StringOutput)
}

// Name of your Azure VNet.
func (o GetNetworkPeeringsResultOutput) VnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VnetName }).(pulumi.StringOutput)
}

// Unique identifier of the peer VPC.
func (o GetNetworkPeeringsResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPeeringsResult) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkPeeringsResultArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPeeringsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPeeringsResult)(nil)).Elem()
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutput() GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) ToGetNetworkPeeringsResultArrayOutputWithContext(ctx context.Context) GetNetworkPeeringsResultArrayOutput {
	return o
}

func (o GetNetworkPeeringsResultArrayOutput) Index(i pulumi.IntInput) GetNetworkPeeringsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPeeringsResult {
		return vs[0].([]GetNetworkPeeringsResult)[vs[1].(int)]
	}).(GetNetworkPeeringsResultOutput)
}

type GetOnlineArchiveCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchiveCriteriaInput is an input type that accepts GetOnlineArchiveCriteriaArgs and GetOnlineArchiveCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaInput` via:
//
//          GetOnlineArchiveCriteriaArgs{...}
type GetOnlineArchiveCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput
	ToGetOnlineArchiveCriteriaOutputWithContext(context.Context) GetOnlineArchiveCriteriaOutput
}

type GetOnlineArchiveCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchiveCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return i.ToGetOnlineArchiveCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArgs) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaOutput)
}

// GetOnlineArchiveCriteriaArrayInput is an input type that accepts GetOnlineArchiveCriteriaArray and GetOnlineArchiveCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchiveCriteriaArrayInput` via:
//
//          GetOnlineArchiveCriteriaArray{ GetOnlineArchiveCriteriaArgs{...} }
type GetOnlineArchiveCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput
	ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Context) GetOnlineArchiveCriteriaArrayOutput
}

type GetOnlineArchiveCriteriaArray []GetOnlineArchiveCriteriaInput

func (GetOnlineArchiveCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return i.ToGetOnlineArchiveCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchiveCriteriaArray) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchiveCriteriaArrayOutput)
}

type GetOnlineArchiveCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutput() GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) ToGetOnlineArchiveCriteriaOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaOutput {
	return o
}

func (o GetOnlineArchiveCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchiveCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchiveCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchiveCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchiveCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchiveCriteria)(nil)).Elem()
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutput() GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) ToGetOnlineArchiveCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchiveCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchiveCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchiveCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchiveCriteria {
		return vs[0].([]GetOnlineArchiveCriteria)[vs[1].(int)]
	}).(GetOnlineArchiveCriteriaOutput)
}

type GetOnlineArchivePartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivePartitionFieldInput is an input type that accepts GetOnlineArchivePartitionFieldArgs and GetOnlineArchivePartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldInput` via:
//
//          GetOnlineArchivePartitionFieldArgs{...}
type GetOnlineArchivePartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput
	ToGetOnlineArchivePartitionFieldOutputWithContext(context.Context) GetOnlineArchivePartitionFieldOutput
}

type GetOnlineArchivePartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivePartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return i.ToGetOnlineArchivePartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArgs) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldOutput)
}

// GetOnlineArchivePartitionFieldArrayInput is an input type that accepts GetOnlineArchivePartitionFieldArray and GetOnlineArchivePartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivePartitionFieldArrayInput` via:
//
//          GetOnlineArchivePartitionFieldArray{ GetOnlineArchivePartitionFieldArgs{...} }
type GetOnlineArchivePartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput
	ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivePartitionFieldArrayOutput
}

type GetOnlineArchivePartitionFieldArray []GetOnlineArchivePartitionFieldInput

func (GetOnlineArchivePartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return i.ToGetOnlineArchivePartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivePartitionFieldArray) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivePartitionFieldArrayOutput)
}

type GetOnlineArchivePartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutput() GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) ToGetOnlineArchivePartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivePartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivePartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivePartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivePartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivePartitionField)(nil)).Elem()
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutput() GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) ToGetOnlineArchivePartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivePartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivePartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivePartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivePartitionField {
		return vs[0].([]GetOnlineArchivePartitionField)[vs[1].(int)]
	}).(GetOnlineArchivePartitionFieldOutput)
}

type GetOnlineArchivesResult struct {
	ArchiveId string `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	ClusterName     string                                  `pulumi:"clusterName"`
	CollName        string                                  `pulumi:"collName"`
	Criterias       []GetOnlineArchivesResultCriteria       `pulumi:"criterias"`
	DbName          string                                  `pulumi:"dbName"`
	PartitionFields []GetOnlineArchivesResultPartitionField `pulumi:"partitionFields"`
	Paused          bool                                    `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId string `pulumi:"projectId"`
	State     string `pulumi:"state"`
}

// GetOnlineArchivesResultInput is an input type that accepts GetOnlineArchivesResultArgs and GetOnlineArchivesResultOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultInput` via:
//
//          GetOnlineArchivesResultArgs{...}
type GetOnlineArchivesResultInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput
	ToGetOnlineArchivesResultOutputWithContext(context.Context) GetOnlineArchivesResultOutput
}

type GetOnlineArchivesResultArgs struct {
	ArchiveId pulumi.StringInput `pulumi:"archiveId"`
	// Name of the cluster that contains the collection.
	ClusterName     pulumi.StringInput                              `pulumi:"clusterName"`
	CollName        pulumi.StringInput                              `pulumi:"collName"`
	Criterias       GetOnlineArchivesResultCriteriaArrayInput       `pulumi:"criterias"`
	DbName          pulumi.StringInput                              `pulumi:"dbName"`
	PartitionFields GetOnlineArchivesResultPartitionFieldArrayInput `pulumi:"partitionFields"`
	Paused          pulumi.BoolInput                                `pulumi:"paused"`
	// The unique ID for the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	State     pulumi.StringInput `pulumi:"state"`
}

func (GetOnlineArchivesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return i.ToGetOnlineArchivesResultOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArgs) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultOutput)
}

// GetOnlineArchivesResultArrayInput is an input type that accepts GetOnlineArchivesResultArray and GetOnlineArchivesResultArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultArrayInput` via:
//
//          GetOnlineArchivesResultArray{ GetOnlineArchivesResultArgs{...} }
type GetOnlineArchivesResultArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput
	ToGetOnlineArchivesResultArrayOutputWithContext(context.Context) GetOnlineArchivesResultArrayOutput
}

type GetOnlineArchivesResultArray []GetOnlineArchivesResultInput

func (GetOnlineArchivesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return i.ToGetOnlineArchivesResultArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultArray) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultArrayOutput)
}

type GetOnlineArchivesResultOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutput() GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ToGetOnlineArchivesResultOutputWithContext(ctx context.Context) GetOnlineArchivesResultOutput {
	return o
}

func (o GetOnlineArchivesResultOutput) ArchiveId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ArchiveId }).(pulumi.StringOutput)
}

// Name of the cluster that contains the collection.
func (o GetOnlineArchivesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) CollName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.CollName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) Criterias() GetOnlineArchivesResultCriteriaArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultCriteria { return v.Criterias }).(GetOnlineArchivesResultCriteriaArrayOutput)
}

func (o GetOnlineArchivesResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.DbName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) PartitionFields() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) []GetOnlineArchivesResultPartitionField { return v.PartitionFields }).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

func (o GetOnlineArchivesResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// The unique ID for the project.
func (o GetOnlineArchivesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResult) string { return v.State }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResult)(nil)).Elem()
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutput() GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) ToGetOnlineArchivesResultArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultArrayOutput {
	return o
}

func (o GetOnlineArchivesResultArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResult {
		return vs[0].([]GetOnlineArchivesResult)[vs[1].(int)]
	}).(GetOnlineArchivesResultOutput)
}

type GetOnlineArchivesResultCriteria struct {
	DateField       string `pulumi:"dateField"`
	DateFormat      string `pulumi:"dateFormat"`
	ExpireAfterDays int    `pulumi:"expireAfterDays"`
	Query           string `pulumi:"query"`
	Type            string `pulumi:"type"`
}

// GetOnlineArchivesResultCriteriaInput is an input type that accepts GetOnlineArchivesResultCriteriaArgs and GetOnlineArchivesResultCriteriaOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaInput` via:
//
//          GetOnlineArchivesResultCriteriaArgs{...}
type GetOnlineArchivesResultCriteriaInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput
	ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaOutput
}

type GetOnlineArchivesResultCriteriaArgs struct {
	DateField       pulumi.StringInput `pulumi:"dateField"`
	DateFormat      pulumi.StringInput `pulumi:"dateFormat"`
	ExpireAfterDays pulumi.IntInput    `pulumi:"expireAfterDays"`
	Query           pulumi.StringInput `pulumi:"query"`
	Type            pulumi.StringInput `pulumi:"type"`
}

func (GetOnlineArchivesResultCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return i.ToGetOnlineArchivesResultCriteriaOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArgs) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaOutput)
}

// GetOnlineArchivesResultCriteriaArrayInput is an input type that accepts GetOnlineArchivesResultCriteriaArray and GetOnlineArchivesResultCriteriaArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultCriteriaArrayInput` via:
//
//          GetOnlineArchivesResultCriteriaArray{ GetOnlineArchivesResultCriteriaArgs{...} }
type GetOnlineArchivesResultCriteriaArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput
	ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Context) GetOnlineArchivesResultCriteriaArrayOutput
}

type GetOnlineArchivesResultCriteriaArray []GetOnlineArchivesResultCriteriaInput

func (GetOnlineArchivesResultCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return i.ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultCriteriaArray) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultCriteriaArrayOutput)
}

type GetOnlineArchivesResultCriteriaOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutput() GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) ToGetOnlineArchivesResultCriteriaOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaOutput) DateField() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateField }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) DateFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.DateFormat }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) ExpireAfterDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) int { return v.ExpireAfterDays }).(pulumi.IntOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultCriteriaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultCriteria) string { return v.Type }).(pulumi.StringOutput)
}

type GetOnlineArchivesResultCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultCriteria)(nil)).Elem()
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutput() GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) ToGetOnlineArchivesResultCriteriaArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultCriteriaArrayOutput {
	return o
}

func (o GetOnlineArchivesResultCriteriaArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultCriteria {
		return vs[0].([]GetOnlineArchivesResultCriteria)[vs[1].(int)]
	}).(GetOnlineArchivesResultCriteriaOutput)
}

type GetOnlineArchivesResultPartitionField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
	Order     int    `pulumi:"order"`
}

// GetOnlineArchivesResultPartitionFieldInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArgs and GetOnlineArchivesResultPartitionFieldOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldInput` via:
//
//          GetOnlineArchivesResultPartitionFieldArgs{...}
type GetOnlineArchivesResultPartitionFieldInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput
	ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldOutput
}

type GetOnlineArchivesResultPartitionFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
	Order     pulumi.IntInput    `pulumi:"order"`
}

func (GetOnlineArchivesResultPartitionFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArgs) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldOutput)
}

// GetOnlineArchivesResultPartitionFieldArrayInput is an input type that accepts GetOnlineArchivesResultPartitionFieldArray and GetOnlineArchivesResultPartitionFieldArrayOutput values.
// You can construct a concrete instance of `GetOnlineArchivesResultPartitionFieldArrayInput` via:
//
//          GetOnlineArchivesResultPartitionFieldArray{ GetOnlineArchivesResultPartitionFieldArgs{...} }
type GetOnlineArchivesResultPartitionFieldArrayInput interface {
	pulumi.Input

	ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput
	ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput
}

type GetOnlineArchivesResultPartitionFieldArray []GetOnlineArchivesResultPartitionFieldInput

func (GetOnlineArchivesResultPartitionFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return i.ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(context.Background())
}

func (i GetOnlineArchivesResultPartitionFieldArray) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOnlineArchivesResultPartitionFieldArrayOutput)
}

type GetOnlineArchivesResultPartitionFieldOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutput() GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) ToGetOnlineArchivesResultPartitionFieldOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) string { return v.FieldType }).(pulumi.StringOutput)
}

func (o GetOnlineArchivesResultPartitionFieldOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetOnlineArchivesResultPartitionField) int { return v.Order }).(pulumi.IntOutput)
}

type GetOnlineArchivesResultPartitionFieldArrayOutput struct{ *pulumi.OutputState }

func (GetOnlineArchivesResultPartitionFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOnlineArchivesResultPartitionField)(nil)).Elem()
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutput() GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) ToGetOnlineArchivesResultPartitionFieldArrayOutputWithContext(ctx context.Context) GetOnlineArchivesResultPartitionFieldArrayOutput {
	return o
}

func (o GetOnlineArchivesResultPartitionFieldArrayOutput) Index(i pulumi.IntInput) GetOnlineArchivesResultPartitionFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOnlineArchivesResultPartitionField {
		return vs[0].([]GetOnlineArchivesResultPartitionField)[vs[1].(int)]
	}).(GetOnlineArchivesResultPartitionFieldOutput)
}

type GetProjectTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectTeamInput is an input type that accepts GetProjectTeamArgs and GetProjectTeamOutput values.
// You can construct a concrete instance of `GetProjectTeamInput` via:
//
//          GetProjectTeamArgs{...}
type GetProjectTeamInput interface {
	pulumi.Input

	ToGetProjectTeamOutput() GetProjectTeamOutput
	ToGetProjectTeamOutputWithContext(context.Context) GetProjectTeamOutput
}

type GetProjectTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return i.ToGetProjectTeamOutputWithContext(context.Background())
}

func (i GetProjectTeamArgs) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamOutput)
}

// GetProjectTeamArrayInput is an input type that accepts GetProjectTeamArray and GetProjectTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectTeamArrayInput` via:
//
//          GetProjectTeamArray{ GetProjectTeamArgs{...} }
type GetProjectTeamArrayInput interface {
	pulumi.Input

	ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput
	ToGetProjectTeamArrayOutputWithContext(context.Context) GetProjectTeamArrayOutput
}

type GetProjectTeamArray []GetProjectTeamInput

func (GetProjectTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return i.ToGetProjectTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectTeamArray) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectTeamArrayOutput)
}

type GetProjectTeamOutput struct{ *pulumi.OutputState }

func (GetProjectTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutput() GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) ToGetProjectTeamOutputWithContext(ctx context.Context) GetProjectTeamOutput {
	return o
}

func (o GetProjectTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectTeam)(nil)).Elem()
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutput() GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) ToGetProjectTeamArrayOutputWithContext(ctx context.Context) GetProjectTeamArrayOutput {
	return o
}

func (o GetProjectTeamArrayOutput) Index(i pulumi.IntInput) GetProjectTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectTeam {
		return vs[0].([]GetProjectTeam)[vs[1].(int)]
	}).(GetProjectTeamOutput)
}

type GetProjectsResult struct {
	ClusterCount int    `pulumi:"clusterCount"`
	Created      string `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id string `pulumi:"id"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name string `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	// *`clusterCount` - The number of Atlas clusters deployed in the project.
	// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	OrgId string                  `pulumi:"orgId"`
	Teams []GetProjectsResultTeam `pulumi:"teams"`
}

// GetProjectsResultInput is an input type that accepts GetProjectsResultArgs and GetProjectsResultOutput values.
// You can construct a concrete instance of `GetProjectsResultInput` via:
//
//          GetProjectsResultArgs{...}
type GetProjectsResultInput interface {
	pulumi.Input

	ToGetProjectsResultOutput() GetProjectsResultOutput
	ToGetProjectsResultOutputWithContext(context.Context) GetProjectsResultOutput
}

type GetProjectsResultArgs struct {
	ClusterCount pulumi.IntInput    `pulumi:"clusterCount"`
	Created      pulumi.StringInput `pulumi:"created"`
	// Autogenerated Unique ID for this data source.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the organization you want to create the project within.
	// *`clusterCount` - The number of Atlas clusters deployed in the project.
	// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
	// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
	// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
	//   The following are valid roles:
	// * `GROUP_OWNER`
	// * `GROUP_READ_ONLY`
	// * `GROUP_DATA_ACCESS_ADMIN`
	// * `GROUP_DATA_ACCESS_READ_WRITE`
	// * `GROUP_DATA_ACCESS_READ_ONLY`
	// * `GROUP_CLUSTER_MANAGER`
	OrgId pulumi.StringInput              `pulumi:"orgId"`
	Teams GetProjectsResultTeamArrayInput `pulumi:"teams"`
}

func (GetProjectsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return i.ToGetProjectsResultOutputWithContext(context.Background())
}

func (i GetProjectsResultArgs) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultOutput)
}

// GetProjectsResultArrayInput is an input type that accepts GetProjectsResultArray and GetProjectsResultArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultArrayInput` via:
//
//          GetProjectsResultArray{ GetProjectsResultArgs{...} }
type GetProjectsResultArrayInput interface {
	pulumi.Input

	ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput
	ToGetProjectsResultArrayOutputWithContext(context.Context) GetProjectsResultArrayOutput
}

type GetProjectsResultArray []GetProjectsResultInput

func (GetProjectsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return i.ToGetProjectsResultArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultArray) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultArrayOutput)
}

type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResult) int { return v.ClusterCount }).(pulumi.IntOutput)
}

func (o GetProjectsResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Created }).(pulumi.StringOutput)
}

// Autogenerated Unique ID for this data source.
func (o GetProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the project you want to create. (Cannot be changed via this Provider after creation.)
func (o GetProjectsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the organization you want to create the project within.
// *`clusterCount` - The number of Atlas clusters deployed in the project.
// *`created` - The ISO-8601-formatted timestamp of when Atlas created the project.
// * `teams.#.team_id` - The unique identifier of the team you want to associate with the project. The team and project must share the same parent organization.
// * `teams.#.role_names` - Each string in the array represents a project role assigned to the team. Every user associated with the team inherits these roles.
//   The following are valid roles:
// * `GROUP_OWNER`
// * `GROUP_READ_ONLY`
// * `GROUP_DATA_ACCESS_ADMIN`
// * `GROUP_DATA_ACCESS_READ_WRITE`
// * `GROUP_DATA_ACCESS_READ_ONLY`
// * `GROUP_CLUSTER_MANAGER`
func (o GetProjectsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Teams() GetProjectsResultTeamArrayOutput {
	return o.ApplyT(func(v GetProjectsResult) []GetProjectsResultTeam { return v.Teams }).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutput() GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) ToGetProjectsResultArrayOutputWithContext(ctx context.Context) GetProjectsResultArrayOutput {
	return o
}

func (o GetProjectsResultArrayOutput) Index(i pulumi.IntInput) GetProjectsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResult {
		return vs[0].([]GetProjectsResult)[vs[1].(int)]
	}).(GetProjectsResultOutput)
}

type GetProjectsResultTeam struct {
	RoleNames []string `pulumi:"roleNames"`
	TeamId    string   `pulumi:"teamId"`
}

// GetProjectsResultTeamInput is an input type that accepts GetProjectsResultTeamArgs and GetProjectsResultTeamOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamInput` via:
//
//          GetProjectsResultTeamArgs{...}
type GetProjectsResultTeamInput interface {
	pulumi.Input

	ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput
	ToGetProjectsResultTeamOutputWithContext(context.Context) GetProjectsResultTeamOutput
}

type GetProjectsResultTeamArgs struct {
	RoleNames pulumi.StringArrayInput `pulumi:"roleNames"`
	TeamId    pulumi.StringInput      `pulumi:"teamId"`
}

func (GetProjectsResultTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return i.ToGetProjectsResultTeamOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArgs) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamOutput)
}

// GetProjectsResultTeamArrayInput is an input type that accepts GetProjectsResultTeamArray and GetProjectsResultTeamArrayOutput values.
// You can construct a concrete instance of `GetProjectsResultTeamArrayInput` via:
//
//          GetProjectsResultTeamArray{ GetProjectsResultTeamArgs{...} }
type GetProjectsResultTeamArrayInput interface {
	pulumi.Input

	ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput
	ToGetProjectsResultTeamArrayOutputWithContext(context.Context) GetProjectsResultTeamArrayOutput
}

type GetProjectsResultTeamArray []GetProjectsResultTeamInput

func (GetProjectsResultTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return i.ToGetProjectsResultTeamArrayOutputWithContext(context.Background())
}

func (i GetProjectsResultTeamArray) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsResultTeamArrayOutput)
}

type GetProjectsResultTeamOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutput() GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) ToGetProjectsResultTeamOutputWithContext(ctx context.Context) GetProjectsResultTeamOutput {
	return o
}

func (o GetProjectsResultTeamOutput) RoleNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) []string { return v.RoleNames }).(pulumi.StringArrayOutput)
}

func (o GetProjectsResultTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResultTeam) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetProjectsResultTeamArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsResultTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsResultTeam)(nil)).Elem()
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutput() GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) ToGetProjectsResultTeamArrayOutputWithContext(ctx context.Context) GetProjectsResultTeamArrayOutput {
	return o
}

func (o GetProjectsResultTeamArrayOutput) Index(i pulumi.IntInput) GetProjectsResultTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsResultTeam {
		return vs[0].([]GetProjectsResultTeam)[vs[1].(int)]
	}).(GetProjectsResultTeamOutput)
}

type GetSearchIndexesResult struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer string `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers *string `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName string `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName string `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database string `pulumi:"database"`
	IndexId  string `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic *bool `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields *string `pulumi:"mappingsFields"`
	// Name of the index.
	Name string `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId string `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer *string `pulumi:"searchAnalyzer"`
	Status         string  `pulumi:"status"`
}

// GetSearchIndexesResultInput is an input type that accepts GetSearchIndexesResultArgs and GetSearchIndexesResultOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultInput` via:
//
//          GetSearchIndexesResultArgs{...}
type GetSearchIndexesResultInput interface {
	pulumi.Input

	ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput
	ToGetSearchIndexesResultOutputWithContext(context.Context) GetSearchIndexesResultOutput
}

type GetSearchIndexesResultArgs struct {
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
	Analyzer pulumi.StringInput `pulumi:"analyzer"`
	// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
	Analyzers pulumi.StringPtrInput `pulumi:"analyzers"`
	// Name of the cluster containing the collection with one or more Atlas Search indexes.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// Name of the collection with one or more Atlas Search indexes.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// (Required) Name of the database the collection is in.
	Database pulumi.StringInput `pulumi:"database"`
	IndexId  pulumi.StringInput `pulumi:"indexId"`
	// Flag indicating whether the index uses dynamic or static mappings.
	MappingsDynamic pulumi.BoolPtrInput `pulumi:"mappingsDynamic"`
	// Object containing one or more field specifications.
	MappingsFields pulumi.StringPtrInput `pulumi:"mappingsFields"`
	// Name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
	SearchAnalyzer pulumi.StringPtrInput `pulumi:"searchAnalyzer"`
	Status         pulumi.StringInput    `pulumi:"status"`
}

func (GetSearchIndexesResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return i.ToGetSearchIndexesResultOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArgs) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultOutput)
}

// GetSearchIndexesResultArrayInput is an input type that accepts GetSearchIndexesResultArray and GetSearchIndexesResultArrayOutput values.
// You can construct a concrete instance of `GetSearchIndexesResultArrayInput` via:
//
//          GetSearchIndexesResultArray{ GetSearchIndexesResultArgs{...} }
type GetSearchIndexesResultArrayInput interface {
	pulumi.Input

	ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput
	ToGetSearchIndexesResultArrayOutputWithContext(context.Context) GetSearchIndexesResultArrayOutput
}

type GetSearchIndexesResultArray []GetSearchIndexesResultInput

func (GetSearchIndexesResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return i.ToGetSearchIndexesResultArrayOutputWithContext(context.Background())
}

func (i GetSearchIndexesResultArray) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSearchIndexesResultArrayOutput)
}

type GetSearchIndexesResultOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutput() GetSearchIndexesResultOutput {
	return o
}

func (o GetSearchIndexesResultOutput) ToGetSearchIndexesResultOutputWithContext(ctx context.Context) GetSearchIndexesResultOutput {
	return o
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when creating the index.
func (o GetSearchIndexesResultOutput) Analyzer() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Analyzer }).(pulumi.StringOutput)
}

// [Custom analyzers](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/custom/#std-label-custom-analyzers) to use in this index (this is an array of objects).
func (o GetSearchIndexesResultOutput) Analyzers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.Analyzers }).(pulumi.StringPtrOutput)
}

// Name of the cluster containing the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ClusterName }).(pulumi.StringOutput)
}

// Name of the collection with one or more Atlas Search indexes.
func (o GetSearchIndexesResultOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.CollectionName }).(pulumi.StringOutput)
}

// (Required) Name of the database the collection is in.
func (o GetSearchIndexesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetSearchIndexesResultOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.IndexId }).(pulumi.StringOutput)
}

// Flag indicating whether the index uses dynamic or static mappings.
func (o GetSearchIndexesResultOutput) MappingsDynamic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *bool { return v.MappingsDynamic }).(pulumi.BoolPtrOutput)
}

// Object containing one or more field specifications.
func (o GetSearchIndexesResultOutput) MappingsFields() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.MappingsFields }).(pulumi.StringPtrOutput)
}

// Name of the index.
func (o GetSearchIndexesResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the [project](https://docs.atlas.mongodb.com/organizations-projects/#std-label-projects) that contains the specified cluster.
func (o GetSearchIndexesResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// [Analyzer](https://docs.atlas.mongodb.com/reference/atlas-search/analyzers/#std-label-analyzers-ref) to use when searching the index.
func (o GetSearchIndexesResultOutput) SearchAnalyzer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) *string { return v.SearchAnalyzer }).(pulumi.StringPtrOutput)
}

func (o GetSearchIndexesResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSearchIndexesResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetSearchIndexesResultArrayOutput struct{ *pulumi.OutputState }

func (GetSearchIndexesResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSearchIndexesResult)(nil)).Elem()
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutput() GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) ToGetSearchIndexesResultArrayOutputWithContext(ctx context.Context) GetSearchIndexesResultArrayOutput {
	return o
}

func (o GetSearchIndexesResultArrayOutput) Index(i pulumi.IntInput) GetSearchIndexesResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSearchIndexesResult {
		return vs[0].([]GetSearchIndexesResult)[vs[1].(int)]
	}).(GetSearchIndexesResultOutput)
}

type GetThirdPartyIntegrationsResult struct {
	// Unique identifier of your New Relic account.
	AccountId string `pulumi:"accountId"`
	// Your API Key.
	ApiKey string `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    string `pulumi:"apiToken"`
	ChannelName string `pulumi:"channelName"`
	// Your Flowdock Flow name.
	FlowName string `pulumi:"flowName"`
	// Your License Key.
	LicenseKey string `pulumi:"licenseKey"`
	// Your Flowdock organization name.
	// * `WEBHOOK`
	OrgName string `pulumi:"orgName"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId string `pulumi:"projectId"`
	// Your Insights Query Key.
	// * `OPS_GENIE`
	ReadToken string `pulumi:"readToken"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	// * `VICTOR_OPS`
	Region string `pulumi:"region"`
	// An optional field for your Routing Key.
	// * `FLOWDOCK`
	RoutingKey string `pulumi:"routingKey"`
	// An optional field for your webhook secret.
	Secret string `pulumi:"secret"`
	// Your Service Key.
	// * `DATADOG`
	ServiceKey string `pulumi:"serviceKey"`
	TeamName   string `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type string `pulumi:"type"`
	// Your webhook URL.
	Url string `pulumi:"url"`
	// Your Insights Insert Key.
	WriteToken string `pulumi:"writeToken"`
}

// GetThirdPartyIntegrationsResultInput is an input type that accepts GetThirdPartyIntegrationsResultArgs and GetThirdPartyIntegrationsResultOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultInput` via:
//
//          GetThirdPartyIntegrationsResultArgs{...}
type GetThirdPartyIntegrationsResultInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput
	ToGetThirdPartyIntegrationsResultOutputWithContext(context.Context) GetThirdPartyIntegrationsResultOutput
}

type GetThirdPartyIntegrationsResultArgs struct {
	// Unique identifier of your New Relic account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// Your API Key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Your API Token.
	ApiToken    pulumi.StringInput `pulumi:"apiToken"`
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// Your Flowdock Flow name.
	FlowName pulumi.StringInput `pulumi:"flowName"`
	// Your License Key.
	LicenseKey pulumi.StringInput `pulumi:"licenseKey"`
	// Your Flowdock organization name.
	// * `WEBHOOK`
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// The unique ID for the project to get all Third-Party service integrations
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Your Insights Query Key.
	// * `OPS_GENIE`
	ReadToken pulumi.StringInput `pulumi:"readToken"`
	// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
	// * `VICTOR_OPS`
	Region pulumi.StringInput `pulumi:"region"`
	// An optional field for your Routing Key.
	// * `FLOWDOCK`
	RoutingKey pulumi.StringInput `pulumi:"routingKey"`
	// An optional field for your webhook secret.
	Secret pulumi.StringInput `pulumi:"secret"`
	// Your Service Key.
	// * `DATADOG`
	ServiceKey pulumi.StringInput `pulumi:"serviceKey"`
	TeamName   pulumi.StringInput `pulumi:"teamName"`
	// (Required) Thirt-Party service integration type.
	Type pulumi.StringInput `pulumi:"type"`
	// Your webhook URL.
	Url pulumi.StringInput `pulumi:"url"`
	// Your Insights Insert Key.
	WriteToken pulumi.StringInput `pulumi:"writeToken"`
}

func (GetThirdPartyIntegrationsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return i.ToGetThirdPartyIntegrationsResultOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArgs) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultOutput)
}

// GetThirdPartyIntegrationsResultArrayInput is an input type that accepts GetThirdPartyIntegrationsResultArray and GetThirdPartyIntegrationsResultArrayOutput values.
// You can construct a concrete instance of `GetThirdPartyIntegrationsResultArrayInput` via:
//
//          GetThirdPartyIntegrationsResultArray{ GetThirdPartyIntegrationsResultArgs{...} }
type GetThirdPartyIntegrationsResultArrayInput interface {
	pulumi.Input

	ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput
	ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Context) GetThirdPartyIntegrationsResultArrayOutput
}

type GetThirdPartyIntegrationsResultArray []GetThirdPartyIntegrationsResultInput

func (GetThirdPartyIntegrationsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return i.ToGetThirdPartyIntegrationsResultArrayOutputWithContext(context.Background())
}

func (i GetThirdPartyIntegrationsResultArray) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetThirdPartyIntegrationsResultArrayOutput)
}

type GetThirdPartyIntegrationsResultOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutput() GetThirdPartyIntegrationsResultOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultOutput) ToGetThirdPartyIntegrationsResultOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultOutput {
	return o
}

// Unique identifier of your New Relic account.
func (o GetThirdPartyIntegrationsResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Your API Key.
func (o GetThirdPartyIntegrationsResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Your API Token.
func (o GetThirdPartyIntegrationsResultOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ChannelName }).(pulumi.StringOutput)
}

// Your Flowdock Flow name.
func (o GetThirdPartyIntegrationsResultOutput) FlowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.FlowName }).(pulumi.StringOutput)
}

// Your License Key.
func (o GetThirdPartyIntegrationsResultOutput) LicenseKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.LicenseKey }).(pulumi.StringOutput)
}

// Your Flowdock organization name.
// * `WEBHOOK`
func (o GetThirdPartyIntegrationsResultOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.OrgName }).(pulumi.StringOutput)
}

// The unique ID for the project to get all Third-Party service integrations
func (o GetThirdPartyIntegrationsResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Your Insights Query Key.
// * `OPS_GENIE`
func (o GetThirdPartyIntegrationsResultOutput) ReadToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ReadToken }).(pulumi.StringOutput)
}

// Indicates which API URL to use, either US or EU. Opsgenie will use US by default.
// * `VICTOR_OPS`
func (o GetThirdPartyIntegrationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Region }).(pulumi.StringOutput)
}

// An optional field for your Routing Key.
// * `FLOWDOCK`
func (o GetThirdPartyIntegrationsResultOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.RoutingKey }).(pulumi.StringOutput)
}

// An optional field for your webhook secret.
func (o GetThirdPartyIntegrationsResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Secret }).(pulumi.StringOutput)
}

// Your Service Key.
// * `DATADOG`
func (o GetThirdPartyIntegrationsResultOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o GetThirdPartyIntegrationsResultOutput) TeamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.TeamName }).(pulumi.StringOutput)
}

// (Required) Thirt-Party service integration type.
func (o GetThirdPartyIntegrationsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Type }).(pulumi.StringOutput)
}

// Your webhook URL.
func (o GetThirdPartyIntegrationsResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.Url }).(pulumi.StringOutput)
}

// Your Insights Insert Key.
func (o GetThirdPartyIntegrationsResultOutput) WriteToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetThirdPartyIntegrationsResult) string { return v.WriteToken }).(pulumi.StringOutput)
}

type GetThirdPartyIntegrationsResultArrayOutput struct{ *pulumi.OutputState }

func (GetThirdPartyIntegrationsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetThirdPartyIntegrationsResult)(nil)).Elem()
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutput() GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) ToGetThirdPartyIntegrationsResultArrayOutputWithContext(ctx context.Context) GetThirdPartyIntegrationsResultArrayOutput {
	return o
}

func (o GetThirdPartyIntegrationsResultArrayOutput) Index(i pulumi.IntInput) GetThirdPartyIntegrationsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetThirdPartyIntegrationsResult {
		return vs[0].([]GetThirdPartyIntegrationsResult)[vs[1].(int)]
	}).(GetThirdPartyIntegrationsResultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherInput)(nil)).Elem(), AlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMatcherArrayInput)(nil)).Elem(), AlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationMetricThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationInput)(nil)).Elem(), AlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationNotificationArrayInput)(nil)).Elem(), AlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConfigurationThresholdConfigPtrInput)(nil)).Elem(), AlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemDailyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemHourlyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemMonthlyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudBackupSchedulePolicyItemWeeklyPtrInput)(nil)).Elem(), CloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationAwsPtrInput)(nil)).Elem(), CloudProviderAccessAuthorizationAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessAuthorizationFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessAuthorizationFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessFeatureUsageArrayInput)(nil)).Elem(), CloudProviderAccessFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), CloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), CloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfigInput)(nil)).Elem(), CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrInput)(nil)).Elem(), CloudProviderSnapshotRestoreJobDeliveryTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterAdvancedConfigurationPtrInput)(nil)).Elem(), ClusterAdvancedConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBiConnectorConfigPtrInput)(nil)).Elem(), ClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringInput)(nil)).Elem(), ClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringArrayInput)(nil)).Elem(), ClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), ClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelInput)(nil)).Elem(), ClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLabelArrayInput)(nil)).Elem(), ClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecInput)(nil)).Elem(), ClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecArrayInput)(nil)).Elem(), ClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), ClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), ClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionInput)(nil)).Elem(), CustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionArrayInput)(nil)).Elem(), CustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceInput)(nil)).Elem(), CustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleActionResourceArrayInput)(nil)).Elem(), CustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleInput)(nil)).Elem(), CustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), CustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeAwsPtrInput)(nil)).Elem(), DataLakeAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeDataProcessRegionPtrInput)(nil)).Elem(), DataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseInput)(nil)).Elem(), DataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseArrayInput)(nil)).Elem(), DataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), DataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewInput)(nil)).Elem(), DataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), DataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreInput)(nil)).Elem(), DataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeStorageStoreArrayInput)(nil)).Elem(), DataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelInput)(nil)).Elem(), DatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserLabelArrayInput)(nil)).Elem(), DatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleInput)(nil)).Elem(), DatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserRoleArrayInput)(nil)).Elem(), DatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeInput)(nil)).Elem(), DatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseUserScopeArrayInput)(nil)).Elem(), DatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAwsKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestAwsKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestAzureKeyVaultConfigPtrInput)(nil)).Elem(), EncryptionAtRestAzureKeyVaultConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionAtRestGoogleCloudKmsConfigPtrInput)(nil)).Elem(), EncryptionAtRestGoogleCloudKmsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsPtrInput)(nil)).Elem(), EventTriggerEventProcessorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgeInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTriggerEventProcessorsAwsEventbridgePtrInput)(nil)).Elem(), EventTriggerEventProcessorsAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigCustomZoneMappingArrayInput)(nil)).Elem(), GlobalClusterConfigCustomZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), LdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkInput)(nil)).Elem(), LdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyLinkArrayInput)(nil)).Elem(), LdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationInput)(nil)).Elem(), LdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LdapVerifyValidationArrayInput)(nil)).Elem(), LdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchiveCriteriaPtrInput)(nil)).Elem(), OnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldInput)(nil)).Elem(), OnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnlineArchivePartitionFieldArrayInput)(nil)).Elem(), OnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamInput)(nil)).Elem(), ProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTeamArrayInput)(nil)).Elem(), ProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*X509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), X509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Get509AuthenticationDatabaseUserCertificateArrayInput)(nil)).Elem(), Get509AuthenticationDatabaseUserCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherInput)(nil)).Elem(), GetAlertConfigurationMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMatcherArrayInput)(nil)).Elem(), GetAlertConfigurationMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationMetricThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationMetricThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationInput)(nil)).Elem(), GetAlertConfigurationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationNotificationArrayInput)(nil)).Elem(), GetAlertConfigurationNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertConfigurationThresholdConfigArrayInput)(nil)).Elem(), GetAlertConfigurationThresholdConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemDailyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemDailyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemHourlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemHourlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemMonthlyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudBackupSchedulePolicyItemWeeklyArrayInput)(nil)).Elem(), GetCloudBackupSchedulePolicyItemWeeklyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessAwsIamRoleFeatureUsageArrayInput)(nil)).Elem(), GetCloudProviderAccessAwsIamRoleFeatureUsageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderAccessSetupAwsConfigArrayInput)(nil)).Elem(), GetCloudProviderAccessSetupAwsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultInput)(nil)).Elem(), GetCloudProviderSnapshotRestoreJobsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotRestoreJobsResultArrayInput)(nil)).Elem(), GetCloudProviderSnapshotRestoreJobsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotsResultInput)(nil)).Elem(), GetCloudProviderSnapshotsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudProviderSnapshotsResultArrayInput)(nil)).Elem(), GetCloudProviderSnapshotsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigInput)(nil)).Elem(), GetClusterBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBiConnectorConfigArrayInput)(nil)).Elem(), GetClusterBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringInput)(nil)).Elem(), GetClusterConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringArrayInput)(nil)).Elem(), GetClusterConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClusterConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelInput)(nil)).Elem(), GetClusterLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterLabelArrayInput)(nil)).Elem(), GetClusterLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecInput)(nil)).Elem(), GetClusterReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecArrayInput)(nil)).Elem(), GetClusterReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClusterReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClusterSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultInput)(nil)).Elem(), GetClustersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultArrayInput)(nil)).Elem(), GetClustersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultBiConnectorConfigArrayInput)(nil)).Elem(), GetClustersResultBiConnectorConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringInput)(nil)).Elem(), GetClustersResultConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringArrayInput)(nil)).Elem(), GetClustersResultConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultConnectionStringPrivateEndpointEndpointArrayInput)(nil)).Elem(), GetClustersResultConnectionStringPrivateEndpointEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelInput)(nil)).Elem(), GetClustersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultLabelArrayInput)(nil)).Elem(), GetClustersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecInput)(nil)).Elem(), GetClustersResultReplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultReplicationSpecRegionsConfigArrayInput)(nil)).Elem(), GetClustersResultReplicationSpecRegionsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayInput)(nil)).Elem(), GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionInput)(nil)).Elem(), GetCustomDbRoleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionArrayInput)(nil)).Elem(), GetCustomDbRoleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceInput)(nil)).Elem(), GetCustomDbRoleActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleActionResourceArrayInput)(nil)).Elem(), GetCustomDbRoleActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRoleInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRoleInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInput)(nil)).Elem(), GetCustomDbRolesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultArrayInput)(nil)).Elem(), GetCustomDbRolesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionInput)(nil)).Elem(), GetCustomDbRolesResultActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultActionResourceArrayInput)(nil)).Elem(), GetCustomDbRolesResultActionResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDbRolesResultInheritedRoleArrayInput)(nil)).Elem(), GetCustomDbRolesResultInheritedRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwInput)(nil)).Elem(), GetDataLakeAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeAwArrayInput)(nil)).Elem(), GetDataLakeAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionInput)(nil)).Elem(), GetDataLakeDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakeDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseInput)(nil)).Elem(), GetDataLakeStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakeStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreInput)(nil)).Elem(), GetDataLakeStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakeStorageStoreArrayInput)(nil)).Elem(), GetDataLakeStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultInput)(nil)).Elem(), GetDataLakesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultArrayInput)(nil)).Elem(), GetDataLakesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwInput)(nil)).Elem(), GetDataLakesResultAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultAwArrayInput)(nil)).Elem(), GetDataLakesResultAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultDataProcessRegionArrayInput)(nil)).Elem(), GetDataLakesResultDataProcessRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseCollectionDataSourceArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseCollectionDataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageDatabaseViewArrayInput)(nil)).Elem(), GetDataLakesResultStorageDatabaseViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreInput)(nil)).Elem(), GetDataLakesResultStorageStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDataLakesResultStorageStoreArrayInput)(nil)).Elem(), GetDataLakesResultStorageStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelInput)(nil)).Elem(), GetDatabaseUserLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserLabelArrayInput)(nil)).Elem(), GetDatabaseUserLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleInput)(nil)).Elem(), GetDatabaseUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserRoleArrayInput)(nil)).Elem(), GetDatabaseUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeInput)(nil)).Elem(), GetDatabaseUserScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUserScopeArrayInput)(nil)).Elem(), GetDatabaseUserScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultInput)(nil)).Elem(), GetDatabaseUsersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultArrayInput)(nil)).Elem(), GetDatabaseUsersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelInput)(nil)).Elem(), GetDatabaseUsersResultLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultLabelArrayInput)(nil)).Elem(), GetDatabaseUsersResultLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleInput)(nil)).Elem(), GetDatabaseUsersResultRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultRoleArrayInput)(nil)).Elem(), GetDatabaseUsersResultRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeInput)(nil)).Elem(), GetDatabaseUsersResultScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseUsersResultScopeArrayInput)(nil)).Elem(), GetDatabaseUsersResultScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorInput)(nil)).Elem(), GetEventTriggerEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggerEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggerEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultInput)(nil)).Elem(), GetEventTriggersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultArrayInput)(nil)).Elem(), GetEventTriggersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventTriggersResultEventProcessorAwsEventbridgeArrayInput)(nil)).Elem(), GetEventTriggersResultEventProcessorAwsEventbridgeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClusterConfigManagedNamespaceArrayInput)(nil)).Elem(), GetGlobalClusterConfigManagedNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapConfigurationUserToDnMappingArrayInput)(nil)).Elem(), GetLdapConfigurationUserToDnMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkInput)(nil)).Elem(), GetLdapVerifyLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyLinkArrayInput)(nil)).Elem(), GetLdapVerifyLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationInput)(nil)).Elem(), GetLdapVerifyValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLdapVerifyValidationArrayInput)(nil)).Elem(), GetLdapVerifyValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultInput)(nil)).Elem(), GetNetworkContainersResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkContainersResultArrayInput)(nil)).Elem(), GetNetworkContainersResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultInput)(nil)).Elem(), GetNetworkPeeringsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPeeringsResultArrayInput)(nil)).Elem(), GetNetworkPeeringsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaInput)(nil)).Elem(), GetOnlineArchiveCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchiveCriteriaArrayInput)(nil)).Elem(), GetOnlineArchiveCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivePartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivePartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultInput)(nil)).Elem(), GetOnlineArchivesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultArrayInput)(nil)).Elem(), GetOnlineArchivesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultCriteriaArrayInput)(nil)).Elem(), GetOnlineArchivesResultCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOnlineArchivesResultPartitionFieldArrayInput)(nil)).Elem(), GetOnlineArchivesResultPartitionFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamInput)(nil)).Elem(), GetProjectTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectTeamArrayInput)(nil)).Elem(), GetProjectTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultInput)(nil)).Elem(), GetProjectsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultArrayInput)(nil)).Elem(), GetProjectsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamInput)(nil)).Elem(), GetProjectsResultTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsResultTeamArrayInput)(nil)).Elem(), GetProjectsResultTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultInput)(nil)).Elem(), GetSearchIndexesResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSearchIndexesResultArrayInput)(nil)).Elem(), GetSearchIndexesResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetThirdPartyIntegrationsResultArrayInput)(nil)).Elem(), GetThirdPartyIntegrationsResultArray{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationMetricThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(AlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(AlertConfigurationThresholdConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemDailyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemHourlyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemMonthlyPtrOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(CloudBackupSchedulePolicyItemWeeklyPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationAwsPtrOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessAuthorizationFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypeConfigOutput{})
	pulumi.RegisterOutputType(CloudProviderSnapshotRestoreJobDeliveryTypeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterAdvancedConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(ClusterBiConnectorConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(ClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterLabelOutput{})
	pulumi.RegisterOutputType(ClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(ClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(ClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(CustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(CustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(DataLakeAwsOutput{})
	pulumi.RegisterOutputType(DataLakeAwsPtrOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(DataLakeDataProcessRegionPtrOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(DataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(DataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(DatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(DatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(DatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAwsKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestAzureKeyVaultConfigPtrOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigOutput{})
	pulumi.RegisterOutputType(EncryptionAtRestGoogleCloudKmsConfigPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsPtrOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(EventTriggerEventProcessorsAwsEventbridgePtrOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigCustomZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(LdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(LdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(LdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(OnlineArchiveCriteriaPtrOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(OnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(ProjectTeamOutput{})
	pulumi.RegisterOutputType(ProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(X509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateOutput{})
	pulumi.RegisterOutputType(Get509AuthenticationDatabaseUserCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMatcherArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationMetricThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigOutput{})
	pulumi.RegisterOutputType(GetAlertConfigurationThresholdConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemDailyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemHourlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemMonthlyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyOutput{})
	pulumi.RegisterOutputType(GetCloudBackupSchedulePolicyItemWeeklyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessAwsIamRoleFeatureUsageArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigOutput{})
	pulumi.RegisterOutputType(GetCloudProviderAccessSetupAwsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotRestoreJobsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultOutput{})
	pulumi.RegisterOutputType(GetCloudProviderSnapshotsResultArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClusterBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClusterConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClusterLabelOutput{})
	pulumi.RegisterOutputType(GetClusterLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClusterReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClusterSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultOutput{})
	pulumi.RegisterOutputType(GetClustersResultArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultBiConnectorConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointOutput{})
	pulumi.RegisterOutputType(GetClustersResultConnectionStringPrivateEndpointEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelOutput{})
	pulumi.RegisterOutputType(GetClustersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigOutput{})
	pulumi.RegisterOutputType(GetClustersResultReplicationSpecRegionsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemOutput{})
	pulumi.RegisterOutputType(GetClustersResultSnapshotBackupPolicyPolicyPolicyItemArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRoleInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultActionResourceArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleOutput{})
	pulumi.RegisterOutputType(GetCustomDbRolesResultInheritedRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwOutput{})
	pulumi.RegisterOutputType(GetDataLakeAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakeDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakeStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultAwArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultDataProcessRegionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseCollectionDataSourceArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageDatabaseViewArrayOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreOutput{})
	pulumi.RegisterOutputType(GetDataLakesResultStorageStoreArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUserScopeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultLabelArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeOutput{})
	pulumi.RegisterOutputType(GetDatabaseUsersResultScopeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggerEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorArrayOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeOutput{})
	pulumi.RegisterOutputType(GetEventTriggersResultEventProcessorAwsEventbridgeArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceOutput{})
	pulumi.RegisterOutputType(GetGlobalClusterConfigManagedNamespaceArrayOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingOutput{})
	pulumi.RegisterOutputType(GetLdapConfigurationUserToDnMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyLinkArrayOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationOutput{})
	pulumi.RegisterOutputType(GetLdapVerifyValidationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultOutput{})
	pulumi.RegisterOutputType(GetNetworkContainersResultArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultOutput{})
	pulumi.RegisterOutputType(GetNetworkPeeringsResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchiveCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivePartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldOutput{})
	pulumi.RegisterOutputType(GetOnlineArchivesResultPartitionFieldArrayOutput{})
	pulumi.RegisterOutputType(GetProjectTeamOutput{})
	pulumi.RegisterOutputType(GetProjectTeamArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
	pulumi.RegisterOutputType(GetProjectsResultArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamOutput{})
	pulumi.RegisterOutputType(GetProjectsResultTeamArrayOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultOutput{})
	pulumi.RegisterOutputType(GetSearchIndexesResultArrayOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultOutput{})
	pulumi.RegisterOutputType(GetThirdPartyIntegrationsResultArrayOutput{})
}
