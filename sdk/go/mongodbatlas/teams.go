// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mongodbatlas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Teams struct {
	pulumi.CustomResourceState

	Name      pulumi.StringOutput      `pulumi:"name"`
	OrgId     pulumi.StringOutput      `pulumi:"orgId"`
	TeamId    pulumi.StringOutput      `pulumi:"teamId"`
	Usernames pulumi.StringArrayOutput `pulumi:"usernames"`
}

// NewTeams registers a new resource with the given unique name, arguments, and options.
func NewTeams(ctx *pulumi.Context,
	name string, args *TeamsArgs, opts ...pulumi.ResourceOption) (*Teams, error) {
	if args == nil || args.OrgId == nil {
		return nil, errors.New("missing required argument 'OrgId'")
	}
	if args == nil || args.Usernames == nil {
		return nil, errors.New("missing required argument 'Usernames'")
	}
	if args == nil {
		args = &TeamsArgs{}
	}
	var resource Teams
	err := ctx.RegisterResource("mongodbatlas:index/teams:Teams", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTeams gets an existing Teams resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTeams(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TeamsState, opts ...pulumi.ResourceOption) (*Teams, error) {
	var resource Teams
	err := ctx.ReadResource("mongodbatlas:index/teams:Teams", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Teams resources.
type teamsState struct {
	Name      *string  `pulumi:"name"`
	OrgId     *string  `pulumi:"orgId"`
	TeamId    *string  `pulumi:"teamId"`
	Usernames []string `pulumi:"usernames"`
}

type TeamsState struct {
	Name      pulumi.StringPtrInput
	OrgId     pulumi.StringPtrInput
	TeamId    pulumi.StringPtrInput
	Usernames pulumi.StringArrayInput
}

func (TeamsState) ElementType() reflect.Type {
	return reflect.TypeOf((*teamsState)(nil)).Elem()
}

type teamsArgs struct {
	Name      *string  `pulumi:"name"`
	OrgId     string   `pulumi:"orgId"`
	Usernames []string `pulumi:"usernames"`
}

// The set of arguments for constructing a Teams resource.
type TeamsArgs struct {
	Name      pulumi.StringPtrInput
	OrgId     pulumi.StringInput
	Usernames pulumi.StringArrayInput
}

func (TeamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*teamsArgs)(nil)).Elem()
}
