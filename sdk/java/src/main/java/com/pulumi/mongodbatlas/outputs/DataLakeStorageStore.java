// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataLakeStorageStore {
    private @Nullable List<String> additionalStorageClasses;
    private @Nullable String bucket;
    private @Nullable String delimiter;
    private @Nullable Boolean includeTags;
    /**
     * @return Name of the Atlas Data Lake.
     * 
     */
    private @Nullable String name;
    private @Nullable String prefix;
    private @Nullable String provider;
    private @Nullable String region;

    private DataLakeStorageStore() {}
    public List<String> additionalStorageClasses() {
        return this.additionalStorageClasses == null ? List.of() : this.additionalStorageClasses;
    }
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    public Optional<String> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }
    public Optional<Boolean> includeTags() {
        return Optional.ofNullable(this.includeTags);
    }
    /**
     * @return Name of the Atlas Data Lake.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    public Optional<String> provider() {
        return Optional.ofNullable(this.provider);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataLakeStorageStore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> additionalStorageClasses;
        private @Nullable String bucket;
        private @Nullable String delimiter;
        private @Nullable Boolean includeTags;
        private @Nullable String name;
        private @Nullable String prefix;
        private @Nullable String provider;
        private @Nullable String region;
        public Builder() {}
        public Builder(DataLakeStorageStore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalStorageClasses = defaults.additionalStorageClasses;
    	      this.bucket = defaults.bucket;
    	      this.delimiter = defaults.delimiter;
    	      this.includeTags = defaults.includeTags;
    	      this.name = defaults.name;
    	      this.prefix = defaults.prefix;
    	      this.provider = defaults.provider;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder additionalStorageClasses(@Nullable List<String> additionalStorageClasses) {
            this.additionalStorageClasses = additionalStorageClasses;
            return this;
        }
        public Builder additionalStorageClasses(String... additionalStorageClasses) {
            return additionalStorageClasses(List.of(additionalStorageClasses));
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder delimiter(@Nullable String delimiter) {
            this.delimiter = delimiter;
            return this;
        }
        @CustomType.Setter
        public Builder includeTags(@Nullable Boolean includeTags) {
            this.includeTags = includeTags;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder provider(@Nullable String provider) {
            this.provider = provider;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public DataLakeStorageStore build() {
            final var o = new DataLakeStorageStore();
            o.additionalStorageClasses = additionalStorageClasses;
            o.bucket = bucket;
            o.delimiter = delimiter;
            o.includeTags = includeTags;
            o.name = name;
            o.prefix = prefix;
            o.provider = provider;
            o.region = region;
            return o;
        }
    }
}
