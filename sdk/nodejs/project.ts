// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * The number of Atlas clusters deployed in the project..
     */
    public /*out*/ readonly clusterCount!: pulumi.Output<number>;
    /**
     * The ISO-8601-formatted timestamp of when Atlas created the project..
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * The name of the project you want to create. (Cannot be changed via this Provider after creation.)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the organization you want to create the project within.
     */
    public readonly orgId!: pulumi.Output<string>;
    public readonly teams!: pulumi.Output<outputs.ProjectTeam[] | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ProjectState | undefined;
            inputs["clusterCount"] = state ? state.clusterCount : undefined;
            inputs["created"] = state ? state.created : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["orgId"] = state ? state.orgId : undefined;
            inputs["teams"] = state ? state.teams : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if (!args || args.orgId === undefined) {
                throw new Error("Missing required property 'orgId'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["orgId"] = args ? args.orgId : undefined;
            inputs["teams"] = args ? args.teams : undefined;
            inputs["clusterCount"] = undefined /*out*/;
            inputs["created"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Project.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * The number of Atlas clusters deployed in the project..
     */
    readonly clusterCount?: pulumi.Input<number>;
    /**
     * The ISO-8601-formatted timestamp of when Atlas created the project..
     */
    readonly created?: pulumi.Input<string>;
    /**
     * The name of the project you want to create. (Cannot be changed via this Provider after creation.)
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the organization you want to create the project within.
     */
    readonly orgId?: pulumi.Input<string>;
    readonly teams?: pulumi.Input<pulumi.Input<inputs.ProjectTeam>[]>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * The name of the project you want to create. (Cannot be changed via this Provider after creation.)
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the organization you want to create the project within.
     */
    readonly orgId: pulumi.Input<string>;
    readonly teams?: pulumi.Input<pulumi.Input<inputs.ProjectTeam>[]>;
}
