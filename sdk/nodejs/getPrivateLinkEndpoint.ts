// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * `mongodbatlas.PrivateLinkEndpoint` describe a Private Endpoint. This represents a Private Endpoint Connection to retrieve details regarding a private endpoint by id in an Atlas project
 *
 * > **NOTE:** Groups and projects are synonymous terms. You may find groupId in the official documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as mongodbatlas from "@pulumi/mongodbatlas";
 *
 * const testMongodbatlasPrivateLinkEndpoint = new mongodbatlas.PrivateLinkEndpoint("test", {
 *     projectId: "<PROJECT-ID>",
 *     providerName: "AWS",
 *     region: "us-east-1",
 * });
 * const testPrivateLinkEndpoint = pulumi.all([testMongodbatlasPrivateLinkEndpoint.privateLinkId, testMongodbatlasPrivateLinkEndpoint.projectId]).apply(([privateLinkId, projectId]) => mongodbatlas.getPrivateLinkEndpoint({
 *     privateLinkId: privateLinkId,
 *     projectId: projectId,
 *     providerName: "AWS",
 * }, { async: true }));
 * ```
 */
export function getPrivateLinkEndpoint(args: GetPrivateLinkEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateLinkEndpointResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivateLinkEndpoint:getPrivateLinkEndpoint", {
        "privateLinkId": args.privateLinkId,
        "projectId": args.projectId,
        "providerName": args.providerName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateLinkEndpoint.
 */
export interface GetPrivateLinkEndpointArgs {
    /**
     * Unique identifier of the private endpoint service that you want to retrieve.
     */
    readonly privateLinkId: string;
    /**
     * Unique identifier for the project.
     */
    readonly projectId: string;
    /**
     * Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts `AWS` or `AZURE`.
     */
    readonly providerName: string;
}

/**
 * A collection of values returned by getPrivateLinkEndpoint.
 */
export interface GetPrivateLinkEndpointResult {
    /**
     * Name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.
     */
    readonly endpointServiceName: string;
    /**
     * Error message pertaining to the AWS PrivateLink connection. Returns null if there are no errors.
     */
    readonly errorMessage: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
     */
    readonly interfaceEndpoints: string[];
    /**
     * All private endpoints that you have added to this Azure Private Link Service.
     */
    readonly privateEndpoints: string[];
    readonly privateLinkId: string;
    /**
     * Name of the Azure Private Link Service that Atlas manages.
     */
    readonly privateLinkServiceName: string;
    /**
     * Resource ID of the Azure Private Link Service that Atlas manages.
     * Returns one of the following values:
     */
    readonly privateLinkServiceResourceId: string;
    readonly projectId: string;
    readonly providerName: string;
    /**
     * Status of the AWS PrivateLink connection.
     */
    readonly status: string;
}
