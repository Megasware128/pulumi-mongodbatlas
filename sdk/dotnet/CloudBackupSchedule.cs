// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    /// <summary>
    /// ## Import
    /// 
    /// Cloud Backup Schedule entries can be imported using project_id and cluster_name, in the format `PROJECTID-CLUSTERNAME`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule test 5d0f1f73cf09a29120e173cf-MyClusterTest
    /// ```
    /// 
    ///  For more information see[MongoDB Atlas API Reference.](https://docs.atlas.mongodb.com/reference/api/cloud-backup/schedule/modify-one-schedule/)
    /// </summary>
    [MongodbatlasResourceType("mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule")]
    public partial class CloudBackupSchedule : Pulumi.CustomResource
    {
        /// <summary>
        /// Unique identifier of the Atlas cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the backup policy.
        /// </summary>
        [Output("idPolicy")]
        public Output<string> IdPolicy { get; private set; } = null!;

        /// <summary>
        /// Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
        /// </summary>
        [Output("nextSnapshot")]
        public Output<string> NextSnapshot { get; private set; } = null!;

        /// <summary>
        /// Daily policy item
        /// </summary>
        [Output("policyItemDaily")]
        public Output<Outputs.CloudBackupSchedulePolicyItemDaily?> PolicyItemDaily { get; private set; } = null!;

        /// <summary>
        /// Hourly policy item
        /// </summary>
        [Output("policyItemHourly")]
        public Output<Outputs.CloudBackupSchedulePolicyItemHourly?> PolicyItemHourly { get; private set; } = null!;

        /// <summary>
        /// Monthly policy item
        /// </summary>
        [Output("policyItemMonthly")]
        public Output<Outputs.CloudBackupSchedulePolicyItemMonthly?> PolicyItemMonthly { get; private set; } = null!;

        /// <summary>
        /// Weekly policy item
        /// </summary>
        [Output("policyItemWeekly")]
        public Output<Outputs.CloudBackupSchedulePolicyItemWeekly?> PolicyItemWeekly { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
        /// </summary>
        [Output("referenceHourOfDay")]
        public Output<int> ReferenceHourOfDay { get; private set; } = null!;

        /// <summary>
        /// UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
        /// </summary>
        [Output("referenceMinuteOfHour")]
        public Output<int> ReferenceMinuteOfHour { get; private set; } = null!;

        /// <summary>
        /// Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
        /// </summary>
        [Output("restoreWindowDays")]
        public Output<int> RestoreWindowDays { get; private set; } = null!;

        /// <summary>
        /// Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
        /// </summary>
        [Output("updateSnapshots")]
        public Output<bool> UpdateSnapshots { get; private set; } = null!;


        /// <summary>
        /// Create a CloudBackupSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudBackupSchedule(string name, CloudBackupScheduleArgs args, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule", name, args ?? new CloudBackupScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudBackupSchedule(string name, Input<string> id, CloudBackupScheduleState? state = null, CustomResourceOptions? options = null)
            : base("mongodbatlas:index/cloudBackupSchedule:CloudBackupSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudBackupSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudBackupSchedule Get(string name, Input<string> id, CloudBackupScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudBackupSchedule(name, id, state, options);
        }
    }

    public sealed class CloudBackupScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Daily policy item
        /// </summary>
        [Input("policyItemDaily")]
        public Input<Inputs.CloudBackupSchedulePolicyItemDailyArgs>? PolicyItemDaily { get; set; }

        /// <summary>
        /// Hourly policy item
        /// </summary>
        [Input("policyItemHourly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemHourlyArgs>? PolicyItemHourly { get; set; }

        /// <summary>
        /// Monthly policy item
        /// </summary>
        [Input("policyItemMonthly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemMonthlyArgs>? PolicyItemMonthly { get; set; }

        /// <summary>
        /// Weekly policy item
        /// </summary>
        [Input("policyItemWeekly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemWeeklyArgs>? PolicyItemWeekly { get; set; }

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
        /// </summary>
        [Input("referenceHourOfDay")]
        public Input<int>? ReferenceHourOfDay { get; set; }

        /// <summary>
        /// UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
        /// </summary>
        [Input("referenceMinuteOfHour")]
        public Input<int>? ReferenceMinuteOfHour { get; set; }

        /// <summary>
        /// Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
        /// </summary>
        [Input("restoreWindowDays")]
        public Input<int>? RestoreWindowDays { get; set; }

        /// <summary>
        /// Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
        /// </summary>
        [Input("updateSnapshots")]
        public Input<bool>? UpdateSnapshots { get; set; }

        public CloudBackupScheduleArgs()
        {
        }
    }

    public sealed class CloudBackupScheduleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the Atlas cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The name of the Atlas cluster that contains the snapshot backup policy you want to retrieve.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Unique identifier of the backup policy.
        /// </summary>
        [Input("idPolicy")]
        public Input<string>? IdPolicy { get; set; }

        /// <summary>
        /// Timestamp in the number of seconds that have elapsed since the UNIX epoch when Atlas takes the next snapshot.
        /// </summary>
        [Input("nextSnapshot")]
        public Input<string>? NextSnapshot { get; set; }

        /// <summary>
        /// Daily policy item
        /// </summary>
        [Input("policyItemDaily")]
        public Input<Inputs.CloudBackupSchedulePolicyItemDailyGetArgs>? PolicyItemDaily { get; set; }

        /// <summary>
        /// Hourly policy item
        /// </summary>
        [Input("policyItemHourly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemHourlyGetArgs>? PolicyItemHourly { get; set; }

        /// <summary>
        /// Monthly policy item
        /// </summary>
        [Input("policyItemMonthly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemMonthlyGetArgs>? PolicyItemMonthly { get; set; }

        /// <summary>
        /// Weekly policy item
        /// </summary>
        [Input("policyItemWeekly")]
        public Input<Inputs.CloudBackupSchedulePolicyItemWeeklyGetArgs>? PolicyItemWeekly { get; set; }

        /// <summary>
        /// The unique identifier of the project for the Atlas cluster.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items.
        /// </summary>
        [Input("referenceHourOfDay")]
        public Input<int>? ReferenceHourOfDay { get; set; }

        /// <summary>
        /// UTC Minutes after `reference_hour_of_day` that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.
        /// </summary>
        [Input("referenceMinuteOfHour")]
        public Input<int>? ReferenceMinuteOfHour { get; set; }

        /// <summary>
        /// Number of days back in time you can restore to with point-in-time accuracy. Must be a positive, non-zero integer.
        /// </summary>
        [Input("restoreWindowDays")]
        public Input<int>? RestoreWindowDays { get; set; }

        /// <summary>
        /// Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.
        /// </summary>
        [Input("updateSnapshots")]
        public Input<bool>? UpdateSnapshots { get; set; }

        public CloudBackupScheduleState()
        {
        }
    }
}
