// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OnlineArchiveCriteria {
    private @Nullable String dateField;
    private @Nullable String dateFormat;
    private @Nullable Integer expireAfterDays;
    private @Nullable String query;
    private String type;

    private OnlineArchiveCriteria() {}
    public Optional<String> dateField() {
        return Optional.ofNullable(this.dateField);
    }
    public Optional<String> dateFormat() {
        return Optional.ofNullable(this.dateFormat);
    }
    public Optional<Integer> expireAfterDays() {
        return Optional.ofNullable(this.expireAfterDays);
    }
    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnlineArchiveCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dateField;
        private @Nullable String dateFormat;
        private @Nullable Integer expireAfterDays;
        private @Nullable String query;
        private String type;
        public Builder() {}
        public Builder(OnlineArchiveCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateField = defaults.dateField;
    	      this.dateFormat = defaults.dateFormat;
    	      this.expireAfterDays = defaults.expireAfterDays;
    	      this.query = defaults.query;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dateField(@Nullable String dateField) {
            this.dateField = dateField;
            return this;
        }
        @CustomType.Setter
        public Builder dateFormat(@Nullable String dateFormat) {
            this.dateFormat = dateFormat;
            return this;
        }
        @CustomType.Setter
        public Builder expireAfterDays(@Nullable Integer expireAfterDays) {
            this.expireAfterDays = expireAfterDays;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable String query) {
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public OnlineArchiveCriteria build() {
            final var o = new OnlineArchiveCriteria();
            o.dateField = dateField;
            o.dateFormat = dateFormat;
            o.expireAfterDays = expireAfterDays;
            o.query = query;
            o.type = type;
            return o;
        }
    }
}
