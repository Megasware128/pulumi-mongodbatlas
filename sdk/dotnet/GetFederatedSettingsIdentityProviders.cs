// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Mongodbatlas
{
    public static class GetFederatedSettingsIdentityProviders
    {
        /// <summary>
        /// `mongodbatlas.FederatedSettingsIdentityProvider` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var identityProvider = new Mongodbatlas.FederatedSettingsIdentityProvider("identityProvider", new Mongodbatlas.FederatedSettingsIdentityProviderArgs
        ///         {
        ///             FederationSettingsId = "627a9687f7f7f7f774de306f14",
        ///             AssociatedDomains = 
        ///             {
        ///                 "yourdomain.com",
        ///             },
        ///             SsoDebugEnabled = true,
        ///             Status = "ACTIVE",
        ///         });
        ///         var identittyProvider = identityProvider.Id.Apply(id =&gt; Mongodbatlas.GetFederatedSettingsIdentityProviders.Invoke(new Mongodbatlas.GetFederatedSettingsIdentityProvidersInvokeArgs
        ///         {
        ///             FederationSettingsId = id,
        ///             PageNum = 1,
        ///             ItemsPerPage = 5,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFederatedSettingsIdentityProvidersResult> InvokeAsync(GetFederatedSettingsIdentityProvidersArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFederatedSettingsIdentityProvidersResult>("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", args ?? new GetFederatedSettingsIdentityProvidersArgs(), options.WithDefaults());

        /// <summary>
        /// `mongodbatlas.FederatedSettingsIdentityProvider` provides an Federated Settings Identity Providers datasource. Atlas Cloud Federated Settings Identity Providers provides federated settings outputs for the configured Identity Providers.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Mongodbatlas = Pulumi.Mongodbatlas;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var identityProvider = new Mongodbatlas.FederatedSettingsIdentityProvider("identityProvider", new Mongodbatlas.FederatedSettingsIdentityProviderArgs
        ///         {
        ///             FederationSettingsId = "627a9687f7f7f7f774de306f14",
        ///             AssociatedDomains = 
        ///             {
        ///                 "yourdomain.com",
        ///             },
        ///             SsoDebugEnabled = true,
        ///             Status = "ACTIVE",
        ///         });
        ///         var identittyProvider = identityProvider.Id.Apply(id =&gt; Mongodbatlas.GetFederatedSettingsIdentityProviders.Invoke(new Mongodbatlas.GetFederatedSettingsIdentityProvidersInvokeArgs
        ///         {
        ///             FederationSettingsId = id,
        ///             PageNum = 1,
        ///             ItemsPerPage = 5,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFederatedSettingsIdentityProvidersResult> Invoke(GetFederatedSettingsIdentityProvidersInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFederatedSettingsIdentityProvidersResult>("mongodbatlas:index/getFederatedSettingsIdentityProviders:getFederatedSettingsIdentityProviders", args ?? new GetFederatedSettingsIdentityProvidersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFederatedSettingsIdentityProvidersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
        /// </summary>
        [Input("federationSettingsId", required: true)]
        public string FederationSettingsId { get; set; } = null!;

        /// <summary>
        /// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
        /// </summary>
        [Input("itemsPerPage")]
        public int? ItemsPerPage { get; set; }

        /// <summary>
        /// The page to return. Defaults to `1`.
        /// </summary>
        [Input("pageNum")]
        public int? PageNum { get; set; }

        public GetFederatedSettingsIdentityProvidersArgs()
        {
        }
    }

    public sealed class GetFederatedSettingsIdentityProvidersInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
        /// </summary>
        [Input("federationSettingsId", required: true)]
        public Input<string> FederationSettingsId { get; set; } = null!;

        /// <summary>
        /// Number of items to return per page, up to a maximum of 500. Defaults to `100`.
        /// </summary>
        [Input("itemsPerPage")]
        public Input<int>? ItemsPerPage { get; set; }

        /// <summary>
        /// The page to return. Defaults to `1`.
        /// </summary>
        [Input("pageNum")]
        public Input<int>? PageNum { get; set; }

        public GetFederatedSettingsIdentityProvidersInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFederatedSettingsIdentityProvidersResult
    {
        /// <summary>
        /// Unique 24-hexadecimal digit string that identifies the federated authentication configuration.
        /// </summary>
        public readonly string FederationSettingsId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? ItemsPerPage;
        public readonly int? PageNum;
        /// <summary>
        /// Includes cloudProviderSnapshot object for each item detailed in the results array section.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFederatedSettingsIdentityProvidersResultResult> Results;

        [OutputConstructor]
        private GetFederatedSettingsIdentityProvidersResult(
            string federationSettingsId,

            string id,

            int? itemsPerPage,

            int? pageNum,

            ImmutableArray<Outputs.GetFederatedSettingsIdentityProvidersResultResult> results)
        {
            FederationSettingsId = federationSettingsId;
            Id = id;
            ItemsPerPage = itemsPerPage;
            PageNum = pageNum;
            Results = results;
        }
    }
}
