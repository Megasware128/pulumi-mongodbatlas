// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mongodbatlas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DataLakeDataProcessRegionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataLakeDataProcessRegionArgs Empty = new DataLakeDataProcessRegionArgs();

    @Import(name="cloudProvider", required=true)
    private Output<String> cloudProvider;

    public Output<String> cloudProvider() {
        return this.cloudProvider;
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    private DataLakeDataProcessRegionArgs() {}

    private DataLakeDataProcessRegionArgs(DataLakeDataProcessRegionArgs $) {
        this.cloudProvider = $.cloudProvider;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataLakeDataProcessRegionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataLakeDataProcessRegionArgs $;

        public Builder() {
            $ = new DataLakeDataProcessRegionArgs();
        }

        public Builder(DataLakeDataProcessRegionArgs defaults) {
            $ = new DataLakeDataProcessRegionArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudProvider(Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public DataLakeDataProcessRegionArgs build() {
            $.cloudProvider = Objects.requireNonNull($.cloudProvider, "expected parameter 'cloudProvider' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
